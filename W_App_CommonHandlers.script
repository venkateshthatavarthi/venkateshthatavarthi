to handle DevFetchingDataForUAT

	set myFile to ResourcePath("Dev_UAT_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			(*set first item of MyLine to "Done"*)
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global DeviationDateDue
			replace every occurrence of "_" in global DeviationDateDue with " "
			
			put item 10 of MyLine into global GBU			
			put item 11 of MyLine into global DvSourceOfIncident			
			put item 12 of MyLine into global DvTypeOfIncident			
			put item 13 of MyLine into global DvRelatedQMSElement			
			
			put item 14 of MyLine into global DeviationOccurrenceDueDate
			replace every occurrence of "_" in global DeviationOccurrenceDueDate with " "
			
			put item 15 of MyLine into global DeviationEstimatedSeverity
			put item 16 of MyLine into global DeviationImpactedLocation
			put item 17 of MyLine into global DeviationRegulatoryClassification
			put item 18 of MyLine into global DCUserID
			put item 19 of MyLine into global DCusername
			put item 20 of MyLine into global DCpassword
			
			put item 21 of MyLine into global FA
			put item 22 of MyLine into global FAusername
			put item 23 of MyLine into global FApassword
			put item 24 of MyLine into global QA
			put item 25 of MyLine into global QAusername
			put item 26 of MyLine into global QApassword
			
			put item 27 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 28 of MyLine into global MitigationDateDue
			replace every occurrence of "_" in global MitigationDateDue with " "
			
			put item 29 of MyLine into global MtActionOwnerUsername
			put item 30 of MyLine into global AOusername
			put item 31 of MyLine into global AOpassword
			put item 32 of MyLine into global CompleteMitigationActionVerdict
			
			put item 33 of MyLine into global InvestigationDateDue
			replace every occurrence of "_" in global InvestigationDateDue with " "
			
			put item 34 of MyLine into global InvstigationActionOwnerUsername
			put item 35 of MyLine into global CompleteInvestigationActionVerdict
			
			put item 36 of MyLine into global CapaProgramDateDue
			replace every occurrence of "_" in global CapaProgramDateDue with " "
			
			put item 37 of MyLine into global CapaPlanDateDue
			replace every occurrence of "_" in global CapaPlanDateDue with " "
			
			put item 38 of MyLine into global CapaItemType
			put item 39 of MyLine into global CapaActionOwnerUsername
			put item 40 of MyLine into global RCATool
			put item 41 of MyLine into global RiskAssessmentTool
			put item 42 of MyLine into global ISRepeatOccurrence
			put item 43 of MyLine into global PotentialRiskToPatientConsumer
			put item 44 of MyLine into global PotentialCompliance
			put item 45 of MyLine into global PotentialRiskOfImpactingEfficacy
			put item 46 of MyLine into global CAPAProgram
			put item 47 of MyLine into global CompleteInvestigationRCAVerdict
			put item 48 of MyLine into global CompleteInvestigationRCA_FArequired
			put item 49 of MyLine into global Dev_FAverdict
			put item 50 of MyLine into global DV_QAverdict
			put item 51 of MyLine into global PendingCancellationFunctionApprovalVerdict
			put item 52 of MyLine into global PendingCancellationQualityApprovalVerdict
			put item 53 of MyLine into global Capa_Required
			put item 54 of MyLine into global ExistingCapaProgramRequired
			put item 55 of MyLine into global PendingCancellationFunctionApprovalVerdict_Duplicate
			put item 56 of MyLine into global ReviewMitigationActionCompletionVerdict
			put item 57 of MyLine into global DeviationBusinessFunction
			put item 58 of MyLine into global AssignDeviationCoordinatorVerdict
			put item 59 of MyLine into global UpdateActionReSubmitVerdict_MT
			put item 60 of MyLine into global UpdateActionReSubmitVerdict_Investigation
			
			put item 61 of MyLine into global CAPACoordinator
			put item 62 of MyLine into global CPCusername
			put item 63 of MyLine into global CPCpassword
			put item 64 of MyLine into global ReviewTheCompletedActionVerdict
			put item 65 of MyLine into global ReviewTheCompletedAction_DemonstratesEffectiveness
			put item 66 of MyLine into global QA2
			put item 67 of MyLine into global QA2username
			put item 68 of MyLine into global QA2password
			put item 69 of MyLine into global ActionOwner
			put item 70 of MyLine into global CompleteTheActionVerdict
			put item 71 of MyLine into global CompleteTheAction_Function_Approver_Required
			put item 72 of MyLine into global ProgressActionForPreApprovalVerdict
			put item 73 of MyLine into global ProgressActionForPreApproval_FArequired
			put item 74 of MyLine into global PendingFunctionPreApprovalVerdict
			put item 75 of MyLine into global PendingQualityPreApprovalVerdict
			put item 76 of MyLine into global Review_PostApproval_Of_CompletedCAPA_Verdict
			
			put item 77 of MyLine into global ComplaintCoordinatorFirstName
			put item 78 of MyLine into global ComplaintCoordinatorusername
			put item 79 of MyLine into global ComplaintCoordinatorpassword
			
			put item 80 of MyLine into global ICFirstName
			put item 81 of MyLine into global RootCauseOfWhyVerdict
			put item 82 of MyLine into global FunctionCancellationApprovalVerdict
			put item 83 of MyLine into global QualityCancellationApprovalVerdict
			put item 84 of MyLine into global ChildRecordId
			put item 85 of MyLine into global FunctionCancellationApprovalVerdict_Duplicate
			put item 86 of MyLine into global PendingFunctionPreApprovalVerdict_Duplicate
			put item 87 of MyLine into global FA_second
			put item 88 of MyLine into global PFAUsername
			put item 89 of MyLine into global PFAPassword
			put item 90 of MyLine into global AffectedLocationType
			put item 91 of MyLine into global BrandSpecific
			
			
			Exit repeat
		end if
	end repeat
	
end DevFetchingDataForUAT

//ChangeControlUATFetchingData
to handle ChangeControlUATFetchingData

	set myFile to ResourcePath("CCTestData_UAT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			(*set first item of MyLine to "Done"*)
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global CCChangeType
			put item 11 of MyLine into global CCReasonDrivers
			put item 12 of MyLine into global CCImpactedLocation
			put item 13 of MyLine into global CCDetailedDescription
			put item 14 of MyLine into global CCChangeJustification
			put item 15 of MyLine into global CCDateDue
			replace every occurrence of "_" in global CCDateDue with " "
			
			
			put item 16 of MyLine into global CCUserID
			put item 17 of MyLine into global CCusername
			put item 18 of MyLine into global CCpassword
			put item 19 of MyLine into global RecordType
			put item 20 of MyLine into global AIShortDescription
			put item 21 of MyLine into global AIDescription
			put item 22 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			
			put item 23 of MyLine into global IAShortDescription
			put item 24 of MyLine into global IADescription
			put item 25 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			//
			put item 26 of MyLine into global AssessorID
			put item 27 of MyLine into global AssessorUsername
			put item 28 of MyLine into global AssessorPassword
			put item 29 of MyLine into global AIAssessmentVerdict
			put item 30 of MyLine into global ReasonForCancel
			put item 31 of MyLine into global PIAverdict
			put item 32 of MyLine into global ReasonForClosing
			put item 33 of MyLine into global conclusionSummary
			put item 34 of MyLine into global ImplementationSuccessCriteria
			put item 35 of MyLine into global OverAllRisk
			put item 36 of MyLine into global FAusername
			put item 37 of MyLine into global FApassword
			put item 38 of MyLine into global FAverdict
			put item 39 of MyLine into global QAusername
			put item 40 of MyLine into global QApassword
			put item 41 of MyLine into global QAverdict
			put item 42 of MyLine into global AOusername
			put item 43 of MyLine into global AOpassword
			put item 44 of MyLine into global IACverdict
			put item 45 of MyLine into global CCReviewVerdict
			put item 46 of MyLine into global DMEffectiveness
			put item 47 of MyLine into global PFArequired
			put item 48 of MyLine into global FAFinalApproveVerdict
			put item 49 of MyLine into global FAFINALdemonstrateEffectiveness
			put item 50 of MyLine into global QPAverdict
			put item 51 of MyLine into global QPAdemonstrateEffectiveness
			put item 52 of MyLine into global ActionOwner
			put item 53 of MyLine into global ACTDateDue
			replace every occurrence of "_" in global ACTDateDue with " "
			
			put item 54 of MyLine into global ActivityOwnerName
			put item 55 of MyLine into global ActivityOwnerusername
			put item 56 of MyLine into global ActivityOwnerpassword
			put item 57 of MyLine into global ImplementationActivityToBeCompletedVerdict
			put item 58 of MyLine into global FA
			put item 59 of MyLine into global QA
			put item 60 of MyLine into global PFA
			put item 61 of MyLine into global PFAUsername
			put item 62 of MyLine into global PFAPassword
			put item 63 of MyLine into global FunctionApprovalofCCClosureVerdict
			put item 64 of MyLine into global QualityApprovalofCCClosureVerdict
			put item 65 of MyLine into global ImplementtheChangeVerdict
			put item 66 of MyLine into global FormalRiskAssessmentRequired
			put item 67 of MyLine into global OverAllRisk
			put item 68 of MyLine into global CC_AssignToChangeCordinator_Verdict
			put item 69 of MyLine into global SubmitActionForPreApproval_Verdict
			put item 70 of MyLine into global FA_Require_Not
			put item 71 of MyLine into global FunctionApprovalofAction_Verdict
			put item 72 of MyLine into global QualityApprovalofAction_verdict
			put item 73 of MyLine into global MilestoneDateDue
			replace every occurrence of "_" in global MilestoneDateDue with " "
			
			put item 74 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 75 of MyLine into global PostFunctionApproverFirstNameofOther
			put item 76 of MyLine into global PostQualityApproverFirstNameofOther
			put item 77 of MyLine into global FA_second
			put item 78 of MyLine into global PFA_second
			
			Exit repeat
		end if
	end repeat
	
end ChangeControlUATFetchingData

//ImplementationActivityUATFetchingData
to handle ImplementationActivityUATFetchingData

	set myFile to ResourcePath("ACTTestData_UAT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			//set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global CCChangeType
			put item 11 of MyLine into global CCReasonDrivers
			put item 12 of MyLine into global CCImpactedLocation
			put item 13 of MyLine into global CCDetailedDescription
			put item 14 of MyLine into global CCChangeJustification
			put item 15 of MyLine into global CCDateDue
			replace every occurrence of "_" in global CCDateDue with " "
			
			
			put item 16 of MyLine into global CCUserID
			put item 17 of MyLine into global CCusername
			put item 18 of MyLine into global CCpassword
			put item 19 of MyLine into global RecordType
			put item 20 of MyLine into global AIShortDescription
			put item 21 of MyLine into global AIDescription
			put item 22 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			
			put item 23 of MyLine into global IAShortDescription
			put item 24 of MyLine into global IADescription
			put item 25 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			//
			put item 26 of MyLine into global AssessorID
			put item 27 of MyLine into global AssessorUsername
			put item 28 of MyLine into global AssessorPassword
			put item 29 of MyLine into global AIAssessmentVerdict
			put item 30 of MyLine into global PIAverdict
			put item 31 of MyLine into global conclusionSummary
			put item 32 of MyLine into global ImplementationSuccessCriteria
			put item 33 of MyLine into global OverAllRisk
			put item 34 of MyLine into global FAusername
			put item 35 of MyLine into global FApassword
			put item 36 of MyLine into global FAverdict
			put item 37 of MyLine into global QAusername
			put item 38 of MyLine into global QApassword
			put item 39 of MyLine into global QAverdict
			put item 40 of MyLine into global AOusername
			put item 41 of MyLine into global AOpassword
			put item 42 of MyLine into global IACverdict
			put item 43 of MyLine into global ActionOwner
			put item 44 of MyLine into global FA
			put item 45 of MyLine into global QA
			put item 46 of MyLine into global FormalRiskAssessmentRequired
			put item 47 of MyLine into global OverAllRisk
			put item 48 of MyLine into global CC_AssignToChangeCordinator_Verdict
			put item 49 of MyLine into global ACTDateDue
			replace every occurrence of "_" in global ACTDateDue with " "
			
			put item 50 of MyLine into global ActivityOwnerName
			put item 51 of MyLine into global ActivityOwnerusername
			put item 52 of MyLine into global ActivityOwnerpassword
			put item 53 of MyLine into global ImplementationActivityToBeCompletedVerdict
			put item 54 of MyLine into global UpdateActivityVerdict
			
			put item 55 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			
			put item 56 of MyLine into global ActivityOwnerFirstNameofOther
			put item 57 of MyLine into global ActivityOwnerusername_second
			put item 58 of MyLine into global ActivityOwnerpassword_second
			
			Exit repeat
		end if
	end repeat
	
end ImplementationActivityUATFetchingData


//Fetching Data for Deviation for UAT

function ScreenPart Portion

	// Set up an easy-to-maintain property list that stores the necessary multipliers for the specified screen portion parameter value
	
	set screenPortions to {
		
		TopHalf: [[0,0],[1,.5]],
		
		BottomHalf: [[0,.5],[1,1]],

		Section: [[0.03,0.22],[.25,1]],

		HalfLeftHalf: [[0,0],[.5,1]],

		LeftHalf: [[0,0],[.5,1]],
		
		RightHalf: [[.5,0],[1,1]],
		
		HorizontalMiddle: [[0,.25],[1,.75]],
		
		VerticalMiddle:[[.25,0],[.75,1]],
		
		TopLeftQuadrant:[[0,0],[.5,.5]],
		
		TopRightQuadrant:[[.5,0],[1,.5]],
		
		BottomLeftQuadrant:[[0,.5],[.5,1]],
		
		BottomRightQuadrant:[[.5,.5],[1,1]],
		
		Center:[[.25,.25],[.75,.75]],

	}
	
	set multiplier to screenPortions.(Portion) // Retrieves the value for the key in the property list. The name of the key is passed as a parameter into the function.
	
	// Error handling is needed in the event that an unrecognized parameter is passed to the function
	
	if multiplier is empty then
		
		throw "Parameter error", Portion && "is not a recognized screen portion."
		
	end if
	
	return (the remoteScreenSize,the remotescreenSize) * multiplier
	
End ScreenPart






(*to handle DevFetchingDataForUAT

	set myFile to ResourcePath("Dev_UAT_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			//set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global DeviationDateDue
			replace every occurrence of "_" in global DeviationDateDue with " "
			
			put item 10 of MyLine into global GBU			
			put item 11 of MyLine into global DvSourceOfIncident			
			put item 12 of MyLine into global DvTypeOfIncident			
			put item 13 of MyLine into global DvRelatedQMSElement			
			
			put item 14 of MyLine into global DeviationOccurrenceDueDate
			replace every occurrence of "_" in global DeviationOccurrenceDueDate with " "
			
			put item 15 of MyLine into global DeviationEstimatedSeverity
			put item 16 of MyLine into global DeviationImpactedLocation
			put item 17 of MyLine into global DeviationRegulatoryClassification
			put item 18 of MyLine into global DCUserID
			put item 19 of MyLine into global DCusername
			put item 20 of MyLine into global DCpassword
			
			put item 21 of MyLine into global FA
			put item 22 of MyLine into global FAusername
			put item 23 of MyLine into global FApassword
			put item 24 of MyLine into global QA
			put item 25 of MyLine into global QAusername
			put item 26 of MyLine into global QApassword
			
			put item 27 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 28 of MyLine into global MitigationDateDue
			replace every occurrence of "_" in global MitigationDateDue with " "
			
			put item 29 of MyLine into global MtActionOwnerUsername
			put item 30 of MyLine into global AOusername
			put item 31 of MyLine into global AOpassword
			put item 32 of MyLine into global CompleteMitigationActionVerdict
			
			put item 33 of MyLine into global InvestigationDateDue
			replace every occurrence of "_" in global InvestigationDateDue with " "
			
			put item 34 of MyLine into global InvstigationActionOwnerUsername
			put item 35 of MyLine into global CompleteInvestigationActionVerdict
			
			put item 36 of MyLine into global CapaProgramDateDue
			replace every occurrence of "_" in global CapaProgramDateDue with " "
			
			put item 37 of MyLine into global CapaPlanDateDue
			replace every occurrence of "_" in global CapaPlanDateDue with " "
			
			put item 38 of MyLine into global CapaItemType
			put item 39 of MyLine into global CapaActionOwnerUsername
			put item 40 of MyLine into global RCATool
			put item 41 of MyLine into global RiskAssessmentTool
			put item 42 of MyLine into global ISRepeatOccurrence
			put item 43 of MyLine into global PotentialRiskToPatientConsumer
			put item 44 of MyLine into global PotentialCompliance
			put item 45 of MyLine into global PotentialRiskOfImpactingEfficacy
			put item 46 of MyLine into global CAPAProgram
			put item 47 of MyLine into global CompleteInvestigationRCAVerdict
			put item 48 of MyLine into global CompleteInvestigationRCA_FArequired
			put item 49 of MyLine into global Dev_FAverdict
			put item 50 of MyLine into global DV_QAverdict
			put item 51 of MyLine into global PendingCancellationFunctionApprovalVerdict
			put item 52 of MyLine into global PendingCancellationQualityApprovalVerdict
			put item 53 of MyLine into global Capa_Required
			put item 54 of MyLine into global ExistingCapaProgramRequired
			put item 55 of MyLine into global PendingCancellationFunctionApprovalVerdict_Duplicate
			put item 56 of MyLine into global ReviewMitigationActionCompletionVerdict
			
			
			
			Exit repeat
		end if
	end repeat
	
end DevFetchingDataForUAT*)



//FetchingDataForCapaProgram
to handle CapaProgramFetchingData

	set myFile to ResourcePath("CapaProgram_TestData_SIT.csv")
	
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global DCusername
			put item 6 of MyLine into global DCpassword
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 10 of MyLine into global CPC_ForProgram_Username			
			put item 11 of MyLine into global CPC_ForProgram_Password			
			put item 12 of MyLine into global QAusername			
			put item 13 of MyLine into global QApassword
			
			put item 14 of MyLine into global ChildRecordId
			set the suitevariables.CRecordId to global ChildRecordId
			
			put item 15 of MyLine into global CPC_ForCapaItem_Username
			put item 16 of MyLine into global CPC_ForCapaItem_Password
			put item 17 of MyLine into global ActionOwnerFirstName
			put item 18 of MyLine into global AOusername
			put item 19 of MyLine into global AOpassword
			put item 20 of MyLine into global CompleteTheActionVerdict
			
			put item 21 of MyLine into global CompleteTheAction_Function_Approver_Required
			put item 22 of MyLine into global ReviewTheCompletedActionVerdict
			put item 23 of MyLine into global ReviewTheCompletedAction_DemonstratesEffectiveness
			put item 24 of MyLine into global Review_PostApproval_Of_CompletedCAPA_Verdict
			put item 25 of MyLine into global QAFirstName
			put item 26 of MyLine into global CPC_ForProgramFirstName
			put item 27 of MyLine into global CPC_ForCapaItemFirstName
			//
			Exit repeat
		end if
	end repeat
	
end CapaProgramFetchingData
//Fetching Data for Complaint Action
to handle CMAFetchingData

	set myFile to ResourcePath("CMATestData_SIT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCGBU
			put item 9 of MyLine into global RecordType
			
			put item 10 of MyLine into global ComplaintCoordinatorusername
			put item 11 of MyLine into global ComplaintCoordinatorpassword
			put item 12 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			put item 13 of MyLine into global CMADateDue
			replace every occurrence of "_" in global CMADateDue with " "
			
			put item 14 of MyLine into global ComplaintCoordinatorDecision
			put item 15 of MyLine into global AOusername
			put item 16 of MyLine into global AOpassword
			put item 15 of MyLine into global AOusername
			put item 16 of MyLine into global AOpassword
			put item 17 of MyLine into global CMA_AOVerdict
			
			put item 18 of MyLine into global ReasonForCancel
			put item 19 of MyLine into global CMARecordId
			put item 20 of MyLine into global CMDateDue
			replace every occurrence of "_" in global CMDateDue with " "
			put item 21 of MyLine into global NewCMADateDue
			replace every occurrence of "_" in global NewCMADateDue with " "
			
			put item 22 of MyLine into global NewAOUsername
			
			put item 23 of MyLine into global ConfirmOutComeOfCMVerdict
			
			//
			Exit repeat
		end if
	end repeat
	
end CMAFetchingData
//Fetching Data for Complaint Assessment

to handle CMFetchingData

	set myFile to ResourcePath("CMTestData_SIT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCGBU
			
			put item 9 of MyLine into global CMDateDue
			replace every occurrence of "_" in global CMDateDue with " "
			put item 10 of MyLine into global ComplaintSource
			
			put item 11 of MyLine into global ComplaintPriority
			put item 12 of MyLine into global OccurrenceDate
			replace every occurrence of "_" in global OccurrenceDate with " "
			put item 13 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			put item 14 of MyLine into global ComplaintCoordinatorFirstName
			put item 15 of MyLine into global ComplaintCoordinatorusername
			
			put item 16 of MyLine into global ComplaintCoordinatorpassword
			put item 17 of MyLine into global RecordType
			put item 18 of MyLine into global CM_DeviationNeeded
			put item 19 of MyLine into global CM_PeerReviewRequired
			
			
			put item 20 of MyLine into global ComplaintCoordinatorReviewerFirstName
			
			put item 21 of MyLine into global ConfirmOutComeOfCMVerdict
			put item 22 of MyLine into global ReasonForCancel
			put item 23 of MyLine into global ComplaintCoordinatorReviewerUsername
			put item 24 of MyLine into global ComplaintCoordinatorReviewerPassword
			put item 25 of MyLine into global  ConfirmOutComeOfReviewVerdict
			
			put item 26 of MyLine into global  ExistingDeviation
			put item 27 of MyLine into global  ComplaintCoordinatorFirstNameofOther
			put item 28 of MyLine into global  Reference_object_type_item1
			put item 29 of MyLine into global  NewCMADateDue
			replace every occurrence of "_" in global NewCMADateDue with " "
			
			put item 30 of MyLine into global  ComplaintCoordinatorReviewerFirstNameofOther
			
			//
			Exit repeat
		end if
	end repeat
	
end CMFetchingData
//Fetching Data for Change Control

to handle ChangeControlFetchingData

	set myFile to ResourcePath("CCTestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global CCChangeType
			put item 11 of MyLine into global CCReasonDrivers
			put item 12 of MyLine into global CCImpactedLocation
			put item 13 of MyLine into global CCDetailedDescription
			put item 14 of MyLine into global CCChangeJustification
			put item 15 of MyLine into global CCDateDue
			replace every occurrence of "_" in global CCDateDue with " "
			
			
			put item 16 of MyLine into global CCUserID
			put item 17 of MyLine into global CCusername
			put item 18 of MyLine into global CCpassword
			put item 19 of MyLine into global RecordType
			put item 20 of MyLine into global AIShortDescription
			put item 21 of MyLine into global AIDescription
			put item 22 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			
			put item 23 of MyLine into global IAShortDescription
			put item 24 of MyLine into global IADescription
			put item 25 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			//
			put item 26 of MyLine into global AssessorID
			put item 27 of MyLine into global AssessorUsername
			put item 28 of MyLine into global AssessorPassword
			put item 29 of MyLine into global AIAssessmentVerdict
			put item 30 of MyLine into global ReasonForCancel
			put item 31 of MyLine into global PIAverdict
			put item 32 of MyLine into global ReasonForClosing
			put item 33 of MyLine into global NPClosureVerdict
			put item 34 of MyLine into global conclusionSummary
			put item 35 of MyLine into global ImplementationSuccessCriteria
			put item 36 of MyLine into global OverAllRisk
			put item 37 of MyLine into global FAusername
			put item 38 of MyLine into global FApassword
			put item 39 of MyLine into global FAverdict
			put item 40 of MyLine into global QAusername
			put item 41 of MyLine into global QApassword
			put item 42 of MyLine into global QAverdict
			put item 43 of MyLine into global AOusername
			put item 44 of MyLine into global AOpassword
			put item 45 of MyLine into global IACverdict
			put item 46 of MyLine into global CCReviewVerdict
			put item 47 of MyLine into global DMEffectiveness
			put item 48 of MyLine into global PFArequired
			put item 49 of MyLine into global FAFinalApproveVerdict
			put item 50 of MyLine into global FAFINALdemonstrateEffectiveness
			put item 51 of MyLine into global QPAverdict
			put item 52 of MyLine into global QPAdemonstrateEffectiveness
			put item 53 of MyLine into global ActionOwner
			put item 54 of MyLine into global ACTDateDue
			replace every occurrence of "_" in global ACTDateDue with " "
			
			put item 55 of MyLine into global ActivityOwnerName
			put item 56 of MyLine into global ActivityOwnerusername
			put item 57 of MyLine into global ActivityOwnerpassword
			put item 58 of MyLine into global ImplementationActivityToBeCompletedVerdict
			put item 59 of MyLine into global FA
			put item 60 of MyLine into global QA
			put item 61 of MyLine into global PFA
			put item 62 of MyLine into global PFAUsername
			put item 63 of MyLine into global PFAPassword
			put item 64 of MyLine into global FunctionApprovalofCCClosureVerdict
			put item 65 of MyLine into global QualityApprovalofCCClosureVerdict
			put item 66 of MyLine into global ImplementtheChangeVerdict
			put item 67 of MyLine into global FormalRiskAssessmentRequired
			put item 68 of MyLine into global OverAllRisk
			put item 69 of MyLine into global CC_AssignToChangeCordinator_Verdict
			put item 70 of MyLine into global FunctionPostApproverRequired
			
			Exit repeat
		end if
	end repeat
	
end ChangeControlFetchingData

to handle LaunchAndLoginToApplication_Originator_QI

	PreExecution_ForModels "QITestData_UAT.csv"
	QIFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_Originator
	
end LaunchAndLoginToApplication_Originator_QI

to handle PreExecution_ForModels DataFileName
	set myFile to ResourcePath(DataFileName)
	Put 0 into mcount
	repeat with MyLine = each line of line 2 to the last of file myFile
		(*log DataFileName*)
		if first item of MyLine is "Yes" 
			put mcount+1 into mcount
			Put mcount into VTestCaseCountForExecution
			//put repeatindex() into VTestCaseCountForExecution
			
			
			set the suitevariables.TestCaseCountForExecution to VTestCaseCountForExecution
		end if
	end repeat
	// write the below code in the PreExecutionScript End
	
	
	//for screenshots
	
	
	
	put the suiteinfo.path&"/AllScreenshots" into screenshotsFolder
	put the date&the time into currentExecutionTime
	delete every occurrence of "/" from currentExecutionTime
	delete every occurrence of ":" from currentExecutionTime
	delete every occurrence of " " from currentExecutionTime
	//put  screenshotsFolder&"/"&currentExecutionTime into global currentScreenshotsFolder
	
	
	set the suitevariables.currentScreenshotsFolder to screenshotsFolder&"/"&currentExecutionTime
	//log the suitevariables.currentScreenshotsFolder
	if folder screenshotsFolder exists then
		
	else
		create new folder screenshotsFolder
	end if
	
	if folder the suitevariables.currentScreenshotsFolder exists then
		
	else
		create new folder the suitevariables.currentScreenshotsFolder
	end if
	put 1 into global screenshotNum
	put 1 into the suitevariables.screenshotNum
	
end PreExecution_ForModels

to handle QIFetchingData

	set myFile to ResourcePath("QITestData_UAT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			//set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put item 3 of MyLine into global SUTName
			log global SUTName
			
			put item 4 of MyLine into global URL
			
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global RecordType
			put item 11 of MyLine into global QI_IncidentType
			put item 12 of MyLine into global QI_eCommerceImpact
			
			put item 13 of MyLine into global QI_MedicalDeviceYesOrNo
			put item 14 of MyLine into global QI_Subsource
			
			put item 15 of MyLine into global QIOccurrenceDate
			
			replace every occurrence of "_" in global QIOccurrenceDate with " "
			
			
			put item 16 of MyLine into global QIAffectedLocationType
			put item 17 of MyLine into global QiProductInfo
			put item 18 of MyLine into global QI_Deviation
			put item 19 of MyLine into global ExistingDeviation
			put item 20 of MyLine into global NICusername
			put item 21 of MyLine into global NICpassword
			put item 22 of MyLine into global Potential_impact_to_product_quality
			
			
			put item 23 of MyLine into global Potential_impact_to_product_registration
			put item 24 of MyLine into global Previous_deviations_or_incidents
			put item 25 of MyLine into global Further_investigation_required
			
			//
			put item 26 of MyLine into global Further_actions_required
			put item 27 of MyLine into global Severity_of_potential_harm
			put item 28 of MyLine into global Likelihood_of_future_detection
			put item 29 of MyLine into global Reference_object_type_item1
			put item 30 of MyLine into global NQAusername
			put item 31 of MyLine into global NQApassword
			
			put item 32 of MyLine into global QIVerdict
			put item 33 of MyLine into global QIReasonforCancellation
			
			put item 34 of MyLine into global QIQAClosureApprovalVerdict
			
			put item 35 of MyLine into global ApprovalOfQICancellationVerdict
			put item 36 of MyLine into global NewNQAUsername
			put item 37 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 38 of MyLine into global ICFirstName
			
			put item 39 of MyLine into global QAFirstName
			
			//
			Exit repeat
		end if
	end repeat
	
end QIFetchingData

//Fetching Data for Preventive Action

to handle PreventiveActionFetchingData

	set myFile to ResourcePath("Dev_PreventiveAction_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global DCusername
			put item 6 of MyLine into global DCpassword
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global GivenRecordId
			Set the suitevariables.RecordId to global GivenRecordId
			
			put item 10 of MyLine into global ActionOwner
			put item 11 of MyLine into global AOusername
			put item 12 of MyLine into global AOpassword
			put item 13 of MyLine into global CompleteTheActionVerdict
			
			put item 14 of MyLine into global CompleteTheAction_Function_Approver_Required
			
			put item 15 of MyLine into global CAPACoordinator
			put item 16 of MyLine into global CPCusername
			put item 17 of MyLine into global CPCpassword
			put item 18 of MyLine into global ReviewTheCompletedActionVerdict
			put item 19 of MyLine into global ReviewTheCompletedAction_DemonstratesEffectiveness
			put item 20 of MyLine into global FA
			
			put item 21 of MyLine into global FAusername
			put item 22 of MyLine into global FApassword
			put item 23 of MyLine into global QA
			put item 24 of MyLine into global QAusername
			put item 25 of MyLine into global QApassword
			put item 26 of MyLine into global FunctionCancellationApprovalVerdict
			
			put item 27 of MyLine into global QualityCancellationApprovalVerdict
			
			put item 28 of MyLine into global ChildRecordId			
			
			put item 29 of MyLine into global CapaPlanDateDue
			replace every occurrence of "_" in global CapaPlanDateDue with " "
			
			put item 30 of MyLine into global CapaItemType
			Exit repeat
		end if
	end repeat
	
end PreventiveActionFetchingData


//Fetching Data for Corrective Action

to handle CorrectiveActionFetchingData

	set myFile to ResourcePath("Dev_CorrectiveAction_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global DCusername
			put item 6 of MyLine into global DCpassword
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global GivenRecordId
			Set the suitevariables.RecordId to global GivenRecordId
			
			put item 10 of MyLine into global ActionOwner
			put item 11 of MyLine into global AOusername
			put item 12 of MyLine into global AOpassword
			put item 13 of MyLine into global CompleteTheActionVerdict
			
			put item 14 of MyLine into global CompleteTheAction_Function_Approver_Required
			
			put item 15 of MyLine into global CAPACoordinator
			put item 16 of MyLine into global CPCusername
			put item 17 of MyLine into global CPCpassword
			put item 18 of MyLine into global ReviewTheCompletedActionVerdict
			put item 19 of MyLine into global ReviewTheCompletedAction_DemonstratesEffectiveness
			put item 20 of MyLine into global FA
			
			put item 21 of MyLine into global FAusername
			put item 22 of MyLine into global FApassword
			put item 23 of MyLine into global QA
			put item 24 of MyLine into global QAusername
			put item 25 of MyLine into global QApassword
			put item 26 of MyLine into global FunctionCancellationApprovalVerdict
			
			put item 27 of MyLine into global QualityCancellationApprovalVerdict
			
			put item 28 of MyLine into global ChildRecordId			
			
			put item 29 of MyLine into global CapaPlanDateDue
			replace every occurrence of "_" in global CapaPlanDateDue with " "
			
			put item 30 of MyLine into global CapaItemType
			Exit repeat
		end if
	end repeat
	
end CorrectiveActionFetchingData


//Fetching Data for Deviation

to handle DevFetchingData

	set myFile to ResourcePath("Dev_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			put item 9 of MyLine into global DeviationDateDue
			replace every occurrence of "_" in global DeviationDateDue with " "
			
			put item 10 of MyLine into global GBU			
			put item 11 of MyLine into global DvSourceOfIncident			
			put item 12 of MyLine into global DvTypeOfIncident			
			put item 13 of MyLine into global DvRelatedQMSElement			
			
			put item 14 of MyLine into global DeviationOccurrenceDueDate
			replace every occurrence of "_" in global DeviationOccurrenceDueDate with " "
			
			put item 15 of MyLine into global DeviationEstimatedSeverity
			put item 16 of MyLine into global DeviationImpactedLocation
			put item 17 of MyLine into global DeviationRegulatoryClassification
			put item 18 of MyLine into global DCUserID
			put item 19 of MyLine into global DCusername
			put item 20 of MyLine into global DCpassword
			
			put item 21 of MyLine into global FA
			put item 22 of MyLine into global FAusername
			put item 23 of MyLine into global FApassword
			put item 24 of MyLine into global QA
			put item 25 of MyLine into global QAusername
			put item 26 of MyLine into global QApassword
			
			put item 27 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 28 of MyLine into global MitigationDateDue
			replace every occurrence of "_" in global MitigationDateDue with " "
			
			put item 29 of MyLine into global MtActionOwnerUsername
			put item 30 of MyLine into global AOusername
			put item 31 of MyLine into global AOpassword
			put item 32 of MyLine into global CompleteMitigationActionVerdict
			
			put item 33 of MyLine into global InvestigationDateDue
			replace every occurrence of "_" in global InvestigationDateDue with " "
			
			put item 34 of MyLine into global InvstigationActionOwnerUsername
			put item 35 of MyLine into global CompleteInvestigationActionVerdict
			
			put item 36 of MyLine into global CapaProgramDateDue
			replace every occurrence of "_" in global CapaProgramDateDue with " "
			
			put item 37 of MyLine into global CapaPlanDateDue
			replace every occurrence of "_" in global CapaPlanDateDue with " "
			
			put item 38 of MyLine into global CapaItemType
			put item 39 of MyLine into global CapaActionOwnerUsername
			put item 40 of MyLine into global RCATool
			put item 41 of MyLine into global RiskAssessmentTool
			put item 42 of MyLine into global ISRepeatOccurrence
			put item 43 of MyLine into global PotentialRiskToPatientConsumer
			put item 44 of MyLine into global PotentialCompliance
			put item 45 of MyLine into global PotentialRiskOfImpactingEfficacy
			put item 46 of MyLine into global CAPAProgram
			put item 47 of MyLine into global CompleteInvestigationRCAVerdict
			put item 48 of MyLine into global CompleteInvestigationRCA_FArequired
			put item 49 of MyLine into global Dev_FAverdict
			put item 50 of MyLine into global DV_QAverdict
			put item 51 of MyLine into global PendingCancellationFunctionApprovalVerdict
			put item 52 of MyLine into global PendingCancellationQualityApprovalVerdict
			put item 53 of MyLine into global Capa_Required
			put item 54 of MyLine into global ExistingCapaProgramRequired
			
			Exit repeat
		end if
	end repeat
	
end DevFetchingData

//Fetching Data for Implementation Action

to handle IAFetchingData

	set myFile to ResourcePath("IA_Testdata.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL	
			put item 5 of MyLine into global CCusername	
			put item 6 of MyLine into global CCpassword
			put item 7 of MyLine into global RecordType
			
			put item 8 of MyLine into global GivenRecordId
			Set the suitevariables.RecordId to global GivenRecordId
			
			put item 9 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			
			put item 10 of MyLine into global ActionOwner
			put item 11 of MyLine into global FA	
			put item 12 of MyLine into global QA	
			put item 13 of MyLine into global SubmitActionForPreApproval_Verdict
			put item 14 of MyLine into global FA_Require_Not	
			put item 15 of MyLine into global FAusername	
			put item 16 of MyLine into global FApassword	
			put item 17 of MyLine into global FunctionApprovalofAction_Verdict
			put item 18 of MyLine into global QAusername	
			put item 19 of MyLine into global QApassword	
			put item 20 of MyLine into global QualityApprovalofAction_verdict
			put item 21 of MyLine into global AOusername	
			put item 22 of MyLine into global AOpassword	
			
			put item 23 of MyLine into global ACTDateDue
			replace every occurrence of "_" in global ACTDateDue with " "
			
			put item 24 of MyLine into global ActivityOwnerName	
			put item 25 of MyLine into global ActivityOwnerusername
			put item 26 of MyLine into global ActivityOwnerpassword
			put item 27 of MyLine into global IACverdict
			put item 28 of MyLine into global IAreasonForClosing
			put item 29 of MyLine into global ImplementationActivityToBeCompletedVerdict
			
			Exit repeat
		end if
	end repeat
	
end IAFetchingData

//Fetching Data for Assessment Item

to handle AIFetchingData

	set myFile to ResourcePath("AITestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			
			put item 5 of MyLine into global CCusername
			
			put item 6 of MyLine into global CCpassword
			
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			put item 9 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 10 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			put item 11 of MyLine into global AssessorID
			put item 12 of MyLine into global AssessorUsername	
			put item 13 of MyLine into global AssessorPassword
			put item 14 of MyLine into global AIAssessmentVerdict
			put item 15 of MyLine into global AIUpdateAssessmentVerdict
			Exit repeat
		end if
	end repeat
	
end AIFetchingData


//Fetching Data for Implementation Activities

to handle ACTFetchingData

	set myFile to ResourcePath("ACTTestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global AOusername
			
			put item 6 of MyLine into global AOpassword
			
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			
			
			put item 9 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 10 of MyLine into global ACTDateDue
			replace every occurrence of "_" in global ACTDateDue with " "
			
			put item 11 of MyLine into global ActivityOwnerName
			
			put item 12 of MyLine into global ActivityOwnerUsername
			
			put item 13 of MyLine into global ActivityOwnerPassword
			
			put item 14 of MyLine into global ImplementationActivityToBeCompletedVerdict
			
			put item 15 of MyLine into global UpdateActivityVerdict
			
			Exit repeat
		end if
	end repeat
	
end ACTFetchingData


//Fetching Data for Investigation Actions

to handle InvFetchingData

	set myFile to ResourcePath("Dev_IATestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global DCusername
			put item 6 of MyLine into global DCpassword
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			put item 9 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			put item 10 of MyLine into global InvestigationDateDue
			replace every occurrence of "_" in global InvestigationDateDue with " "
			
			put item 11 of MyLine into global InvstigationActionOwnerUsername
			put item 12 of MyLine into global AOusername
			put item 13 of MyLine into global AOpassword
			put item 14 of MyLine into global CompleteInvestigationActionVerdict
			put item 15 of MyLine into global UpdateActionReSubmitVerdict_Investigation
			
			Exit repeat
		end if
	end repeat
	
end InvFetchingData


//Fetching Data for QI

(*
to handle QIFetchingData

	set myFile to ResourcePath("QITestData_SIT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global RecordType
			put item 11 of MyLine into global QI_IncidentType
			put item 12 of MyLine into global QI_eCommerceImpact
			
			put item 13 of MyLine into global QI_MedicalDeviceYesOrNo
			put item 14 of MyLine into global QI_Subsource
			
			put item 15 of MyLine into global QIOccurrenceDate
			
			replace every occurrence of "_" in global QIOccurrenceDate with " "
			
			
			put item 16 of MyLine into global QIAffectedLocationType
			put item 17 of MyLine into global QiProductInfo
			put item 18 of MyLine into global QI_Deviation
			put item 19 of MyLine into global ExistingDeviation
			put item 20 of MyLine into global NICusername
			put item 21 of MyLine into global NICpassword
			put item 22 of MyLine into global Potential_impact_to_product_quality
			
			
			put item 23 of MyLine into global Potential_impact_to_product_registration
			put item 24 of MyLine into global Previous_deviations_or_incidents
			put item 25 of MyLine into global Further_investigation_required
			
			//
			put item 26 of MyLine into global Further_actions_required
			put item 27 of MyLine into global Severity_of_potential_harm
			put item 28 of MyLine into global Likelihood_of_future_detection
			put item 29 of MyLine into global Reference_object_type_item1
			put item 30 of MyLine into global NQAusername
			put item 31 of MyLine into global NQApassword
			
			put item 32 of MyLine into global QIVerdict
			put item 33 of MyLine into global QIReasonforCancellation
			
			put item 34 of MyLine into global QIQAClosureApprovalVerdict
			
			put item 35 of MyLine into global ApprovalOfQICancellationVerdict
			put item 36 of MyLine into global NewNQAUsername
			put item 37 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 38 of MyLine into global ICFirstName
			
			put item 39 of MyLine into global QAFirstName
			
			//
			Exit repeat
		end if
	end repeat
	
end QIFetchingData
*)

//MitigationAction Data fetching

to handle MTFetchingData

	set myFile to ResourcePath("Dev_MA_TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			put item 3 of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global DCusername
			put item 6 of MyLine into global DCpassword
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global RecordType
			put item 9 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			put item 10 of MyLine into global MitigationDateDue
			replace every occurrence of "_" in global MitigationDateDue with " "
			put item 11 of MyLine into global MtActionOwnerUsername
			put item 12 of MyLine into global AOusername
			
			
			put item 13 of MyLine into global AOpassword
			put item 14 of MyLine into global CompleteMitigationActionVerdict
			put item 15 of MyLine into global UpdateActionReSubmitVerdict_MT
			
			Exit repeat
		end if
	end repeat
	
end MTFetchingData

// fetch data from CSV file for TC

to handle FetchingData
	set myFile to ResourcePath("TestData.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCshortDescription
			put item 9 of MyLine into global CCGBU
			put item 10 of MyLine into global CCChangeType
			put item 11 of MyLine into global CCReasonDrivers
			put item 12 of MyLine into global CCImpactedLocation
			put item 13 of MyLine into global CCDetailedDescription
			put item 14 of MyLine into global CCChangeJustification
			put item 15 of MyLine into global CCDateDue
			replace every occurrence of "_" in global CCDateDue with " "
			
			
			put item 16 of MyLine into global CCUserID
			put item 17 of MyLine into global CCusername
			put item 18 of MyLine into global CCpassword
			put item 19 of MyLine into global RecordType
			put item 20 of MyLine into global AIShortDescription
			put item 21 of MyLine into global AIDescription
			put item 22 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			
			put item 23 of MyLine into global IAShortDescription
			put item 24 of MyLine into global IADescription
			put item 25 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			//
			put item 26 of MyLine into global AssessorID
			put item 27 of MyLine into global AssessorUsername
			put item 28 of MyLine into global AssessorPassword
			put item 29 of MyLine into global AIAssessmentVerdict
			put item 30 of MyLine into global ReasonForCancel
			put item 31 of MyLine into global PIAverdict
			put item 32 of MyLine into global ReasonForClosing
			put item 33 of MyLine into global NPClosureVerdict
			put item 34 of MyLine into global conclusionSummary
			put item 35 of MyLine into global ImplementationSuccessCriteria
			put item 36 of MyLine into global OverAllRisk
			put item 37 of MyLine into global FAusername
			put item 38 of MyLine into global FApassword
			put item 39 of MyLine into global FAverdict
			put item 40 of MyLine into global QAusername
			put item 41 of MyLine into global QApassword
			put item 42 of MyLine into global QAverdict
			put item 43 of MyLine into global AOusername
			put item 44 of MyLine into global AOpassword
			put item 45 of MyLine into global IACverdict
			put item 46 of MyLine into global CCReviewVerdict
			put item 47 of MyLine into global DMEffectiveness
			put item 48 of MyLine into global PFArequired
			put item 49 of MyLine into global FAFinalApproveVerdict
			put item 50 of MyLine into global FAFINALdemonstrateEffectiveness
			put item 51 of MyLine into global QPAverdict
			put item 52 of MyLine into global QPAdemonstrateEffectiveness
			put item 53 of MyLine into global QI_IncidentType
			put item 54 of MyLine into global QI_eCommerceImpact
			put item 55 of MyLine into global QI_Source
			put item 56 of MyLine into global QI_Subsource
			put item 57 of MyLine into global QIOccurrenceDate
			replace every occurrence of "_" in global QIOccurrenceDate with " "
			put item 58 of MyLine into global QIArea
			//LOG global QIArea
			put item 59 of MyLine into global QiProductInfo
			//log global QiProductInfo
			put item 60 of MyLine into global QI_Deviation
			put item 61 of MyLine into global ExistingDeviation
			put item 62 of MyLine into global NICusername
			put item 63 of MyLine into global NICpassword
			put item 64 of MyLine into global Potential_impact_to_product_quality
			put item 65 of MyLine into global Potential_impact_to_product_registration
			put item 66 of MyLine into global Previous_deviations_or_incidents
			put item 67 of MyLine into global Further_investigation_required
			put item 68 of MyLine into global Further_actions_required
			put item 69 of MyLine into global Severity_of_potential_harm
			put item 70 of MyLine into global Likelihood_of_future_detection
			put item 71 of MyLine into global Reference_object_type_item1
			put item 72 of MyLine into global NQAusername
			put item 73 of MyLine into global NQApassword
			put item 74 of MyLine into global QIVerdict
			put item 75 of MyLine into global QIReasonforCancellation
			put item 76 of MyLine into global QIQAClosureApprovalVerdict
			Put item 77 of MyLine into global ApprovalOfQICancellationVerdict
			
			put item 78 of MyLine into global ImplementtheChangeVerdict
			put item 79 of MyLine into global CC_AssignToChangeCordinator_Verdict
			Exit repeat
		end if
	end repeat
end FetchingData

// connecting to SUT(windows machine with name)
to handle ConnectToSUT
	Try
		
		Connect global SUTName
		
		(*connect "SUT199"*)
		Show Remote
		
		wait 2
		//
		
		(*	put the suitevariables.currentScreenshotsFolder&"/"&global TCName into CurrentTCScreenShotFolder
if folder CurrentTCScreenShotFolder exists then

else
create new folder CurrentTCScreenShotFolder
end if*)
		
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
		//throw theException — re-throw the exception (if desired)
	End try
	
	
	//
	
	
end ConnectToSUT

//capturing screenshots and saving in folder
to handle CaptureAtLog
	wait 5
	CaptureScreen the suitevariables.currentScreenshotsFolder&"/"&the suitevariables.screenshotNum
	
	put the suitevariables.screenshotNum + 1 into the suitevariables.screenshotNum
end CaptureAtLog

// Launch web app in chrome browser
to handle LaunchApplication
	//put "https://login.veevavault.com/" into global URL
	try
		if ImageFound(imageName:"LeaveButton", waitFor:3)
			Click FoundImageLocation()
		end if
		
		TypeText windowsKey,"r" 
		wait 3
		Typetext "Chrome"&&global URL&&"-Incognito", return
		if imagefound(image:"YesForChrome") then
			click FoundImageLocation()
		end if
		wait 4
		
		if ImageFound(imageName:"windowMaximizeIcon", waitFor:20)
			click FoundImageLocation()
		end if
		(*if ImageFound(text:"Vault", waitFor:20)
			Put "Veeva Vault Welcome Log In Screen displayed" into global Vstep
		//	Log global Vstep
			
			CaptureAtLog
		else
			Put "Veeva Vault Welcome Log In Screen not displayed" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if*)
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end LaunchApplication

//============//CC handlers============
//  Log in to RB_Veevavault_Application
to handle LoginToApplication_Originator
	LoginToApplication global Originator_Username,global Originator_Password
	
end LoginToApplication_Originator

to handle LoginToApplication_QA
	LoginToApplication global QAusername,global QApassword
	
end LoginToApplication_QA

to handle LoginToApplication_CC
	//Put "CCusername" into global CCusername
	LoginToApplication global CCusername,global CCpassword
end LoginToApplication_CC


to handle LoginToApplication_Assessor
	LoginToApplication global AssessorUsername,global AssessorPassword	
end LoginToApplication_Assessor

to handle LoginToApplication_FA
	LoginToApplication global FAusername,global FApassword
	
end  LoginToApplication_FA

to handle LoginToApplication_PFA
	LoginToApplication global PFAusername,global PFApassword
	
end  LoginToApplication_PFA
to handle LoginToApplication_ActionOwner
	LoginToApplication global AOusername,global AOpassword
	
end LoginToApplication_ActionOwner
to handle LoginToApplication_PFA
	LoginToApplication global PFAUsername,global PFAPassword
	
end LoginToApplication_PFA

// Launch web app in chrome browser
to handle LaunchApplication
	//put "https://login.veevavault.com/" into global URL
	
	if ImageFound(imageName:"LeaveButton", waitFor:3)
		Click FoundImageLocation()
	end if
	
	TypeText windowsKey,"r" 
	wait 3
	Typetext "Chrome"&&global URL&&"-Incognito", return
	if imagefound(image:"YesForChrome") then
		click FoundImageLocation()
	end if
	wait 4
	
	if ImageFound(imageName:"windowMaximizeIcon", waitFor:20)
		click FoundImageLocation()
	end if
	(*if ImageFound(text:"Vault", waitFor:30)
			Put "Veeva Vault Welcome Log In Screen displayed" into global Vstep
		//	Log global Vstep
			
			CaptureAtLog
		else
			Put "Veeva Vault Welcome Log In Screen not displayed" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if*)
	
	
end LaunchApplication

to handle LoginToApplication username,password
	try
		
		if ImageFound(text:"Switch user" ,waitfor:30)
			Click FoundImageLocation()
		end if
		Click imagelocation(text:"Log in",searchrectangle:ScreenPart("VerticalMiddle"))+[0,63]
		TypeText username
		Click imagelocation(text:"Log in",searchrectangle:ScreenPart("VerticalMiddle"))+[300,0]
		Click text:"Continue", waitFor:30,searchrectangle:ScreenPart("VerticalMiddle")
		wait 3
		//WaitFor 50, text:"Password",searchrectangle:ScreenPart("VerticalMiddle")
		//click text:"Password",waitFor:50,searchrectangle:ScreenPart("VerticalMiddle")
		
		TypeText password
		Put "User Entered details in the Login screen" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		Click text:"Log In", waitFor:30,searchrectangle:ScreenPart("VerticalMiddle")
		Wait 5
		
		if ImageFound(text:"QualityOne", waitFor:30,searchrectangle:ScreenPart("TopLeftQuadrant")) or if ImageFound(text:"Home", waitFor:30,searchrectangle:ScreenPart("TopLeftQuadrant")) or if ImageFound(text:"Vault", waitFor:20,searchrectangle:ScreenPart("TopLeftQuadrant"))
			Put "User Sign in Successfully to the application" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "User Sign In Unsuccessfully"  into global Vstep
			LogError global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		If imagefound(text:"Dismis",waitfor:7,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Click foundimagelocation()
		end if
	(*if ImageFound(text:"SIT", waitFor:20)
click item 2 of EveryImageLocation(text:"SIT")
end if*)
if ImageFound(text:"View My Vaults",WaitFor:20,SearchRectangle:screenPart("TopHalf"))
	wait 2
	Click FoundImageLocation()
end if
wait 3
if ImageFound(text:"Informal", waitFor:20)
	Click text:"Informal", waitFor:30,searchrectangle:ScreenPart("TopRightQuadrant")
end if

	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end  LoginToApplication


// selecting a qms process as Change Control, Deviation, Capa Items
to handle SelectingQMSProcess
	try
		
	

		
		set the searchrectangle to (ScreenPart("TopLeftQuadrant"))
		Click text:"Home", waitFor:120
		wait 2
		Click text:"QMS Processes", waitFor:120
		wait 2
		
		(*put "Change Control" into global varProcesses*)
		
		click text:global VarProcesses, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes")+[-25,0],imagelocation(text:"QMS Processes")+[163,223]],waitfor:120
		set the SearchRectangle to ()
		wait 3
		
		
		
		//
		if ImageFound(text:"All", waitFor:120,SearchRectangle:(RemoteScreenSize()*(0,.1),RemoteScreenSize()))
			Put global VarProcesses&" screen should be displayed" into global Vstep
			Log global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
		else
			Put global VarProcesses&" screen is not displaying" into global Vstep
			LogError global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end SelectingQMSProcess


// create change control qms process
to handle CreateCC
	try
	(*put "test123" into global  CCshortDescription
		put "20 Apr 2021" into global CCDateDue
		put "Health" into global CCGBU
		put "Artwork"into global CCChangeType
		put "Health" into global CCReasonDrivers
		put "Country" into global  CCImpactedLocation*)
		
		Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		waitfor 120,text:"Title",searchrectangle:ScreenPart("Center")
		Put "Create Change Control page should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[150,0]
		//typetext global  CCshortDescription
		Typetext "Test"
		Click ImageLocation(text:"Date Due")+[150,0]
		typetext global  CCDateDue
		typetext tabKey
		Click ImageLocation(text:"Global Business Unit(s)")+[150,0]
		typetext  global  CCGBU
		Click ImageLocation(text:"Global Business Unit(s)")+[130,22]
		// click out side the location
		Click ImageLocation(text:"Global Business Unit(s)")+[0,30]
		typetext tabkey
		
		click imagelocation(text:"Change Type")+[85,0]
		typetext  global  CCChangeType
		click imagelocation(text:"Change Type")+[74,27]
		// click out side the loc
		//click imagelocation(text:"Change Type")
		
		
		click imagelocation(text:"Reason(s)")+[200,0]
		typetext  global  CCReasonDrivers
		Click imagelocation(text:"Reason(s)")+[190,20]
		// click out side the loc
		click imagelocation(text:"Reason(s)")
		typetext tabkey
		
		click ImageLocation(text:"Detailed Description")+[100,0]
		typetext "testing"
		typetext tabkey
		
		click ImageLocation(text:"Change Justification")+[100,0]
		typetext "testing"
		typetext tabkey
		
		
		
		
		click ImageLocation(text:"Affected Location Type")+[112,0]
		wait 2
		Typetext controlkey,a
		Typetext backspace
		//typetext global  CCImpactedLocation
		typetext "Country"
		wait 2
		Typetext downarrow,return
		
		//uat
		Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		wait 2
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return
		
		
		click ImageLocation(text:"Brand Specific",ScreenPart:("RightHalf"))+[200,0]
		Typetext "sku specific"
		wait 2
		Typetext return
		click imagelocation(text:"External References",seaechrectangle:ScreenPart("RightHalf"),waitfor:120)+(200,0)
		Typetext"https://login.veevavault.com/auth/login"
		Put "Entered Details in Create change control page" into global Vstep
		Log global Vstep
		CaptureAtLog
		click item 2 of EveryImageLocation(text:"Save",searchrectangle:ScreenPart("TopRightQuadrant"))
		wait 20
		NavigateToSectionFromLeftPane "General Information"
		if ImageFound(text:"General Information",waitFor:120,searchrectangle:ScreenPart("LeftHalf"))
			//read recordid
			
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
			//Log  global VRecordId
			If global GivenRecordId is ""
				set the suitevariables.RecordId to global VRecordId
			else
				set the suitevariables.RecordId to global GivenRecordId
			end if
			Put "CC created Successfully With RecordID"&the suitevariables.RecordId into global Vstep
			Log global Vstep
			CaptureAtLog
			return global RecordId
		else 
			put "Originator not Created Change Control" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
	
	
end CreateCC

// VerifyLifeCycleState 1parameter -DRAFT,IMPACTASSESSMENTACTIONPLANNING,PENDINGASSESSMENT
to handle VerifyLifeCycleState_Draft
	VerifyLifeCycleState "DRAFT"
end VerifyLifeCycleState_Draft

to handle VerifyLifeCycleState_PENDINGASSESSMENT
	VerifyLifeCycleState "PENDING ASSESSMENT"
end VerifyLifeCycleState_PENDINGASSESSMENT


to handle VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	VerifyLifeCycleState "Impact Assessment"
end VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

to handle VerifyLifeCycleState_INIMPLEMENTATION
	//VerifyLifeCycleState "IN IMPLEMENTATION"
	VerifyLifeCycleState "Implementation"
	
end VerifyLifeCycleState_INIMPLEMENTATION
//CLOSEDIMPLEMENTED
to handle VerifyLifeCycleState_CLOSEDIMPLEMENTED
	VerifyLifeCycleState "CLOSED - IMPLEMENTED"
end VerifyLifeCycleState_CLOSEDIMPLEMENTED
to handle VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	VerifyLifeCycleState "CLOSED - CHANGE NOT PROGRESSED"
end VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
to handle VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	VerifyLifeCycleState "PENDING FUNCTION APPROVAL"
end VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL

to handle VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	VerifyLifeCycleState "PENDING FUNCTION POST-APPROVAL"
end VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL

to handle VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	VerifyLifeCycleState "PENDING QUALITY POST-APPROVAL"
end VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
to handle VerifyLifeCycleState_CLOSEDCHANGENOTIMPLEMENTED
	VerifyLifeCycleState "CLOSED - CHANGE NOT IMPLEMENTED"
end VerifyLifeCycleState_CLOSEDCHANGENOTIMPLEMENTED

to handle VerifyLifeCycleState_CLOSEDCOMPLETE
	VerifyLifeCycleState "Closed"
	//Click "Backtopreviouspage"
	
end VerifyLifeCycleState_CLOSEDCOMPLETE

to handle VerifyLifeCycleState_PENDINGINFORMATION
	VerifyLifeCycleState "PENDING INFORMATION"
end VerifyLifeCycleState_PENDINGINFORMATION


to handle VerifyLifeCycleState State
	
	(*if ImageFound(image:State, waitFor:50,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
		Put "The Lifecycle state should be in "&State&" and lifecycle stage should be in "&State into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "The LifeCycleState not in "&State&" and lifecycle stage not in "&State into global Vstep
		LogError global Vstep
		CaptureAtLog
		
	end if*)
	//Put "Pending more info" into State
	try
		WaitFor 10, text:State,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.45,0.25]]
		Put "The Lifecycle state in "&State&" and lifecycle stage in "&State into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end VerifyLifeCycleState

//Assign cc to users

to handle AssignToChangeCordinator
	try
		wait 2
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		if ImageFound(imageName:"Complete", waitFor:120)
			Put "Assign Change Coordinato Page Is Displaying" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Assign Change Coordinato Page Is Not Displaying" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if          
		//need to add this global variable into the csv and comment it later
		//put "Assign" into global CC_AssignToChangeCordinator_Verdict
		
		
		if global CC_AssignToChangeCordinator_Verdict is "Assign" then
			Click imageName:"ChangeCoordinatorAssigned", waitFor:120
			
			Put "OriginatorAssignCCToChangeCoordinator" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"Complete", waitFor:120
		else
			
			Click imageName:"CancelCC", waitFor:120
			//Click imageName:"Complete", waitFor:20
			Put "OriginatorCancelCC" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"Complete", waitFor:120
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end AssignToChangeCordinator

(*to handle AssignToChangeCordinator
wait 3
Click imageName:"AssignChangeCoordinator_Complete", waitFor:20
if ImageFound(imageName:"Complete", waitFor:30)
Put "AssignChangeCoordinatoPageIsDisplaying" into global Vstep
Log global Vstep
CaptureAtLog
else
Put "AssignChangeCoordinatoPageIsNotDisplaying" into global Vstep
LogError global Vstep
CaptureAtLog
end if
Click imageName:"Complete", waitFor:20


end AssignToChangeCordinator*)
// set user role in sharingSettings
to handle SharingSettings_CC
	SharingSettings "Change Coordinator",global CCusername
end SharingSettings_CC

to handle SharingSettings_QA
	SharingSettings "Quality",global QAusername
end SharingSettings_QA
to handle SharingSettings_FA
	SharingSettings "Function",global FAusername
end SharingSettings_FA
to handle SharingSettings_PFA
	SharingSettings "Post",global FAusername
end SharingSettings_PFA
to handle SharingSettings_ActionOwner
	SharingSettings "Action",global AOusername
	
end SharingSettings_ActionOwner

to handle SharingSettings Role,UserId
	try
		wait 7
		Click imageName:"SharingSettingsMenu", waitFor:30
		if ImageFound(imageName:"Add", waitFor:30)
			Put "SharingSettingsPageIsDisplaying" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "SharingSettingsPageIsNotDisplaying" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if
		Click imageName:"Add", waitFor:20
		Click imageName:"Role", waitFor:20
		Typetext Role
		wait 2
		Click imageName:"Role_Item1", waitFor:10
		Click imageName:"UsersandGroups", waitFor:30
		Typetext UserId
		wait 4
		Click imageName:"UsersandGroups_Item1", waitFor:50
		
		Click imageName:"Save", waitFor:50
		wait 3
		//if ImageFound(text:Role, waitFor:50,SearchRectangle:["Role_UL","Role_BR"])
		if ImageFound(text:Role, waitFor:50)
			Put"UserAddedInSharingSetting" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put"UserIsNotAddedInSharingSetting" into global Vstep
			Logerrror global Vstep
			CaptureAtLog
		end if
		// click the backbutton
		wait 4
		Click imageName:"Backtopreviouspage", waitFor:20
		wait 7
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end SharingSettings

to handle SearchRecord
	try
		wait 4
		// SelectingQMSProcess
		//	Put "Deviation" into global RecordType
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.3]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText the suitevariables.RecordId
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		wait 20
		
		if imagefound(text:the suitevariables.RecordId, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end SearchRecord

*
// Create Assessment Item

to handle CreateAssessmentItem
	try
		wait 3
		(*Click imageName:"AssessmentItems_Menu", waitFor:30
		wait 4
		Put "Assessment Item Section displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		NavigateToSectionFromLeftPane "Assessment Items"
		wait 3
		Click imageName:"CreateItem", waitFor:120
		//sprint-4 changes
		//Click imageName:"Ai_ShortDescription", waitFor:50
		//TypeText global AIShortDescription
		//Click imageName:"Ai_Description", waitFor:30
		//TypeText tabKey
		//TypeText global AIDescription
		WaitFor 50, text:"Create Assessment Item",SearchRectangle:ScreenPart("Center")
		
		Put "Create Assessment Item popup page  should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 5
		//Click ImageLocation(text:"Date Due")+[150,0],SearchRectangle:ScreenPart("Center")
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("RightHalf"))+[150,0]

		TypeText controlKey,a,backspace
		//put "2 FEB 2022"into  global AIDateDue
		TypeText global AIDateDue
		Click ImageLocation(text:"Date Due")+[100,0]
		Click imageName:"Save", waitFor:120
		wait 5
		waitfor 60, text:"Record ID",searchrectangle:ScreenPart("TopLeftQuadrant")
		
		put ReadText([imageLocation(text:"Record ID")+[-49,14], imageLocation(text:"Record ID")+[60,57]])  into global AI_RecordID
		//Log global AI_RecordID
		Put "Assessment Item should be Created" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end CreateAssessmentItem


// verify error messages related to datedue field
to handle VerifyDateDueErrorMessage
	if ImageFound(imageName:"DateDueError1", waitFor:120)
		Click imageName:"Cancel", waitFor:120
		
		Put "ErrorMessageIsDisplaingDueToInvalidDate" into  global Vstep
		Log  global Vstep
		CaptureAtLog
	else
		Put "ErrorMessageIsNotDisplayingEvenForInvalidDate" into  global Vstep
		LogError  global Vstep
		CaptureAtLog
	end if
	//
end VerifyDateDueErrorMessage

// Logout from application
to handle LogOut
	try
		wait 3
		
		Click [1870,100]
		//Click [1774,100]
		wait 2
		//Click text:"Log out", waitFor:40,SearchRectangle:ScreenPart("TopRightQuadrant"),IgnoreSpaces:YES
		Click text:"Log out", waitFor:40,SearchRectangle:ScreenPart("TopRightQuadrant"),validpattern:"Log out"
		if ImageFound(text:"Having trouble logging in", waitFor:40,searchrectangle:ScreenPart("VerticalMiddle")) or if ImageFound(text:"Switch", waitFor:20,searchrectangle:ScreenPart("VerticalMiddle"))
			Put "User Sign out successfully" into  global Vstep
			Log  global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "User is not Sign out successfully" into  global Vstep
			Logerror  global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end LogOut

// create Implementation Action
to handle CreateImplementationAction
	try
	(*wait 3
		Click imageName:"ImplementationActionItems", waitFor:30
		wait 3*)
		Click imageName:"ImplementationActionItems", waitFor:30
		wait 3
		DoubleClick imageName:"CreateItem", waitFor:120
		wait 20
		if imagefound(text:"Title",SearchRectangle:ScreenPart("Center")) and if imagefound(text:"Description",SearchRectangle:ScreenPart("Center")) and if imagefound(text:"Date Due",SearchRectangle:ScreenPart("Center"))
			Put "Title,Description and Date Due fields displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "All mandatory fields not displayed" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		Put Imagelocation(text:"Create Implementation Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		(*Click imagelocation(text:"Title", waitFor:60,searchrectangle:ScreenPart("Center"))+[80,0]
		TypeText "Test"
		TypeText tabKey
		TypeText "Test"*)
		
		(*Click imageName:"Ai_DateDue", waitFor:30*)
		//Typetext"Testing"
		
		Click ImageLocation(text:"Date Due", waitFor:60,searchrectangle:ScreenPart("Center"))+[150,0]
		
		TypeText global IADateDue
		//typetext "15 Mar 2021"
		Click ImageLocation(text:"Date Due", waitFor:60,searchrectangle:ScreenPart("Center"))+[100,0]
		TypeText tabKey
		TypeText "Test"
		TypeText tabKey
		TypeText "Test"
		Put "Entered details in create Implementation Action page" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click imageName:"Save", waitFor:120
		wait 5
		Put "Implementation Action Created" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end CreateImplementationAction




// open current Task of the user
to handle OpenCurrentTask
	try
		Click imageName:"HomeMenu", waitFor:120
		Click imageName:"MyTasksSortby", waitFor:120
		Click imageName:"DateReceivedNewestFirst", waitFor:120
		Click imageName:"NewestTask", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end OpenCurrentTask


//Prepare Impact Assessment & Action Plan(ChangeNotRequired,SubmitForApproval)
to handle PrepareImpactAssessmentActionPlan
	try
	(*Put "ChangeNotRequired" into global PIAverdict
		Put "Raised In Error" into global ReasonForClosing*)
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		if global PIAverdict is "ChangeNotRequired"
			Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
			
			typetext"testing"
			wait 3
			//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
			Typetext tabKey
			//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
			wait 2
			Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			
			
			Typetext global ReasonForClosing
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
			Put "Change Coordinator Select Verdict as CloseChangeControl/ChangeNotRequired" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
			
			
		else if global PIAverdict is "SubmitForApproval"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			Typetext tabKey
			Typetext"testing"
			(*Click imageName:"ImpactAssessmentConclusionSummary", waitFor:50
			Typetext "test"*)
			Typetext tabKey
			Typetext "test"
			Typetext tabKey
			Typetext "test"
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText global FormalRiskAssessmentRequired
			TypeText downArrow, return
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText "Low"
			TypeText downArrow, return
			put "Change Coordinator Select Verdict as Submit for Approval" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	
end PrepareImpactAssessmentActionPlan

// Start ImpactAssessment
to handle StartImpactAssessment
	// click on a Assessment Item which state is Draft
	try
		
		Click imageName:"CogWheelNew", waitFor:120
		Click imageName:"StartImpactAssessment", waitFor:120
		wait 2
		Click imageName:"AssessorTextBox", waitFor:120
		wait 2
		//put "Sunil" into global AssessorID
		///log global AssessorID
		Typetext global AssessorID
		wait 5
		Typetext downArrow, return
		wait 3
		Put "Start Impact Assessment" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click imageName:"StartButton", waitFor:50
		
		// state:verify  PendingAssesment
		WaitFor 50, "PENDINGASSESSMENT"
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	
end StartImpactAssessment

to handle CancelImpactAssessment
	// click on a Assessment Item which state is Draft
	try
		
		wait 3
		//Click imageName:"CogWheelNew", waitFor:40
		Click imageName:"CancelImpactAssessment", waitFor:40
		
		Put "Assessment Item moved from DRAFT to CLOSED CANCELLED" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	
end CancelImpactAssessment

//Assessor complete the (AI)Assessment of Change Control
to handle AssessmentOfChangeControl
	wait 15
	try
		NavigateToSectionFromLeftPane "Assessment"
		click Image:"edit_img",waitfor:120, Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 2
		Click imagelocation(text:"Nominate Function Approver",searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,3)
		wait 2
		Typetext controlkey,a
		Typetext backspace
		wait 2
		Typetext global FA
		wait 2
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Assessment of Change Control",searchrectangle:ScreenPart("TopLeftQuadrant")
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 10
		if global AIAssessmentVerdict is "AssessmentComplete"
			Click text:"Assessment Complete", waitFor:120,searchrectangle:ScreenPart("Center")
			wait 10
			TypeText tabKey
			Typetext"testing"
			click imagelocation(text:"Assessment Summary",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext "Testing" --Assessment summary
			
			Put "Assessor submit the AssessmentOfChangeControl task as verdict AssessmentComplete" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			(*WaitFor 50, "CLOSEDCOMPLETE"*)
			
			
		else if global AIAssessmentVerdict contains "Request More Info"
			Click text:"Request More", waitFor:120,searchrectangle:ScreenPart("Center")
			//Click text:"Justification", waitFor:30
			typetext tabkey
			Typetext"Testing" --Justification for cancel
			wait 1
			Put "Assessor submit the AssessmentOfChangeControl task as verdict Request More Info / Cancellation" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end AssessmentOfChangeControl

//FunctionApprovalOfChangeControl
to handle FunctionApprovalOfChangeControl
	try
	scrollwheelup 50
		//Put "Approved" into global FAverdict
		//Click imageName:"FunctionApprovalofChangeContro", waitFor:40
		WaitFor 120, text:"Function Approval of Change Control",searchrectangle:ScreenPart("TopLeftQuadrant")
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global FAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global FAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global FApassword
			wait 3
			Click imageName:"Complete", waitFor:120
			wait 10
			Put "FunctionApproverApprovedAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global FAverdict is "Rejected"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"Testing rejected"
			Click imageName:"Complete", waitFor:120
			wait 10
			Put "FunctionApproverRejectAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "ApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end FunctionApprovalOfChangeControl

//QualityApprovalOfChangeControl(QAapproved,QArejected,QAincludeFunctionApproved)

to handle QualityApprovalOfChangeControl
	try
	(*Put "Approved" into global QAverdict
Put "Quality.CC.1.H@sb-rb.com" into global QAusername
Put "rbQone@1test" into global QApassword*)
		//Click imageName:"Complete", waitFor:50
		log global QAverdict
		WaitFor 120, text:"Quality Approval of Change Control",searchrectangle:ScreenPart("TopLeftQuadrant")
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		//log global QAverdict
		if global QAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestingApproved"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 3
			Click imageName:"complete", waitFor:120
			wait 10
			Put "QAapprovedCC" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else if global QAverdict is "Rejected"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestingRejected"
			Click imageName:"complete", waitFor:120
			wait 10
			Put "QArejectedCC" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QAverdict is "QAincludeFunctionApproved"
			click text:"Include Function Approvers",SearchRectangle:ScreenPart("Center")
			typetext tabKey
			Typetext"Testing"
			Click imageName:"complete", waitFor:120
			Put "QAIncludesFA" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityApprovalOfChangeControl

to handle UpdateAssessment

	try
		wait 3
		//Put "Cancel Assessment (Closed - Cancelled)" into global AIUpdateAssessmentVerdict
		
		//complete the Pending Assessment
		//Click imageName:"UpdateAssessment", waitFor:50
		waitfor 120,text:"Update Assessment"
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 3
		// verdict AssessmentComplete,AssessmentCancel
		if global AIUpdateAssessmentVerdict is "Updated & Return to Pending Assessment"
			Click text: "Updated & Return to Pending Assessment", waitFor:120
			
			Click imageName:"complete", waitFor:120
			WaitFor 120, text:"Pending Assessment",searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.45,0.25]]
			Put "Assessment Item moved from Pending Information to Pending Assessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global AIUpdateAssessmentVerdict is "Cancel Assessment (Closed - Cancelled)"
			Click text:"Cancel Assessment", waitFor:120
			TypeText tabkey
			typetext "justification"
			TypeText tabkey
			typetext "Raised in error"
			typetext downArrow, Return
			
			Click imageName:"complete", waitFor:120
			WaitFor 120, text:"Closed - Cancelled",searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.45,0.25]]
			Put "AIAssessmentClosed Cancelled successfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end UpdateAssessment

//IA : AssignActionOwner
to handle AssignActionOwner_CogWheel
	try
		Click imageName:"ImplementationActionItems", waitFor:120
		Click imageName:"SearchBoxAI", waitFor:120
		Typetext"Author"
		Typetext return
		wait 3
		// click the 1st item
		
		Click imageName:"AI_Item1", waitFor:120
		
		Click imageName:"AssignActionOwner", waitFor:120
		Click imageName:"Complete", waitFor:120
		if ImageFound(imageName:"Ownermustcontainusers", waitFor:120)
			Click imageName:"OKButtonPopup", waitFor:120
			Click imageName:"SharingSettingsMenu", waitFor:130
			Click imageName:"Add", waitFor:120
			Click imageName:"Role", waitFor:120
			Typetext "Action"
			Click imageName:"Role_Item1", waitFor:110
			Click imageName:"UsersandGroups", waitFor:130
			Typetext global AOusername
			
			Click imageName:"UsersandGroups_Item1", waitFor:120
			Click imageName:"Save", waitFor:120
			Click imageName:"Backtopreviouspage", waitFor:120
			Click imageName:"AssignActionOwner", waitFor:100
			Click imageName:"Complete", waitFor:100
		end if
		if ImageFound(imageName:"WORKINPROGRESS", waitFor:100)
			Put "IASuccessfullyAssignedToActionOwner" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "IAIsNotAssignedToActionOwner" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end AssignActionOwner_CogWheel

// ImplementationActionTobeCompleted

to handle ImplementationActionTobeCompleted
	try
		
		//Click imageName:"ImplementationActiontobecompleted", waitFor:50
		click text:"Complete",Searchrectangle:ScreenPart("TopRightQuadrant"),waitfor:120
		wait 3
		if global IACverdict is "ActionCompleted"
			click text:"Action Complete",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Testing"
			TypeText tabKey
			TypeText"TestingActionComplete" --global IACompletionSummary
			Put "ImplementationActionTobeCompleted task completed with ActionComple verdict" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"Complete", waitFor:120
			wait 10
			
			
			
			
			
			
		else if global IACverdict is "CloseAction"
			
			click text:"Close Action without Completing",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			TypeText tabKey
			TypeText "Change to Scope"
			wait 1
			TypeText downArrow, return
			Put "ImplementationActionTobeCompleted task completed with CloseAction verdict" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"Complete", waitFor:120
			
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end ImplementationActionTobeCompleted

//CC: ReviewTheImplementationOfTheChange
to handle ReviewTheImplementationOfTheChange
	try
	(*		Put "Complete" into global CCReviewVerdict
		Put "Yes" into global DMEffectiveness*)
		(*Put "Yes" into global PFArequired*)
		//Click imageName:"ReviewtheImplementationoftheChange", waitFor:10
		
		waitfor 120,text:"Review the Implementation of the Change",searchrectangle:ScreenPart("TopLeftQuadrant")
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global CCReviewVerdict contains "Return"
			click text:"Return to IA",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"TestingReturn"
			//Click imageName:"Complete", waitFor:120
			Put "SuccessfullyReturnReviewTheImplementationOfTheChange" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		else if global CCReviewVerdict contains "Complete"
			click text:"Change Coordinator Review Complete",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Test"
			TypeText tabKey
			Typetext "TestPostImpSummary"
			log global DMEffectiveness
			///////DemonstratesEffectiveness_Yes DemonstratesEffectiveness_No
			if global DMEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
				wait 3
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:120
					put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"PostFunctionApproversRequired_No", waitFor:120
					// to be added code
				end if
				//
			else if global DMEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				wait 2
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:20
					Put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"PostFunctionApproversRequired_No", waitFor:120
					wait 3
					//Click imageName:"Complete", waitFor:20
					Put "CompleteReviewTheImplementationChangeWithoutPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
				end if
				//
			end if
			//////////////////////
			
		else
			Put " AllCCReviewVerdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		Click imageName:"Complete", waitFor:20
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end ReviewTheImplementationOfTheChange

//FAFinalApproval
to handle FAFinalApproval
	try
		//Click imageName:"Complete", waitFor:50
		
		waitfor 120,text:"Function Post-Approval of Change Control",searchrectangle:ScreenPart("TopLeftQuadrant")
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 5
		if global FAFinalApproveVerdict contains "Approve"
			Click text:"Approved", waitFor:120
			TypeText tabKey
			Typetext"testingFA"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global PFAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global PFApassword
			wait 3
			Click imageName:"Complete", waitFor:120
			
			Put "FAFinalApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
			Log global Vstep
			CaptureAtLog
			
			
		else if global FAFinalApproveVerdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			TypeText tabKey
			Typetext"RejectByPFA"
			Click imageName:"Complete", waitFor:120
			Put "FAFinalapprovalRejected" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FAFinalApproval

//QualityPostApprovalOfChangeControl

to handle QualityPostApprovalOfChangeControl
	try
	(*	Put "Approve" into global QPAverdict
Put "Quality.CC.1.H@sb-rb.com" into global QAusername
Put "rbQone@1test" into global QApassword
Put "Yes" into global QPAdemonstrateEffectiveness*)
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:120
		
		waitfor 120,text:"Quality Post-Approval of Change Control",searchrectangle:ScreenPart("TopLeftQuadrant")
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global QPAverdict contains "Approve"
			Click text:"Approved", waitFor:120
			TypeText tabKey
			Typetext"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 3
			ScrollWheelDown 9
			(*TypeText tabKey*)
			Put "Yes" into global QPAdemonstrateEffectiveness
			///
			if global QPAdemonstrateEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
				wait 3
				
				Click imageName:"Complete", waitFor:120
				Put "QPAApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
				log global Vstep
				CaptureAtLog
			else if global QPAdemonstrateEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				// currently the nex steps are not coming--error in application
			end if
			///
			
			
		else if global QPAverdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			TypeText tabKey
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPARejected" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QPAverdict contains "Include Function"
			//click text:"Include",SearchRectangle:ScreenPart("Center")
			Click text:"include Function", waitFor:50,searchrectangle:ScreenPart("Center")
			//Click item2 of EveryImageLocation("include"), waitFor:60
			TypeText tabKey
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPAIncludeFPA" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityPostApprovalOfChangeControl

//CompleteIAPerformRAandAP

to handle CompleteIAPerformRAandAP
	try
		click image:"CompleteIAPerformRAandAP",waitfor:120
		wait 4
		//FunctionApproversRequired_Yes FunctionApproversRequired_No
		if global FARequired is "Yes"
			Click imageName:"FunctionApproversRequired_Yes", waitFor:60
			//
			if global CCVerdict is "CloseCC"
				Click imageName:"Verdict_CloseCC", waitFor:120
				
				
			else if global CCVerdict is "SubmitForApproval"
				Click imageName:"Verdict_SubmitForApproval", waitFor:120
				Click imageName:"Comments", waitFor:120
				TypeText"Testing"
				Typetext tabkey
				Typetext "Testing"
				Typetext tabkey
				Typetext"Test"
				Typetext tabkey
				TypeText global CCOverAllRisk
				
				Click imageName:"OverallRisk_Item1", waitFor:120
				wait 3
				Click imageName:"complete", waitFor:120
				Put "ChangeCoordinatorSubmitForFunctionalApprover" into global Vstep
				Log global Vstep
				
				CaptureAtLog
			end if
			
			//
		else if  global FARequired is "No"
			Click imageName:"FunctionApproversRequired_No", waitFor:50
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CompleteIAPerformRAandAP






to handle OpenRecord_AI_Draft

	NavigateToSectionFromLeftPane "Assessment Items"
	SearchRecords_With_State "Draft"
end OpenRecord_AI_Draft


to handle OpenRecord_AI_PENDINGASSESSMENT

	NavigateToSectionFromLeftPane "Assessment Items"
	
	SearchRecords_With_State "PENDING ASSESSMENT"
end OpenRecord_AI_PENDINGASSESSMENT



to handle OpenRecord_AI_PENDINGINFORMATION

	NavigateToSectionFromLeftPane "Assessment Items"
	
	SearchRecords_With_State "PENDING INFORMATION"
end OpenRecord_AI_PENDINGINFORMATION

// navigateTo a particular section from left pan
to handle NavigateToSectionFromLeftPane MenuName

	try
		click text:MenuName,SearchRectangle:[RemoteScreenSize()*[0,0.25],RemoteScreenSize()*[0.3,5]]
		wait 4
		if ImageFound(text:MenuName, waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
			Put MenuName&"SectionIsDisplaying" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put MenuName&"SectionIsNotDisplaying" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
	
end NavigateToSectionFromLeftPane


// navigateToImplementationActionItem

to handle navigateToImplementationActionItemSection
	NavigateToSectionFromLeftPane "Implementation Action"
end navigateToImplementationActionItemSection



// search child records with parameter as State
to handle SearchRecords_With_State State

	
	
	try
		//Put "In Progress" into State
		Click text:"Record Last modified on",waitFor:10,SearchRectangle:ScreenPart("Center")
		wait 10
		
		if ImageFound(imageName:"RecordLastModifiedOn_LatestToOlder",SearchRectangle:ScreenPart("Center"),waitFor:10)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_OlderToLatest", waitFor:10,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 10
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
			//"Record details screen should be displayed and"&" life cycle state should be in "&State&" and life cycle stage should be in "&State
			(*Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog*)
			
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:50,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "Record General screen displayed and"&" life cycle state should be in "&State&" and life cycle stage should be in "&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
				if imagefound(text:"General Information",SearchRectangle:[RemoteScreenSize()*[0,0.2],RemoteScreenSize()*[0.3,5]])
					click foundimagelocation()
				else if imagefound(text:"Details",SearchRectangle:[RemoteScreenSize()*[0,0.25],RemoteScreenSize()*[0.3,5]])
					click foundimagelocation()
				end if
				wait 7
				Put topRight of imagerectangle(text:"Record ID",SearchRectangle:ScreenPart("Center"))+[5,2] into dragLocation
				
				put dragLocation+[100,0] into dropLocation
				Drag dragLocation
				Drop dropLocation
				
				Typetext controlkey,c
				Put remoteclipboard() into global ChildRecord
				//log global ChildRecord
				Click text:"Date Due",SearchRectangle:ScreenPart("Center")
				wait 3
				
				Put topRight of imagerectangle(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[3,2] into dragLocation
				
				put dragLocation+[100,0] into dropLocation
				Drag dragLocation
				Drop dropLocation
				
				Typetext controlkey,c
				Put remoteclipboard() into global ChildDateDue
				Click text:"Date Due",SearchRectangle:ScreenPart("Center")
				//log global ChildDateDue
				wait 1
			else
				Put state&"Record is not Available" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"Record is not Available" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		ScrollWheelUp 20
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end SearchRecords_With_State

(*to handle SearchRecords_With_State State

	
	
	try
		//Put "In Progress" into State
		Click text:"Record Last modified on",waitFor:10,SearchRectangle:ScreenPart("Center")
		
		
		if ImageFound(imageName:"RecordLastModifiedOn_down",SearchRectangle:ScreenPart("Center"),waitFor:20)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_up", waitFor:60,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 20
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
			//"Record details screen should be displayed and"&" life cycle state should be in "&State&" and life cycle stage should be in "&State
			(*Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog*)
			
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:100,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "Record General screen displayed and"&" life cycle state should be in "&State&" and life cycle stage should be in "&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
				click text:"General Information",SearchRectangle:[RemoteScreenSize()*[0,0.25],RemoteScreenSize()*[0.3,5]]
				wait 7
				Put topRight of imagerectangle(text:"Record ID",SearchRectangle:ScreenPart("Center"))+[3,2] into dragLocation
				
				put dragLocation+[100,0] into dropLocation
				Drag dragLocation
				Drop dropLocation
				
				Typetext controlkey,c
				Put remoteclipboard() into global ChildRecord
				//log global ChildRecord
				Click text:"Date Due",SearchRectangle:ScreenPart("Center")
				wait 4
				
				Put topRight of imagerectangle(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[3,2] into dragLocation
				
				put dragLocation+[100,0] into dropLocation
				Drag dragLocation
				Drop dropLocation
				
				Typetext controlkey,c
				Put remoteclipboard() into global ChildDateDue
				Click text:"Date Due",SearchRectangle:ScreenPart("Center")
				//log global ChildDateDue
				wait 2
			else
				Put state&"Record is not Available" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"Record is not Available" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		ScrollWheelUp 50
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end SearchRecords_With_State*)


// search child record which is in Work in Progress state
to handle SearchRecords_With_State_WorkInProgress



	SearchRecords_With_State "Work in Progress"
	
end SearchRecords_With_State_WorkInProgress
// search child record which is in draft state
to handle SearchRecords_With_State_Draft



	SearchRecords_With_State "draft"
	
end SearchRecords_With_State_Draft

//author: vaishnavi sunil


//NavigateToSectionFromLeftPane "Implementation Action Items"

to handle VerifyLifeCycleState_WORKINPROGRESS
	VerifyLifeCycleState "WORK IN PROGRESS"
end VerifyLifeCycleState_WORKINPROGRESS
to handle VerifyLifeCycleState_PendingParentApproval
	VerifyLifeCycleState "PENDING PARENT APPROVAL"
end VerifyLifeCycleState_PendingParentApproval
to handle OpenRecord_IA_PendingParentApproval

	NavigateToSectionFromLeftPane "Implementation Action Items"
	SearchRecords_With_State "Pending Parent Approval"
end OpenRecord_IA_PendingParentApproval
to handle OpenRecord_IA_Draft

	NavigateToSectionFromLeftPane "Implementation Action Items"
	SearchRecords_With_State "Draft"
end OpenRecord_IA_Draft
to handle OpenRecord_IA_WORKINPROGRESS

	NavigateToSectionFromLeftPane "Implementation Action Items"
	SearchRecords_With_State "Work in Progress"
end OpenRecord_IA_WORKINPROGRESS

to handle CreateImplementationActivities
	try
		wait 4
		//Click imageName:"ImplementationActionItems", waitFor:30
		NavigateToSectionFromLeftPane "Activities"
		wait 4
		Click imageName:"CreateItem", waitFor:120
		Click imagelocation(text:"Title", waitFor:120,Searchrectangle:ScreenPart("Center"))+[80,0]
		TypeText "Test"
		TypeText tabKey
		TypeText "Test"
		
		Click ImageLocation(text:"Date Due")+[150,0]
		TypeText global ACTDateDue
		//TypeText"10 mar 2021"
		Click ImageLocation(text:"Date Due")+[100,0]
		Click imageName:"Save", waitFor:120
		
		Put "SuccessfullyCreatedImplementationActivity" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		//
	End try
end CreateImplementationActivities

to handle OpenRecord_ACT_Draft

	NavigateToSectionFromLeftPane "Activities"
	SearchRecords_With_State "Draft"
end OpenRecord_ACT_Draft

to handle OpenRecord_ACT_WORKINPROGRESS

	NavigateToSectionFromLeftPane "Activities"
	SearchRecords_With_State "Work in Progress"
end OpenRecord_ACT_WORKINPROGRESS

to handle OpenRecord_ACT_PENDINGINFORMATION

	NavigateToSectionFromLeftPane "Activities"
	SearchRecords_With_State "Pending Information"
end OpenRecord_ACT_PENDINGINFORMATION


to handle ACT_StartActivity
	(*try
		wait 4
		Click imageName:"CogWheelNew", waitFor:120
		wait 5
		Click imageName:"ACT_StartActivity", waitFor:120
		wait 2
		Click imageName:"ActivityOwnerSearchBox", waitFor:120
		wait 3
		//put "Sunil" into global ActivityOwner
		//log global ActivityOwner
		Typetext global ActivityOwnerName
		wait 5
		Typetext downArrow, return
		wait 3
		Click imageName:"StartButton", waitFor:120
		
		// state:verify  PendingAssesment
		if ImageFound(imageName:"WORKINPROGRESS", waitFor:120)
			Put "SuccessfullStartImplementationActivity" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "UnsuccessfullyStartImplementationActivity" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try*)
	
	AssignUser_Teams global ActivityOwnerName,"Activity Owner"
	
end ACT_StartActivity

to handle ImplementationActivityTobeCompleted
	try
		
		Click text:"Complete", waitFor:120,searchrectangle:Screenpart("TopRightQuadrant")
		
		// verdict AssessmentComplete,AssessmentCancel
		//put "AssessmentComplete" into AIAssessmentVerdict
		wait 5
		if global ImplementationActivityToBeCompletedVerdict is "Activity Complete"
			wait 4
			click text:"Activity Complete",SearchRectangle:ScreenPart("Center")
			TypeText tabkey
			TypeText tabkey
			TypeText "test" --TaskCompletionSummary
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityTobeCompleted task closed complete" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else if global ImplementationActivityToBeCompletedVerdict is "Close action without completing"
			click text:"Close action without completing",SearchRectangle:ScreenPart("Center")
			
			typetext tabkey
			Typetext"Testing" --Justification for Closing-Incomplete
			
			typetext tabkey
			typetext "Raised in error"
			wait 4
			//typetext downArrow
			typetext downArrow, return
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityToBeCompletedVerdict task closed InComplete" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else if global ImplementationActivityToBeCompletedVerdict is "Request More Info / Cancellation"
			click text:"Request More Info",SearchRectangle:ScreenPart("Center")
			
			typetext tabkey
			Typetext"Testing" --Justification for Request More info
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityToBeCompletedVerdict task moved to Pending Information" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end ImplementationActivityTobeCompleted

to handle CancelActivity
	try
		
		//wait 3
		//Click imageName:"CogWheelNew", waitFor:120
		
		wait 4
		Click imageName:"CancelImpactAssessment", waitFor:120
		Wait 10
		click item 3 of EveryImageLocation(text:"Start",searchrectangle:ScreenPart("Center"))
		Put "Implementation activity moved from DRAFT to CLOSED CANCELLED" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CancelActivity



//Activity ownerl login
to handle LoginToApplication_ActivityOwner
	LoginToApplication global ActivityOwnerusername,global ActivityOwnerpassword
	
end  LoginToApplication_ActivityOwner


to handle UpdateActivity
	try
		
		wait 3
		
		//complete the Pending Assessment
		Click text:"Complete", waitFor:120,searchrectangle:Screenpart("TopRightQuadrant")
		wait 2
		// verdict AssessmentComplete,AssessmentCancel
		if global UpdateActivityVerdict is "Updated & Return to Work in Progress"
			click text:"Return to Work in Progress",SearchRectangle:ScreenPart("Center")
			Wait 2
			Click imageName:"complete", waitFor:120
			
			Put "Implementaion Activity moved from Pending Information to Work In Progress" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global UpdateActivityVerdict is "Cancel Activity (Closed - Cancelled)"
			click text:"Cancel Activity",SearchRectangle:ScreenPart("Center")
			Wait 2
			TypeText tabkey
			typetext "justification"
			TypeText tabkey
			wait 2
			typetext "Raised in error"
			typetext downArrow, Return
			
			Click imageName:"complete", waitFor:120
			
			Put "Implementation Activity Closed Cancelled successfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		end if
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end UpdateActivity


//End sunil Vaishnavi

to handle StartImplementation
	// click on a Implementation Item which state is Draft
	try
		
		Click imageName:"CogWheelNew", waitFor:120
		Click imageName:"StartImplementation", waitFor:120, //////searchRectangle "StartImplementation"
		wait 2
		
		if ImageFound(text:"Submit action for pre-Approval", waitFor:120)
			Put "SuccessfullStartImplementation" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "UnsuccessfullyStartImplementation" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if	
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end  StartImplementation
//**************

to handle OpenRecord_IA_PENDINGFUNCTIONAPPROVAL
	NavigateToSectionFromLeftPane "Implementation Action Items"
	SearchRecords_With_State "PENDING FUNCTION APPROVAL"
	
end OpenRecord_IA_PENDINGFUNCTIONAPPROVAL


to handle FunctionApprovalOfAction
	try 
		click text:"Complete",SearchRectangle:ScreenPart("TopRightQuadrant")
		(*Put "Test" into global FAusername
Put "Test" into global FApassword
Put "Function Approved" into global FunctionApprovalofAction_Verdict*)
		
		
		if global FunctionApprovalofAction_Verdict is "Function Approved"
			Click text:"Function Approved", waitFor:120
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText global FAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global FApassword
			wait 2
			Click imageName:"Complete", waitFor:120
			Put "FAApprovedMovestoPendingQualityApproval" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else
			
			click text:"Function Rejected", waitFor:60
			TypeText tabKey
			TypeText "test"
			Click item2 of EveryImageLocation("Complete"), waitFor:60
			Put "FARejectedRegressedToDraft" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FunctionApprovalOfAction

to handle QualityApprovalOfAction
	try
	(*Put "Test" into global QAusername
Put "Test" into global QApassword
Put "Approved" into global QualityApprovalofAction_verdict*)
		
		click text:"Complete",SearchRectangle:ScreenPart("TopRightQuadrant")
		
		if global QualityApprovalofAction_verdict is "Approved"
			click item 2 of EveryImageLocation(text:"Approved",searchrectangle:ScreenPart("Center"))
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText global QAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 3
			
			Click imageName:"Complete", waitFor:120
			Put "QAapprovedMovesToWorkInProgress" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else 
			
			Click text:"Rejected", waitFor:120
			typetext tabKey
			Typetext"TestingRejected"
			Click item2 of EveryImageLocation("Complete"), waitFor: 120
			Put "QARejectedRegressedToDraft" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end QualityApprovalOfAction

////===========================////Quality Incident Handlers Start
to handle AddAffectedLocationInformation
	try
		wait 4
		NavigateToSectionFromLeftPane"Affected Location Information"
		wait 3
		Click text:"Add", waitFor:30,SearchRectangle:[RemoteScreenSize()*[0.2,0.23],RemoteScreenSize()]
		WaitFor 120, text:"Site Name",SearchRectangle:ScreenPart("Center")
		Typetext India
		wait 1
		Typetext return
		wait 3
		click imagelocation(text:"Site Name",SearchRectangle:ScreenPart("Center"))+[0,35]
		click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")
		wait 4
		Put "AffectedLocationInformationAdded" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end AddAffectedLocationInformation

//EditQIToAddDeviation
to EditQIToAddDeviation
	// deviation
	wait 3
	click Image:"edit_img",waitfor:120, Searchrectangle:ScreenPart("TopRightQuadrant")
	click ImageLocation(text:"Deviation",Searchrectangle:ScreenPart("BottomHalf"))+[150,0]
	wait 1
	Typetext controlKey,a
	Typetext backspace
	wait 1
	//put "DV210329-003" into global ExistingDeviation
	//put "ExistingDeviation" into global QI_Deviation
	if global QI_Deviation is "ExistingDeviation"
		Typetext global ExistingDeviation
		wait 7
		Typetext return
		
		
	else if global QI_Deviation is "NewDeviation"
		Typetext "Create"
		wait 4
		
		Typetext return
		// add the code to create Dev fill form
		//QI_Deviation_Create
		
	end if
	
	Click text:"Save", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
	wait 8
	Put "Deviation Added in QI" into global Vstep
	Log global Vstep
	CaptureAtLog
end EditQIToAddDeviation
to handle CreateQualityIncident

	try
	(*put "Health" into global CCGBU
put "Clinical Trial" into global QI_IncidentType
put "Country" into global QIAffectedLocationType
put "17 Mar 2021" into global QIOccurrenceDate
put "Yes" into global QI_eCommerceImpact
put "Sku" into global QiProductInfo
put "ExistingDeviation" into global QI_Deviation
put "dv210315-012" into global ExistingDeviation
put "No" into global QI_MedicalDeviceYesOrNo*)
		wait 3
		
		click text:"Create",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		WaitFor 100, text:"Short Description",ScreenPart:("Center")
		
		Click ImageLocation(text:"Short Description",ScreenPart:("Center"))+[120,0]
		Typetext "Test"
		Click imageName:"CC_GlobalBusinessUnit", waitFor:120
		put "Health" into global CCGBU
		Click text: global CCGBU,SearchRectangle:("CC_GlobalBusinessUnit_UL","CC_GlobalBusinessUnit_BR"),waitfor:120
		Click imageName:"CC_GlobalBusinessUnit_outSide", waitFor:120
		
		Click ImageLocation(text:"Type of Incident",ScreenPart:("Center"))+[100,0]

		Typetext global QI_IncidentType
		wait 2
		Typetext downArrow,return
		wait 2
		//Detailed description
		Click ImageLocation(text:"Detailed description",ScreenPart:("RightHalf"))+[120,0]
		TypeText "Testing"
		Click ImageLocation(text:"Affected Location Type",ScreenPart:("Center"))+[200,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		wait 2
		TypeText global QIAffectedLocationType
		wait 2
		Typetext downArrow,return
		//Click ImageLocation(text:"Immediate Action",ScreenPart:("Center"))+[150,0]
		//TypeText "Testing"
		click ImageLocation(text:"Occurrence date",ScreenPart:("Center"))+[200,0]
		wait 2
		typetext global QIOccurrenceDate
		click ImageLocation(text:"Occurrence date",ScreenPart:("Center"))+[0,-20]
		//e-Commerce Impact
		
		Set the searchrectangle to [topright of ImageRectangle(text:"e-Commerce Impact",searchrectangle:ScreenPart("Center")),imagelocation( text:"e-Commerce Impact",searchrectangle:ScreenPart("Center"))+[250,50]]


		Click text:global QI_eCommerceImpact
		set the searchrectangle to []
		wait 2
		//QiProductInfo
		click ImageLocation(text:"Brand Specific",ScreenPart:("Center"))+[200,0]
		wait 2
		Typetext  global QiProductInfo
		wait 2
		Typetext downArrow,return
		wait 2
		// Put "No" into global QI_MedicalDeviceYesOrNo
		
		Set the searchrectangle to [topright of ImageRectangle(text:"Relates to Medicine",searchrectangle:ScreenPart("Center")),imagelocation( text:"Relates to Medicine",searchrectangle:ScreenPart("Center"))+[400,50]]


		Click text:global QI_MedicalDeviceYesOrNo
		set the searchrectangle to []

		(*// deviation
click ImageLocation(text:"Deviation",ScreenPart:("BottomHalf"))+[150,0]
wait 1

if global QI_Deviation is "ExistingDeviation"
Typetext global ExistingDeviation
wait 3
Typetext return


else if global QI_Deviation is "NewDeviation"
Typetext "Create"
wait 4

Typetext return
// add the code to create Dev fill form
//QI_Deviation_Create

end if*)
		
		Click item 2 of everyimagelocation(text:"Save", waitFor:50,searchrectangle:ScreenPart("TopRightQuadrant"))
		
		
		
		// read record QIRecordID
		wait 7
		
		put ReadText(["RecordID_UL", "RecordID_BR"],validpattern:"QI[0-9][0-9][0-9][0-9][0-9][0-9]-[0-9]*")  into global VRecordId

		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		
		Put "CreateQualityIncidentSuccessfully"& the suitevariables.RecordId into global Vstep
		
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreateQualityIncident




//


to handle QI_UserRoleSetup_IncidentCoordinator

	UserRoleSetup global ICFirstName,"Incident Coordinator"
end QI_UserRoleSetup_IncidentCoordinator



to handle SharingSettings_NIC
	//SharingSettings "Named Incident",global NICusername
	SharingSettings "Incident Coordinator",global NICusername
end SharingSettings_NIC

to handle AssignNamedIncidentCoordinatorComplete
	try
		//Click imageName:"AssignNamedIncidentCoordianatorComplete", waitFor:120
		click text:"Complete",SearchRectangle:ScreenPart("TopRightQuadrant")
		click text:"Incident Coordinator Assigned",waitfor:120,SearchRectangle:ScreenPart("Center")
		Click imageName:"Complete", waitFor:120,SearchRectangle:ScreenPart("Center")
		Put "AssignNamedIncidentCoordinatorComplete" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end AssignNamedIncidentCoordinatorComplete


//TRIAGEASSESSMENTINPROGRESS  TRIAGEASSESSMENTINPROGRESS
to handle VerifyLifeCycleState_TRIAGEASSESSMENTINPROGRESS
	VerifyLifeCycleState "TRIAGE ASSESSMENT IN PROGRESS"
end VerifyLifeCycleState_TRIAGEASSESSMENTINPROGRESS

to handle VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	VerifyLifeCycleState "PENDING QUALITY APPROVAL"
end VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

//CLOSEDQISUFFICIENT
to handle VerifyLifeCycleState_CLOSEDQISUFFICIENT
	VerifyLifeCycleState "CLOSED - QI SUFFICIENT"
end VerifyLifeCycleState_CLOSEDQISUFFICIENT
//named-Quality approval login
to handle LoginToApplication_NQA
	LoginToApplication global NQAusername,global NQApassword
	
end  LoginToApplication_NQA


//named-incident co-ordinator login
to handle LoginToApplication_NIC
	LoginToApplication global NICusername,global NICpassword
	
end  LoginToApplication_NIC

//TriageAssessment
to handle Edit_TriageAssessment 
	try
		//Click Edit button and Edit QITriage
		
		click Image:"edit_img",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		
		//click Qi triage Menu button
		NavigateToSectionFromLeftPane "Triage Assessment"
		//fill
		wait 4
		Click text:global Potential_impact_to_product_quality,searchrectangle:[topRight of imagerectangle(text:"Potential impact to product quality",searchRectangle:ScreenPart("Center")),imagelocation(text:"Potential impact to product quality",searchRectangle:ScreenPart("Center"))+[400,44]]

		wait 3
		Click text:global Potential_impact_to_product_registration,searchrectangle:[topRight of imagerectangle(text:"Potential impact to product registration",searchRectangle:ScreenPart("Center")),imagelocation(text:"Potential impact to product registration",searchRectangle:ScreenPart("Center"))+[400,44]]
		wait 3
		//Previous_deviations_or_incidents  Previous deviations or incidents
		Click text:global Previous_deviations_or_incidents,searchrectangle:[topRight of imagerectangle(text:"Previous deviations or incidents",searchRectangle:ScreenPart("Center")),imagelocation(text:"Previous deviations or incidents",searchRectangle:ScreenPart("Center"))+[400,44]]
		wait 3
		//Further_investigation_required
		Click text:global Further_investigation_required,searchrectangle:[topRight of imagerectangle(text:"Further investigation required",searchRectangle:ScreenPart("Center")),imagelocation(text:"Further investigation required",searchRectangle:ScreenPart("Center"))+[400,44]]
		wait 3
		//Further_actions_required
		Click text:global Further_actions_required,searchrectangle:[topRight of imagerectangle(text:"Further actions required",searchRectangle:ScreenPart("Center")),imagelocation(text:"Further actions required",searchRectangle:ScreenPart("Center"))+[400,44]]
		wait 3
		
		
		
		
		//Severity_of_potential_harm
		
		click imagelocation(text:"Severity of potential harm",WaitFor:30,searchRectangle:ScreenPart("Center"))+[250,0]
		wait 3
		
		click text:global Severity_of_potential_harm,searchRectangle:[topRight of imagerectangle(text:"Severity of potential harm",searchRectangle:ScreenPart("Center")),imagelocation(text:"Severity of potential harm",searchRectangle:ScreenPart("Center"))+[250,170]]

		wait 3
		//Likelihood_of_future_detection
		// put "3" into global Likelihood_of_future_detection
		click imagelocation(text:"Likelihood of future detection",WaitFor:120,searchRectangle:ScreenPart("Center"))+[250,0]
		wait 2
		click text:global Likelihood_of_future_detection,searchRectangle:[topRight of imagerectangle(text:"Likelihood of future detection",searchRectangle:ScreenPart("Center")),imagelocation(text:"Likelihood of future detection",searchRectangle:ScreenPart("Center"))+[200,400]]

		wait 2
		//AssociatedRiskSummary_in_ASSESS
		click imagelocation(text:"Associated Risk Summary",WaitFor:120,searchRectangle:ScreenPart("Center"))+[250,0]
		TypeText "test"
		// conclusion 
		click imagelocation(text:"Triage conclusion",WaitFor:30,searchRectangle:ScreenPart("Center"))+[250,0]
		TypeText "test"
		
		//click Save button
		click text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		put "TriageAssessmentEdited" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Edit_TriageAssessment 

// CreatedReferencedAssociatedRecord

to handle CreatedReferencedAssociatedRecord
	try
		//put "Change Control" into global Reference_object_type_item1
		split global Reference_object_type_item1 by "_"
		
		repeat with each item of global Reference_object_type_item1
			wait 3
			
			//click imageName:"ReferencedAssociatedRecords",waitfor:120
			NavigateToSectionFromLeftPane "Associated Records"
			wait 3
			click text:"Create",waitfor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
			WaitFor 120, text:"Reference Object",SearchRectangle:ScreenPart("Center")
			
			click  imagelocation(text:"Reference Object Type",waitfor:50,SearchRectangle:ScreenPart("Center"))+[200,0]
			
			Typetext it
			wait 2
			Typetext downArrow,return
			wait 2
			
			Click imageName:"RelatedProcess", waitFor:120
			wait 1
			Click imageName:"RelatedProcess_item1_Upper", waitFor:110
			wait 2
			TypeText controlKey,a
			TypeText controlKey,c
			Put RemoteClipboard() into global relatedRecordId
			//Log global relatedRecordId
			
			
			click item 2 of everyimagelocation(text:"Save",waitfor:20,SearchRectangle:ScreenPart("BottomRightQuadrant"))
			wait 2
			
			if ImageFound(text:"Reference Object Type", waitFor:20,SearchRectangle:ScreenPart("Center"))
				Put "ReferenceObjectAddedSuccessfully"&global relatedRecordId into global Vstep
				Log global Vstep
				CaptureAtLog
			else
				Put "ReferenceObjectIsNotAddedSuccessfully"&global relatedRecordId into global Vstep
				LogError global Vstep
				CaptureAtLog
			end if
			
			(*// verify it in List
if ImageFound(text:it, waitFor:20, SearchRectangle:["ReferenceObjectType_UL","ReferenceObjectType_BR"])
Put "AddedReferenceObjectDisplayedInList" into global Vstep
Log global Vstep
CaptureAtLog
else
Put "AddedReferenceObjectIsNotDisplayedInList" into global Vstep
LogError global Vstep
CaptureAtLog
end if*)
			
		end repeat
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreatedReferencedAssociatedRecord

to handle SharingSettings_NQA
	//SharingSettings "Named Quality Approver",global NQAusername
	SharingSettings "Quality Approver",global NQAusername
end SharingSettings_NQA
to handle QI_UserRoleSetup_QualityApprover

	UserRoleSetup global QAFirstName,"Quality Approver"
end QI_UserRoleSetup_QualityApprover
//IncidentCoordinatorVerifyQualityIncident

to handle CompleteTheTriageAssessment
	try
		// click complete button wrt Verify Quality Incident
		wait 2
		Click imageName:"TRIAGEASSESSMENTINPROGRESS", waitFor:120
		
		ScrollWheelUp 14
		
		wait 4
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 100, text:"Verdict",Searchrectangle:ScreenPart("Center")
		
		// QIVerdict:Cancel
		Set the searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",Searchrectangle:ScreenPart("Center")),RemoteScreenSize() ]
		if global QIVerdict is "Cancel"
			
			Click text:"Cancel", waitFor:"130"
			
			Typetext tabkey
			TypeText "test"
			wait 2
			
			
			click ImageLocation(text:"Reason for Cancellation")+[0,26]
			Click text:global QIReasonforCancellation
			
			
			
			Click text:"Complete", waitFor:120
			
			put "NamedIncidentCoordinatorCancelledQI" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QIVerdict contains "Deviation required"
			
			Click text:"Deviation required", waitFor:120
			Typetext tabkey
			Typetext"Testing"
			Click text:"Complete", waitFor:120
			
			put "NamedIncidentCoordinatorEscalateToDeviation" into global Vstep
			Log global Vstep
			CaptureAtLog
			//QIVerdict :Submit as QI
		else  if global QIVerdict contains "Submit"
			
			Click text:"Submit as QI", waitFor:120
			Typetext tabkey
			TypeText "test"
			ScrollWheelUp 2
			wait 3
			Typetext tabkey
			TypeText "test"
			Typetext tabkey
			TypeText "test"
			wait 2
			Click text:"Complete", waitFor:120
			put "NamedIncidentCoordinatorSubmitedAsQI " into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CompleteTheTriageAssessment







//Closure Approval
to handle Quality_Approval_To_close_as_QI
	try
		
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",Searchrectangle:ScreenPart("Center")
		
		Set the searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",Searchrectangle:ScreenPart("Center")),RemoteScreenSize() ]
		// verdict:Approved,QI sufficient
		if global QIQAClosureApprovalVerdict contains "QI sufficient"
			
			Click text:"Approved", waitFor:120
			Typetext tabkey
			Typetext "Testing"
			// need to implemet a  handler to insert security user name and password
			click imagelocation(text:"User Name")+[0,25]
			Typetext  global NQAusername
			
			click imagelocation(text:"Password")+[0,25]
			Typetext  global NQApassword
			//
			put "QAApproverApprovedAsQIsufficient" into global Vstep
			
		else if global  QIQAClosureApprovalVerdict contains "QI insufficient"
			
			Click text:"QI insufficient", waitFor:120
			TypeText tabKey
			Typetext "Test"
			
			put "QAApproverEscalatetToDeviation" into global Vstep
			
		else if global  QIQAClosureApprovalVerdict contains "More Info"
			
			Click text:"More Info", waitFor:120
			Typetext tab
			TypeText "test"
			put "QAApproverSelectMoreInfoTriageRequired" into global Vstep
		end if
		//click on complete
		Click text:"Complete", waitFor:120
		Set the searchrectangle to []
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Quality_Approval_To_close_as_QI

//Edit button should not available
to handle EditButtonAvailable
	//if ImageFound("edit_img")
	if ImageFound(Image:"edit_img",searchrectangle:[RemoteScreenSize()*[0.7,0.05],RemoteScreenSize()*[1,0.4]])
		Put "Edit button should be present in the page" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Edit button is not present" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end EditButtonAvailable


//Edit button should not available
to handle EditButtonNotAvailable

	if ImageFound(Image:"edit_img",searchrectangle:[RemoteScreenSize()*[0.7,0.05],RemoteScreenSize()*[1,0.4]])
		Put "Edit button present in the page" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else
		Put "Edit button should not be present in the page" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end EditButtonNotAvailable
//AddButton_UnAvailable_ImpactedProductInfo_QI
to handle AddButton_UnAvailable_ImpactedProductInfo_QI
	try
		Click text:"Impacted Product Information", waitFor:30
		wait 2
		
		if ImageFound("Add")
			Put "Add button is present in Impacted Product Information Page" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		else
			Put "Add button should not present in Impacted Product Information Page" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end AddButton_UnAvailable_ImpactedProductInfo_QI

//CreateButton_UnAvailable_Ref_AssociatedPage_QI
to handle CreateButton_UnAvailable_Ref_AssociatedPage_QI
	try
		Click image:"ReferencedAssociatedRecords", waitFor:30
		wait 2
		
		if ImageFound("CreateItem")
			Put "Create button is present in Reference Associated Page" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		else
			Put "Create button should not present in Reference Associated Page" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end CreateButton_UnAvailable_Ref_AssociatedPage_QI


// supplementary info NonEditable
to handle SupplementaryInfoNonEditable
	try
		wait 2
		click text:"Supplementary Information",waitfor:30
		if ImageFound(imageName:"CreateItem", waitFor:20)
			Put "SupplementaryIsEditable" into global Vstep
			Logerror global Vsteps
			
			CaptureAtLog
		else
			Put "SupplementaryIsNotEditableAsExpected" into global Vstep
			log global Vstep
			CaptureAtLog
			
		end if
		
		//
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end SupplementaryInfoNonEditable
//
to handle verify__DateDueField_NonEditable
	try
		Click imageName:"edit_img", waitFor:120  // "DateDue_BR
		wait 4
		Click imageName:"DateDue", waitFor:120
		
		
		if ImageFound("SunMonTueWedThuFriSat") then
			
			Put "DateDueIsEditable" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		else
			
			Put "DateDueIsNotEditableAsExpected" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end verify__DateDueField_NonEditable

//VerifyLifeCycleState_CLOSEDWITHDEVIATION

to handle VerifyLifeCycleState_CLOSEDWITHDEVIATION
	VerifyLifeCycleState "CLOSED - WITH DEVIATION"
end VerifyLifeCycleState_CLOSEDWITHDEVIATION

//VerifyLifeCycleState_PENDINGCANCELLATIONAPPROVAL

to handle VerifyLifeCycleState_PENDINGCANCELLATIONAPPROVAL
	VerifyLifeCycleState "PENDING CANCELLATION APPROVAL" 
end VerifyLifeCycleState_PENDINGCANCELLATIONAPPROVAL

//CLOSEDCANCELLED
to handle VerifyLifeCycleState_CLOSEDCANCELLED
	VerifyLifeCycleState "CANCELLED" 
end VerifyLifeCycleState_CLOSEDCANCELLED

//Add_ImpactedProduct Qi

to handle Add_ImpactedProduct_QI
	try
		wait 4
		Click text:"Impacted Product Information", waitFor:120
		Click imageName:"Add", waitFor:120
		WaitFor 50, "Sp_SKUNumber_UL"
		Put ReadText("Sp_SKUNumber_UL","Sp_SKUNumber_BR") into ProductSKUno
		//Log ProductSKUno
		Click imageName:"SP_Select_SKUNumber", waitFor:120
		Click imageName:"OKButtonPopup", waitFor:120
		wait 4
		If ImageFound(text:ProductSKUno, waitFor:60, SearchRectangle:["ImpactedProductInformation_UL","ImpactedProductInformation_BR"])
			Put "AssociatedProductAddedSuccessfully"&ProductSKUno into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "AssociatedProductIsNotAddedSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
		End If
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Add_ImpactedProduct_QI


//ApprovalofQICancellation_Complete

to handle ApprovalofQICancellation_Complete
	try
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",Searchrectangle:ScreenPart("Center")
		
		// Put "rejected" into global ApprovalOfQICancellationVerdict
		Set the searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",Searchrectangle:ScreenPart("Center")),RemoteScreenSize() ]
		if global ApprovalOfQICancellationVerdict contains "Approved"
			
			Click text :"Cancellation Approved", waitFor:120
			wait 1
			// need to implemet a  handler to insert security user name and password
			click imagelocation(text:"User Name")+[0,25]
			Typetext  global NQAusername
			
			click imagelocation(text:"Password")+[0,25]
			Typetext  global NQApassword
			//
			Click imageName:"Complete", waitFor:110
			
			Put "QAApproveTheCancellationOfQI"into global Vstep
			Log global Vstep
			CaptureAtLog
			//VerifyLifeCycleState_CLOSEDCANCELLED
			
		else if global ApprovalOfQICancellationVerdict contains "Reject"
			
			Click text:"Cancellation Rejected", waitFor:120
			Typetext tabkey
			Typetext"Test"
			
			Click text:"Complete", waitFor:110
			
			Put "QARejectsTheCancellationOfQI"into global Vstep
			Log global Vstep
			CaptureAtLog
			//VerifyLifeCycleState_TRIAGEASSESSMENTINPROGRESS
		end if
		Set the searchrectangle to []

	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end ApprovalofQICancellation_Complete

//ReopenActionButtonNotAvailable_InCogWheelDD
to handle ReopenActionButtonNotAvailable_InCogWheelDD
	try
		Click imageName:"CogWheelNew", waitFor:130
		if ImageFound(imageName:"ReopenActionButton", waitFor:110)
			Put "ReOpenActionOptionIsDisplaying" into global Vstep
			LogError global Vstep
			CaptureAtLog
			
		else
			Put "ReOpenActionOptionIsNotDisplayingAsExpected" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end ReopenActionButtonNotAvailable_InCogWheelDD


//VerifyErrorPopupWhileTriageAssessmentNotFilled

to handle VerifyErrorPopupWhenTriageAssessmentNotFilled

	//"ErrorPopUp_UL"  ErrorPopUp_BR
	
	
	//if ImageFound(imageName:"ErrorPopUp_TriageUnfilled", waitFor:20)
	
	if ImageFound(text:"Please update the record and try again", waitFor:120,searchrectangle:["ErrorPopUp_UL","ErrorPopUp_BR"])
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		Click imageName:"OKButtonPopup", waitFor:100
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPopupWhenTriageAssessmentNotFilled




//ReassignTaskToOtherUser

to handle ReassignTaskToOtherUser NewTaskOwner
	try
		
		
		wait 5
		Click text:"workflow timeline ", waitFor:120,ignoreSpaces:Yes,searchrectangle:ScreenPart("TopLeftQuadrant")
		//NavigateToSectionFromLeftPane "workflow timeline "
		WaitFor 100, text:"Workflow Timeline",SearchRectangle:[RemoteScreenSize()*[0.15,0.1],RemoteScreenSize()]
		
		Put "Workflow Timeline section should be displayed" into  global Vstep
		
		Log global Vstep
		CaptureAtLog
		
		Set the SearchRectangle to ["ReAssignCogWheelUL",RemoteScreenSize()] 
		Click image:"CogwheelWorkFlowT2",waitfor:60
		waitfor 120,text:"Reassign"
		click text:"Reassign",waitfor:120
		wait 2
		Put "Reassign Task popup should be displayed" into  global Vstep
		
		Log global Vstep
		CaptureAtLog
		
		Set the SearchRectangle to []
		Click imageName:"Newtaskowner", waitFor:30
		wait 2
		
		TypeText NewTaskOwner
		
		wait 2
		Click imageName:"NewtaskownerFirstItem", waitFor:10
		wait 2
		Typetext controlKey,c
		Put the RemoteClipboard into VNewTaskOwner
		
		wait 2
		Click imageName:"continue", waitFor:50
		
		wait 3
		Click text:"workflow timeline ", waitFor:120,ignoreSpaces:Yes,SearchRectangle:[[0,74],RemoteScreenSize()]
		wait 1
		
		if ImageFound(text:VNewTaskOwner, waitFor:60,searchrectangle:["ReAssignTask_GreenIcon_UL","ReAssignTask_GreenIcon_BR"])
			Put"Task Reassigned Successfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			put VNewTaskOwner into global VNewTaskOwner
			(*else if ImageFound("Newtaskowner")
			Put "Task Is Not Reassigned Successfully" into  global Vstep
			
			LogError global Vstep
			CaptureAtLog*)
		else 
			Put"Task Reassigned UnSuccessfully" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
		
		
		
		////////	
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end ReassignTaskToOtherUser

to handle NIC_ReassignTaskToOtherUser_NQA
	//ReassignTaskToOtherUsern global NICusername,global NICpassword
	ReassignTaskToOtherUser global NewNQAUsername
end  NIC_ReassignTaskToOtherUser_NQA

to handle SharingSettings_NewNQA
	SharingSettings "Quality Approver",global NewNQAUsername
	
end SharingSettings_NewNQA


to handle OpenRecord_IA_PENDINGQUALITYAPPROVAL
	NavigateToSectionFromLeftPane "Implementation Action Items"
	SearchRecords_With_State "PENDING QUALITY APPROVAL"
end OpenRecord_IA_PENDINGQUALITYAPPROVAL


to handle StartImplementation
	// click on a Implementation Item which state is Draft
	try
		
		Click imageName:"CogWheelNew", waitFor:120
		Click imageName:"StartImplementation", waitFor:120, //////searchRectangle
		wait 4
		
		if ImageFound(text:"Submit action for pre-Approval", waitFor:120)
			Put "SuccessfullStartImplementation" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "UnsuccessfullyStartImplementation" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if	
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end  StartImplementation


to handle SubmitActionForPreApproval
	try
		//Click imageName:"IA_Submitactionforpreapproval", waitFor:120
		Click text:"Complete", waitFor:120,searchrectangle:Screenpart("TopRightQuadrant")
		wait 3
		if global SubmitActionForPreApproval_Verdict is "Submit action for pre-approval"
			click item 2 of EveryImageLocation(text:"Submit action for pre-approval",searchrectangle:ScreenPart("Center"))
			wait 2
			if global FA_Require_Not is "Yes"
				//click text:"Yes"
				click text:"yes",SearchRectangle:Screenpart("BottomleftQuadrant")
			else
				//click text:"No"
				click text:"No",SearchRectangle:[[790,490],[1170,770]]
			end if
			Click imageName:"Complete", waitFor:120
			
			Put "SubmitActionForPreApprovalMovesToPre-Approval " into global Vstep
			Log global Vstep
			CaptureAtLog
			//IA verdict closed Cancelled		
		else  
			Click text:"Cancel Action", waitFor:120
			TypeText tabKey, waitFor: 60
			TypeText "test"
			wait 2
			TypeText tabKey
			TypeText "Raised in error"
			TypeText downArrow, return
			
			
			Click item2 of EveryImageLocation("Complete"), waitFor: 120
			Put "CancelActionForPreApprovalMovesToClosedCancelled " into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end SubmitActionForPreApproval

to handle CancelImplementationAction
	try
		
		wait 3
		Click imageName:"CancelImpactAssessment", waitFor:120
		
		//wait 4
		//Click text:"Cancel Implementation", waitFor:40
		
		Put "Implementation activity moved from DRAFT to CLOSED CANCELLED" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CancelImplementationAction

to handle VerifyLifeCycleState_ASSESSMENTINPROGRESS
	VerifyLifeCycleState "ASSESSMENT IN PROGRESS"
end VerifyLifeCycleState_ASSESSMENTINPROGRESS

to handle VerifyLifeCycleState_CLOSEDINCOMPLETE
	VerifyLifeCycleState "CLOSED - INCOMPLETE"
end VerifyLifeCycleState_CLOSEDINCOMPLETE

to handle ALLCC
	wait 3
	Click imageName:"AllChangeControl", waitFor:120
end ALLCC

////

//********Deviation Handlers *******//
function ScreenPart Portion
	set screenPortions to {
		
		TopHalf: ((0,0),(1,.5)),
		
		BottomHalf: ((0,.5),(1,1)),
		
		LeftHalf: ((0,0),(.5,1)),
		
		RightHalf: ((.5,0),(1,1)),
		
		HorizontalMiddle: ((0,.25),(1,.75)),
		
		VerticalMiddle:((.25,0),(.75,1)),
		
		TopLeftQuadrant:((0,0),(.5,.5)),
		
		TopRightQuadrant:((.5,0),(1,.5)),
		
		BottomLeftQuadrant:((0,.5),(.5,1)),
		
		BottomRightQuadrant:((.5,.5),(1,1)),
		
		Center:((.25,.25),(.75,.75)),

	}
	
	set multiplier to screenPortions.(Portion) // Retrieves the value for the key in the property list. The name of the key is passed as a parameter into the function.
	
	// Error handling is needed in the event that an unrecognized parameter is passed to the function
	
	if multiplier is empty then
		
		throw "Parameter error", Portion && "is not a recognized screen portion."
		
	end if
	
	return (the remoteScreenSize,the remotescreenSize) * multiplier
	
End ScreenPart

=======================


// Deviation common handlers start

to handle SharingSettings_DeviationCoordinator
	W_App_CommonHandlers.SharingSettings "Deviation Coordinator",global DCusername
	
end SharingSettings_DeviationCoordinator


//InvestigationActionOwnerUsername
to handle SharingSettings_InvestigationActionOwner

	W_App_CommonHandlers.SharingSettings "Action Owner",global InvestigationActionOwnerUsername
	
end SharingSettings_InvestigationActionOwner

//MtActionOwnerUsername
to handle SharingSettings_MTActionOwner
	W_App_CommonHandlers.SharingSettings "Action Owner",global MtActionOwnerUsername
	
end SharingSettings_MTActionOwner

//SharingSettings_CapaActionOwner
to handle SharingSettings_CapaActionOwner
	W_App_CommonHandlers.SharingSettings "Action Owner",global CapaActionOwnerUsername
	
end SharingSettings_CapaActionOwner

//CreateDeviation
to handle CreateDeviation

	try
		SelectingQMSProcess
		(*	Put "10 Mar 2021" into global DeviationDateDue
Put "Health" into global GBU
Put "Deviation" into global DvSourceOfIncident
Put "Documentation" into global DvTypeOfIncident
Put "Written" into global DvRelatedQMSElement
Put "04 Mar 2021" into global DeviationOccurrenceDueDate
Put "Minor" into global DeviationEstimatedSeverity
Put "bangalore" into global DeviationImpactedLocation
Put "value" into global DeviationRegulatoryClassification*)
		
		wait 4
		
		Click text:"+ Create", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		wait 5
		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		wait 2
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:60,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		//Related QMS Element
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:60,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:60,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		wait 1
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		wait 1
		Typetext "Site"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 2
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
		(*	Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationImpactedLocation
Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[240,50]

//regulatory classification class required Regulatory Classification
Click ImageLocation(text:"Regulatory Classification",waitFor:60,SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationRegulatoryClassification
Click ImageLocation(text:"Regulatory Classification",waitFor:60,SearchRectangle:ScreenPart("Center"))+[240,28]*)
		
		Click ImageLocation(text:"Brand Specific",waitFor:60,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global BrandSpecific
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CreateDeviation

//VerifyLifeCycleState_PROPOSEDACTION
to handle VerifyLifeCycleState_PROPOSEDACTION
	W_App_CommonHandlers.VerifyLifeCycleState "Proposed Action" --need to take PROPOSEDACTION image in azure
	
end VerifyLifeCycleState_PROPOSEDACTION
//VerifyLifeCycleState_INPROGRESS
to handle VerifyLifeCycleState_INPROGRESS
	W_App_CommonHandlers.VerifyLifeCycleState "In Progress"
end VerifyLifeCycleState_INPROGRESS

//DCusername login
to handle LoginToApplication_DC
	LoginToApplication global DCusername,global DCpassword
	
end  LoginToApplication_DC

//LoginToApplication_CapaActionOwner
to handle LoginToApplication_CapaActionOwner
	LoginToApplication global CapaActionOwnerUsername,global CapaActionOwnerPassword
	
end  LoginToApplication_CapaActionOwner
//NavigateToMitigationAction

to handle NavigateToMitigationAction
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Mitigation Actions"
end NavigateToMitigationAction

//NavigateToRootCauseIdentified

to handle NavigateToRootCauseIdentified
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Root Causes Identified"
end NavigateToRootCauseIdentified

//NavigateToInvestigationSummary
to handle NavigateToInvestigationSummary
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Investigation Summary"
end NavigateToInvestigationSummary

//CreateMitigationAction


To handle CreateMitigationActions
	try
		
		W_App_CommonHandlers.NavigateToMitigationAction
		
		(*Put "12 April 2021" into global MitigationDateDue*)
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Mitigation Action",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Create Mitigation Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext "testsd"
		Typetext tabkey
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global MitigationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,100]
		wait 1
		(*click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))*)
		Click imageName:"Save", waitFor:120,searchRectangle:ScreenPart("Center")
		
		Put "Mitigation Deatails Entered and Saved in Create Mitigation Page" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
End CreateMitigationActions

// open child records which state is draft
to handle OpenRecord_Draft
	//NavigateToSectionFromLeftPane "Mitigation Actions"
	W_App_CommonHandlers.SearchRecords_With_State "Draft"
end OpenRecord_Draft

//SubmitMitigationAction

to handle SubmitMitigationAction
	try
		//Put "Sunil" into global MtActionOwnerUsername
		Click imageName:"CogWheelNew", waitFor:120
		wait 2
		Click text:"Submit Mitigation Action", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,25]

		Typetext global MtActionOwnerUsername
		wait 15
		Typetext downArrow, return
		wait 2
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,10]
		click item 2 of everyImageLocation(text:"Start",searchRectangle:ScreenPart("Center"))
		
		Put "Submitting Mitigation Action" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
end SubmitMitigationAction

//LoginToApplication_MTActionOwner
to handle LoginToApplication_MTActionOwner
	LoginToApplication global MtActionOwnerUsername,global MtActionOwnerPassword
	
end  LoginToApplication_MTActionOwner
//open child records which state is In Progress
to handle OpenRecord_INPROGRESS

	W_App_CommonHandlers.SearchRecords_With_State "In Progress"
end OpenRecord_INPROGRESS

//CompleteMitigationAction

to handle CompleteMitigationAction

	try
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
		
		if global CompleteMitigationActionVerdict is "Complete Action"
			Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Action Completion Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			wait 2
			Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteMitigationActionVerdict is "Cancel"
			
			Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Cancel Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteMitigationActionVerdict is "More Information Required"
			Click text:"More Information Required", waitFor:120,searchRectangle:ScreenPart("Center")
			Typetext tabKey
			TypeText "test"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			Put "Action Owner More Info required for Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try		
end CompleteMitigationAction

//NavigateToInvestigationAction


to handle NavigateToInvestigationAction
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Investigation Actions"
end NavigateToInvestigationAction

//NavigateToCapaPlan

to handle NavigateToCapaPlan
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "CAPA Plan"
end NavigateToCapaPlan


//CreateInvestigationAction

to handle CreateInvestigationAction

	try
		W_App_CommonHandlers.NavigateToInvestigationAction
		
		CreateInvestigationAction_VerifyPopup
		CreateInvestigationAction_Complete
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CreateInvestigationAction

(*//SubmitInvestigation
to handle SubmitInvestigationAction
	try
		(*Put "Sunil" into global InvestigationActionOwnerUsername*)
		Click imageName:"CogWheelNew, waitFor:120
		wait 2
		Click text:"Submit Investigation", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,25]

		Typetext global InvestigationActionOwnerUsername
		wait 5
		Typetext downArrow, return
		wait 2
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,10]
		click item 2 of everyImageLocation(text:"Start",searchRectangle:ScreenPart("Center"))
		
		Put "Submitting Investigation Action" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
end SubmitInvestigationAction*)

//LoginToApplication_InvestigationActionOwner
to handle LoginToApplication_InvestigationActionOwner
	LoginToApplication global InvestigationActionOwnerUsername,global InvestigationActionOwnerPassword
	
end  LoginToApplication_InvestigationActionOwner

//CompleteInvestigationAction

to handle CompleteInvestigationAction
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete Investigation Action",searchrectangle:ScreenPart("Center")
		
		if global CompleteInvestigationActionVerdict is "Complete Action"
			Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Investigation Action Summary", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			wait 2
			Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Investigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteInvestigationActionVerdict is "Cancel"
			
			Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Cancels Investigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteInvestigationActionVerdict is "More Information Required"
			Click text:"More Information Required", waitFor:120,searchRectangle:ScreenPart("Center")
			Typetext tabKey
			TypeText "test"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			Put "Action Owner More Info required for Investigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
	
	
end CompleteInvestigationAction




//CreateRootCausesIdentified
to handle CreateRootCausesIdentified
	try
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Root Cause",searchrectangle:ScreenPart("Center")
		// if later required we will uncomment below code and update
		
		click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		wait 10
		Typetext "Root Cause"
		click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[120,20]


		wait 2
		Typetext tabKey
		wait 2
		Typetext "1"
		TypeText downArrow, return
		(*click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("BottomHalf"))+[120,22]
wait 2*)
		click ImageLocation(text:"Category",searchrectangle:ScreenPart("BottomHalf"))+[100,0]
		Typetext "Environment"
		wait 2
		click ImageLocation(text:"Category",searchrectangle:ScreenPart("BottomHalf"))+[120,45]
		wait 1
		Typetext tabKey
		wait 1
		Typetext "Environment", return
		
		wait 1
		(*click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[100,0]
Typetext "1"
wait 1
click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[120,45]*)
		
		click item 2 of everyimagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 5
		if ImageFound(text:"Root Cause", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Root Cause Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Root Cause Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	
end CreateRootCausesIdentified

//CreateCapaPlan_WithCapaProgram

to handle CreateCapaPlan_WithCapaProgram
	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	
		
		click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]

		//CreateCapaProgram Handlers
		CreateCapaProgram
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		Typetext "TestCapaDc"
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		if ImageFound(text:"PROPOSED ACTION", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant"))
			Put "CAPA Plan Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Plan Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CreateCapaPlan_WithCapaProgram

// CreateCapaProgram

to handle CreateCapaProgram
	try
		// Put "07 Mar 2021" into global CapaProgramDateDue
		wait 2
		Click text:"Create", waitFor:50,searchRectangle:ScreenPart("Center")
		wait 2
		WaitFor 120, text:"Create CAPA Program",searchrectangle:ScreenPart("Center")
		click FoundImageLocation()
		wait 2
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaProgramDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
		typetext "TestSD"
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Health"
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
		click imagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("BottomHalf"))
		wait 5
		if ImageFound(text:"CAPA Program Id", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Program Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Program Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	
end CreateCapaProgram


//EditInvestigationSummary
to handle EditInvestigationSummary
	try
	(*Put "no Root Cause" into global RCATool
Put "no Risk Assessment" into global RiskAssessmentTool
Put "No" into global ISRepeatOccurrence
Put "Minor" into global PotentialRiskToPatientConsumer
Put "Minor" into global PotentialCompliance
Put "Minor" into global PotentialRiskOfImpactingEfficacy*)
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
		click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[150,0]
		Typetext backspace,backspace,backspace
		Click text:global RCATool,SearchRectangle:ScreenPart("Center")
		wait 1
		
		
		click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,30]

		if global RCATool is "no Root Cause"
			click imagelocation(text:"Justification for no RCA tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]
			Typetext "t"
		end if
		
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]
		wait 1
		Typetext backspace,backspace,backspace
		Typetext global RiskAssessmentTool
		wait 1
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,31]
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[0,31]
		if global RiskAssessmentTool contains "no Risk Assessment"
			//click imagelocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("Center") )+[150,0]
			TypeText tabKey
			Typetext "t"
		end if
		
		if global ISRepeatOccurrence contains "Yes"
			click text:"Yes",SearchRectangle:ScreenPart("Center")
		else
			click text:"No",SearchRectangle:ScreenPart("Center")
		end if
		
		// not completed
		
		//Investigation Conclusion
		click imagelocation(text:"Investigation Conclusion",SearchRectangle:ScreenPart("LeftHalf") )+[200,0]
		Typetext "Test"
		//Potential risk to
		click imagelocation(text:"Potential risk to" )+[250,0]
		//click text:global PotentialRiskToPatientConsumer,SearchRectangle:ScreenPart("Center")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskToPatientConsumer
		wait 1
		click imagelocation(text:"Potential risk to" )+[250,30]

		wait 1
		//Potential compliance
		click imagelocation(text:"Potential compliance" )+[250,0]
		//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialCompliance
		wait 1
		click imagelocation(text:"Potential compliance" )+[250,30]


		//Potential risk of impacting
		click imagelocation(text:"Potential risk of impacting" )+[250,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskOfImpactingEfficacy
		wait 1
		click imagelocation(text:"Potential risk of impacting" )+[250,30]
		wait 1
		click imagelocation(text:"Potential risk of impacting" )+[0,30]
		wait 1
		(*	// Capa program
click imagelocation(text:"CAPA Program",SearchRectangle:ScreenPart("RightHalf") )+[250,0]
wait 2
Click  imagelocation(text:"CAPA Program",SearchRectangle:ScreenPart("RightHalf") )+[250,30]*)
		
		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvRelatedQMSElement, return
		wait 2
		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[0,32]
		
		click text:"Save",SearchRectangle:ScreenPart("RightHalf")
		wait 15
		
		(*	Put ReadText(ImageLocation(text:"Final Severity")+[32,-10],ImageLocation(text:"Final Severity")+[166,15]) into global FinalSeverity*)
		//Log FinalSeverity
		
		
		
		
		
		Put "Investigation Summary and Conclusion Edited Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end EditInvestigationSummary


//CancelMitigationAction 
to handle CancelMitigationAction
	try
		
		Click imageName:"CancelImpactAssessment", waitFor:120
		wait 5
		//Click text:"Cancel Mitigation Action", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		click item 3 of EveryImageLocation(text:"Start",searchrectangle:ScreenPart("Center"))
		Put "Cancel Mitigation Action Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		(*VerifyLifeCycleState_CLOSEDCANCELLED*)
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end CancelMitigationAction


//VerifyLifeCycleState_PENDINGMOREINFORMATION
to handle VerifyLifeCycleState_PENDINGMOREINFORMATION
	W_App_CommonHandlers.VerifyLifeCycleState "PENDING MORE INFORMATION"
	
end VerifyLifeCycleState_PENDINGMOREINFORMATION

//OpenRecord_PENDINGMOREINFORMATION
to handle OpenRecord_PENDINGMOREINFORMATION

	W_App_CommonHandlers.SearchRecords_With_State "PENDING MORE INFORMATION"
end OpenRecord_PENDINGMOREINFORMATION

//UpdateTheActionDetailsReSubmit

to handle UpdateTheActionDetailsReSubmit_MT
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Update the Action details",searchrectangle:ScreenPart("Center")
		
		if global UpdateActionReSubmitVerdict_MT is "Updated"
			click  text:"Updated",searchrectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext "Testing Comment"
			click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
			
			Put "Updated and ReSubmitted the Action successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global UpdateActionReSubmitVerdict_MT is "Cancel"
			
			click  text:"Cancel",searchrectangle:ScreenPart("HorizontalMiddle")
			Typetext tabkey
			Typetext "Testing Justification for cancel"
			wait 1
			Typetext tabkey
			Typetext "Raised in"
			wait 1
			Typetext downArrow,return
			click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
			
			Put "Cancel the Action in Update and Resubmit page successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		end if	
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end UpdateTheActionDetailsReSubmit_MT



to handle UpdateTheActionDetailsReSubmit_Investigation
	try
		
		wait 3
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Update the Action details",searchrectangle:ScreenPart("Center")
		
		if global UpdateActionReSubmitVerdict_Investigation is "Updated"
			click  text:"Updated",searchrectangle:ScreenPart("Center")
			
			click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
			
			Put "Updated and ReSubmitted the Action successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global UpdateActionReSubmitVerdict_Investigation is "Cancel"
			
			click  text:"Cancel",searchrectangle:ScreenPart("HorizontalMiddle")
			Typetext tabkey
			Typetext "Testing Justification for cancel"
			Typetext tabkey
			Typetext "Raised in"
			wait 1
			Typetext downArrow,return
			click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
			
			Put "Cancel the Action in Update and Resubmit page successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		end if	
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end UpdateTheActionDetailsReSubmit_Investigation

//CancelInvestigationAction
to handle CancelInvestigationAction
	try
		
		Click imageName:"CancelImpactAssessment", waitFor:120
		wait 2
		//Click text:"Cancel Investigation", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Put "Cancel Investigation Action Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end CancelInvestigationAction


//CompleteInvestigationRCAActionPlan


to handle CompleteInvestigationRCAActionPlan

	try
	(*		Put "Yes" into global CompleteInvestigationRCA_FArequired
Put "Cancel" into global CompleteInvestigationRCAVerdict*)
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
		if global CompleteInvestigationRCAVerdict is "Submit for approval"
			Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")
			// FA required or not
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteInvestigationRCAVerdict is "Cancel"
			
			Click text:"Cancel", waitFor:50,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click imageName:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Cancelled" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
	
end CompleteInvestigationRCAActionPlan

to handle VerifyLifeCycleState_ClosedApproved
	VerifyLifeCycleState "Approved"
end VerifyLifeCycleState_ClosedApproved

//Dev_PendingQualityApproval_Task

to handle Dev_PendingQualityApproval_Task
	try
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Quality Approval",SearchRectangle:ScreenPart("Center")
		
		
		
		if global DV_QAverdict is "Approved"
			Click text:"Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			TypeText tabkey
			wait 1
			typetext global QAusername
			TypeText tabkey
			typetext "rbQone@1test", Return
			Click imageName:"complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprover approvedDeviation" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global DV_QAverdict is "Rejected"
			Click text:"Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApproverCancelledDeviation" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global DV_QAverdict is "Include Function Approvers"
			
			Click text:"Include Function Approvers", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingIncludeFunctionApprovers"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApproverIncludeFunctionApproversForDeviation" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end Dev_PendingQualityApproval_Task

//Dev_PendingFunctionApproval_Task
to handle Dev_PendingFunctionApproval_Task

	try
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Function Approval",SearchRectangle:ScreenPart("Center")
		
		if global Dev_FAverdict is "Function Approved"
			Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApprover approvedDeviation" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global Dev_FAverdict is "Function Rejected"
			Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApproverRejectedDeviation" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "FunctionApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end Dev_PendingFunctionApproval_Task





// Deviation common handlers End


//CM_UserRoleSetup_ComplaintCoordinator



to handle CM_UserRoleSetup_ComplaintCoordinator
	//Put "Health CM 1" into global ComplaintCoordinatorrFirstName
	UserRoleSetup global ComplaintCoordinatorFirstName,"Complaint Coordinator"
end CM_UserRoleSetup_ComplaintCoordinator



to handle CM_UserRoleSetup_PeerReviewer
	//Put "Health CM 2" into global ComplaintCoordinatorrFirstName
	UserRoleSetup global PeerReviewerFirstName,"Complaint Coordinator reviewer"
end CM_UserRoleSetup_PeerReviewer

/////

//VerifyLifeCycleState_CHANGECOORDINATORREVIEW

to handle VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	VerifyLifeCycleState "CHANGE COORDINATOR REVIEW"
end VerifyLifeCycleState_CHANGECOORDINATORREVIEW

to handle VerifyLifeCycleState_CHANGENOTIMPLEMENTED
	VerifyLifeCycleState "Closed - Change Not Implemented"
end VerifyLifeCycleState_CHANGENOTIMPLEMENTED



//VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVA
to handle VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	VerifyLifeCycleState "PENDING QUALITY CLOSURE APPROVAL" --need to take imag in azure
end VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
//VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
to handle VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	VerifyLifeCycleState "PENDING FUNCTION CLOSURE APPROVAL" --need to take imag in azure
end VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
// VerifyLifeCycleState_AUTHORISED
to handle VerifyLifeCycleState_AUTHORISED
	VerifyLifeCycleState "AUTHORISED" --need to take imag in azure
end VerifyLifeCycleState_AUTHORISED




//NavigateToImplementationAction
to handle NavigateToImplementationAction
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Implementation Action"
end NavigateToImplementationAction
//OpenRecord_IA_AUTHORISED



to handle OpenRecord_IA_AUTHORISED
	W_App_CommonHandlers.NavigateToImplementationAction
	W_App_CommonHandlers.SearchRecords_With_State "AUTHORISED"
	
end OpenRecord_IA_AUTHORISED



to handle OpenRecord_AUTHORISED
	W_App_CommonHandlers.SearchRecords_With_State "AUTHORISED"
end OpenRecord_AUTHORISED
//ImpactAssessmentOutputSection
to handle NavigateToImpactAssessmentOutputSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Impact Assessment Output"
end NavigateToImpactAssessmentOutputSection



//NavigateToImplementationActivities
to handle NavigateToImplementationActivities
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Activities"
end NavigateToImplementationActivities



//OpenRecord_ACT_WORKINPRGORESS
to handle OpenRecord_ACT_WORKINPRGORESS
	W_App_CommonHandlers.NavigateToImplementationActivities
	W_App_CommonHandlers.SearchRecords_With_State "Work in progress"
end OpenRecord_ACT_WORKINPRGORESS

//AssignActionOwner
to handle AssignActionOwner
	try
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete",searchrectangle:ScreenPart("Center")
		
		click text:"Complete",searchrectangle:ScreenPart("Center")
		
		Put"Implementation Action Assigned to Action Owner Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end AssignActionOwner

//UserRoleSetup

to handle UserRoleSetup_CAPA QoneFirstName, Role
	try
	(*put "healthcm1 complaintcoordinator" into QoneFirstName
put "complaint coordinator" into Role*)
		wait 3
		Click Image:"UserRoleSetup", waitFor:120
		wait 3
		WaitFor 120, text:"Show in tab"
		Put "User Role Setup screen should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click text:"Create", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]

		WaitFor 120, text:"Create User Role Setup ",searchrectangle:screenpart("center"),
		(*set the searchrectangle to [bottomLeft of Imagerectangle(text:"Create User Role Setup"), ImageLocation(text:"Create User Role Setup")+[755,560]]*)
		Put "Create User Role Setup Popup should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		set the SearchRectangle to [[550,326],[1369,820]]
		
		click Image:"Userbar", searchrectangle: [topright of Imagerectangle(text:"User"),RemoteScreenSize()]
		
		WaitFor 120, text:"Use Search bar",searchrectangle:ScreenPart("TopHalf")
		wait 5
		//put "Health DEV 1 Function Approver" into QoneFirstName
		Typetext QoneFirstName
		typetext return
		wait 3
		Click ImageLocation(text:"Name",searchrectangle:ScreenPart("Center"))+[0,32]
		click Image:"Close",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		//
		wait 2
		//TypeText tabKey
		(*Click imagelocation(text:"Role", waitFor:120)+[70,0]*)
		Click imagelocation(imageName:"UserRole", waitFor:120)
		wait 2
		(*put "Function Approver" into Role*)
		Typetext Role
		wait 7
		Typetext return
		(*Click ImageLocation(text:"Role")+[60,41]*)
		wait 3
		Click item 2 of everyimagelocation(text:"Save", waitFor:120)
		//click text:"Save",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		set the SearchRectangle to []
		//
		wait 3
		if ImageFound(text:Role, waitFor:120)
			Put Role&" should be added" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put Role&" is not added" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		wait 4
		ScrollWheelUp 30
		wait 3
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end UserRoleSetup_CAPA

to handle UserRoleSetup QoneFirstName, Role
	try
	(*put "healthcm1 complaintcoordinator" into QoneFirstName
		put "complaint coordinator" into Role*)
		
		wait 3
		Click Image:"UserRoleSetup", waitFor:50
		wait 3
		
		WaitFor 50, text:"Show in tab"
		Put "User Role Setup screen should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		Click text:"Create", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]
		
		
		WaitFor 120, text:"Create User Role Setup"
		set the searchrectangle to [bottomLeft of Imagerectangle(text:"Create User Role Setup"), ImageLocation(text:"Create User Role Setup")+[755,560]]
		
		Put "Create User Role Setup Popup should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		click Image:"SmallBionocolar", searchrectangle: [topright of Imagerectangle(text:"User")+[0,-5],RemoteScreenSize()]
		WaitFor 120, text:"Use Search bar",searchrectangle:ScreenPart("TopHalf")
		wait 2
		//put "Ajit" into QoneFirstName
		Typetext QoneFirstName
		
		typetext return
		wait 3
		Click ImageLocation(text:"Name",searchrectangle:ScreenPart("Center"))+[0,32]
		click imageName:"close",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		//
		wait 2
		//TypeText tabKey
		Click imagelocation(text:"Role", waitFor:120)+[70,0]
		wait 2
		//put "complaint coordinator" into Role
		Typetext Role
		wait 7
		
		Click ImageLocation(text:"Role")+[60,41]
		wait 3
		Click item 2 of everyimagelocation(text:"Save", waitFor:120)
		
		set the SearchRectangle to []
		//
		
		
		
		if ImageFound(text:Role, waitFor:120)
			Put Role&" should be added" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put Role&" is not added" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		wait 4
		ScrollWheelUp 30
		wait 3
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
	
end UserRoleSetup

to handle UserRoleSetup_PFA
	UserRoleSetup global PFA,"Function Post-Approver" 
end UserRoleSetup_PFA

//CC
to handle UserRoleSetup_CC
	UserRoleSetup global CCUserID,"Change Coordinator" 
end UserRoleSetup_CC

//FA
to handle UserRoleSetup_FA
	UserRoleSetup global FA,"Function Approver" 
end UserRoleSetup_FA

//QA
to handle UserRoleSetup_QA
	UserRoleSetup global QA,"Quality Approver" 
end UserRoleSetup_QA

//AO
to handle UserRoleSetup_ActionOwner
	UserRoleSetup global ActionOwner,"Action Owner" 
end UserRoleSetup_ActionOwner

//DC
to handle UserRoleSetup_DeviationCoordinator
	UserRoleSetup global DCUserID,"Deviation Coordinator" 
end UserRoleSetup_DeviationCoordinator


//Dev_PendingCancellationFunctionApproval_Task



to handle Dev_PendingCancellationFunctionApproval_Task



	try
		// Put "Function approved" into global PendingCancellationFunctionApprovalVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Cancellation Function Approval",SearchRectangle:ScreenPart("Center")
		
		
		
		if global PendingCancellationFunctionApprovalVerdict contains "Approved"
			Click text:"Cancellation Function Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingApproved"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			wait 5
			Put "PendingCancellationFunctionApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global PendingCancellationFunctionApprovalVerdict contains "Rejected"
			Click text:"Cancellation Function Rejected", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "PendingCancellationFunctionApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailableInPendingCancellationFunctionApprovalTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if    
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end Dev_PendingCancellationFunctionApproval_Task


//Duplicate Handler for Dev_PendingCancellationFunctionApproval_Task

to handle Dev_PendingCancellationFunctionApproval_Task_Duplicate



	try
		// Put "Function approved" into global PendingCancellationFunctionApprovalVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Cancellation Function Approval",SearchRectangle:ScreenPart("Center")
		
		
		
		if global PendingCancellationFunctionApprovalVerdict_Duplicate contains "Approved"
			Click text:"Cancellation Function Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingApproved"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			wait 3
			Put "PendingCancellationFunctionApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global PendingCancellationFunctionApprovalVerdict_Duplicate contains "Rejected"
			
			Click text:"Cancellation Function Rejected", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "PendingCancellationFunctionApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailableInPendingCancellationFunctionApprovalTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if    
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end Dev_PendingCancellationFunctionApproval_Task_Duplicate




//Dev_PendingCancellationQualityApproval_Task
to handle Dev_PendingCancellationQualityApproval_Task
	try
		// Put "approved" into global PendingCancellationFunctionApprovalVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Quality Approval of Cancellation",SearchRectangle:ScreenPart("Center")
		
		
		
		if global PendingCancellationQualityApprovalVerdict contains "Approved"
			Click text:"Cancellation Quality Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingApproved"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			wait 3
			Put "PendingCancellationQualityApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global PendingCancellationQualityApprovalVerdict contains "Rejected"
			Click text:"Cancellation Quality Rejected", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "PendingCancellationQualityApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailableInPendingCancellationQualityApprovalTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if    
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end Dev_PendingCancellationQualityApproval_Task

//navigate to CAPA Requirements Section
to handle NavigateToCapaRequirements
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "CAPA Requirements"
end NavigateToCapaRequirements

// AddingCapaProgran_In_CapaRequirementSection
// data: global Capa_Required,global ExistingCapaProgramRequired,global ExistingCapaProgram,global CapaProgramDateDue,global GivenRecordId



to handle AddingCapaProgran_In_CapaRequirementSection

	//Put "No" into global Capa_Required
	try
	(*Put "Yes" into global Capa_Required
		Put "No" into global ExistingCapaProgramRequired
		Put "10 April 2021" into global CapaProgramDateDue*)
		click Image:"edit_img",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
		// put "Yes" into global Capa_Required
		click text:global Capa_Required,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[150,50]]
		if global Capa_Required is "No"
			click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
			Typetext "Test"
			click text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
			Put "CAPA Program Not Required Selected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		// put "No" into global ExistingCapaProgramRequired
		click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Existing CAPA Program",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"Existing CAPA Program",searchrectangle:ScreenPart("Center"))+[150,50]]
		
		
		
		set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
		if global ExistingCapaProgramRequired is "Yes"
			click ImageLocation(text:"CAPA Program")+[120,0]
			Typetext global ExistingCapaProgram
			wait 1
			Typetext return
			set the searchrectangle to []
			Put "Existing CAPA Program added" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			//TypeText "Create"
			click ImageLocation(text:"CAPA Program")+[120,0]
			wait 1
			Typetext controlKey,a
			Typetext backspace
			// create New capa program
			Typetext "Create capa"
			wait 3
			Typetext return
			Set the searchrectangle to []
			WaitFor 120, text:"Create Capa program",searchrectangle:ScreenPart("Center")
			
			
			
			Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
			Typetext global CapaProgramDateDue
			Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
			wait 1
			Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
			typetext "TestSD"
			Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
			Typetext "Health"
			Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
			Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
			click ImageLocation(text:"Deviation ID",SearchRectangle:ScreenPart("Center"))+[100,0]
			Typetext global GivenRecordId
			Typetext downArrow
			Typetext return
			
			//   global CAPEX Required
			click text:"No",searchrectangle:[topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[150,50]]
			Click text:"Save",searchrectangle:ScreenPart("BottomRightQuadrant")
			
			Put "New CAPA Program Created" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		Click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 5
		Put "CAPA Program added in Capa Requirement section" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end AddingCapaProgran_In_CapaRequirementSection

//navigate to Affected Location information Section
to handle NavigateToAffectedLocationInformation
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Affected Location Information"
end NavigateToAffectedLocationInformation

//navigate to Impacted Product information Section
to handle NavigateToImpactedProductInformation
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Impacted Product Information"
end NavigateToImpactedProductInformation

//create Affected Location Information
to handle CreateAffectedLocationInformation
	try
		wait 3
		Click text:"Add", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]


		WaitFor 120, text:"Search"
		set the searchrectangle to [bottomLeft of Imagerectangle(text:"Search"), ImageLocation(text:"Search")+[755,560]]

		WaitFor 120, text:"Use Search bar",searchrectangle:ScreenPart("TopHalf")
		wait 2
		//put "Health" into QoneFirstName
		Typetext "Health"
		
		typetext return
		wait 3
		Click ImageLocation(text:"Site Name",searchrectangle:ScreenPart("Center"))+[0,32]
		click text:"Ok",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		
		set the SearchRectangle to []
		//
		
		
		
		if ImageFound(text:"Health", waitFor:50)
			Put "AffectedLocationAddedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put Role&"AffectedLocationNotAdded" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		ScrollWheelUp 30
		wait 3
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end CreateAffectedLocationInformation

//CreateImpactedproductInformation
to handle CreateImpactedproductInformation
	try
		wait 3
		Click text:"Add", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]


		WaitFor 120, text:"Search"
		set the searchrectangle to [bottomLeft of Imagerectangle(text:"Search"), ImageLocation(text:"Search")+[755,560]]

		WaitFor 120, text:"Use Search bar",searchrectangle:ScreenPart("TopHalf")
		wait 2
		//put "Health" into QoneFirstName
		Typetext "10057932"
		
		typetext return
		wait 3
		Click ImageLocation(text:"Code",searchrectangle:ScreenPart("Center"))+[0,32]
		click text:"Ok",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		
		set the SearchRectangle to []
		//
		
		
		
		if ImageFound(text:"10057932", waitFor:50)
			Put "ImpactedproductInformationAddedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put Role&"ImpactedproductInformationNotAdded" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		ScrollWheelUp 30
		wait 3
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end CreateImpactedproductInformation

(*//VerifyLifeCycleState_PROPOSEDACTION
to handle VerifyLifeCycleState_PROPOSEDACTION
	W_App_CommonHandlers.VerifyLifeCycleState "PROPOSEDACTION"
	
end VerifyLifeCycleState_PROPOSEDACTION*)



//openCapaItem_ProposedAction
to handle SearchRecords_With_State_ProposedAction



	SearchRecords_With_State "Proposed Action"
	
end SearchRecords_With_State_ProposedAction



//CancelCAPAItem



to handle CancelCAPAItem
	try
		
		Click imageName:"CancelImpactAssessment", waitFor:120
		wait 2
		//Click text:"Cancel Capa", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Put "CancellingCapaItemSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try    
	
end CancelCAPAItem

/CAPA Requirements
to handle navigateToCapaPlan
	NavigateToSectionFromLeftPane "CAPA Plan"
end navigateToCapaPlan
//openCapaItem_Authorised
to handle SearchRecords_With_State_Authorised



	SearchRecords_With_State "Authorised"
	
end SearchRecords_With_State_Authorised



//AssignUsers_CapaItem



to handle AssignUsers_CapaItem
	try
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete",searchrectangle:ScreenPart("Center")
		
		click text:"Complete",searchrectangle:ScreenPart("Center")
		
		Put"Capa Item Assigned to User Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end AssignUsers_CapaItem



// CompleteTheAction_CapaItem



to handle CompleteTheAction_CapaItem
	try
		
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		
		Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
		if global CompleteTheActionVerdict Contains "Review"
			
			Click text:"Complete"
			wait 1
			Typetext tabKey
			Typetext"Testing"
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put "CompleteTheAction_TaskWithVerdictCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteTheActionVerdict Contains "Incomplete"
			
			Click text:"Incomplete"
			wait 1
			Typetext tabkey
			Typetext "Test"
			Typetext tabkey
			Typetext "No Longer required"
			wait 2
			Typetext downArrow
			Typetext return
			wait 1
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"CompleteTheAction_TaskWithVerdictInCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteTheActionVerdict Contains "Cancel"
			
			Click imageName:"CancelMA"
			wait 1
			Typetext tabkey
			Typetext "Test"
			Typetext tabkey
			Typetext "Raised in error"
			wait 2
			Typetext downArrow
			Typetext return
			//click text :"No"
			click imageName:"No"
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"CompleteTheAction_TaskWithVerdictCancel" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if 
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CompleteTheAction_CapaItem



//ReviewTheCompletedAction_CapaItem




to handle ReviewTheCompletedAction_CapaItem
	try
		Put "Yes" into global DemonstratesEffectiveness
		(*Put "Review Complete" into global ReviewTheCompletedActionVerdict*)
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Review The Completed Action",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Review The Completed Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		Put "Yes" into global DemonstratesEffectiveness
		click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]

		Typetext tabkey
		Typetext "TestNextStep"
		//global ReviewTheCompletedActionVerdict
		(*click text:"Review Complete",SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]*)
		(*Put "Review Complete" into global ReviewTheCompletedActionVerdict*)
		click {text:global ReviewTheCompletedActionVerdict,SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]}
		wait 1
		Typetext tabkey
		Typetext "Test"
		
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		if global ReviewTheCompletedActionVerdict contains "Review Complete"
			Put "ReviewTheCompletedAction_TaskWithVerdictCompleted" into global Vstep
		else if global ReviewTheCompletedActionVerdict contains "Further Action Required"
			Put "ReviewTheCompletedAction_TaskWithVerdictFurthereActionRequired" into global Vstep
		end if 
		
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		wait 10
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end ReviewTheCompletedAction_CapaItem




//CreateCapaPlan
to handle CreateCapaPlan

	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		(*	WaitFor 120, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	

click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]

//CreateCapaProgram Handlers
CreateCapaProgram*)
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		(*Typetext "TestCapaDc"*)
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		
		Click ImageLocation(text:"Description",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Testing"
		
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		if ImageFound(text:"PROPOSED ACTION", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant"))
			Put "CAPA Plan Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Plan Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CreateCapaPlan

//sharing setting CapaProgarmCoordinator
to handle SharingSettings_CapaProgarmCoordinator
	SharingSettings "Capa Program Coordinator",global CPCusername
end SharingSettings_CapaProgarmCoordinator
//PENDINGREVIEW
to handle VerifyLifeCycleState_PENDINGREVIEW
	VerifyLifeCycleState "PENDING REVIEW"
end VerifyLifeCycleState_PENDINGREVIEW



//LoginToApplication_CapaProgramCoordinator
to handle LoginToApplication_CapaProgramCoordinator
	LoginToApplication global CPCusername,global CPCpassword
	
end LoginToApplication_CapaProgramCoordinator



// QualityClosureApproval_CapaItem
to handle QualityClosureApproval_CapaItem
	try
		
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global QualityCancellationApprovalVerdict
		
		if global QualityCancellationApprovalVerdict contains "Approved"
			Click text:"Quality Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			wait 2
			Typetext tabkey
			Typetext"Raised in"
			Typetext downArrow, return
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityClosureApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global QualityCancellationApprovalVerdict contains "Rejected"
			Click text:"Quality Closure Rejected", waitFor:50,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityClosureApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end QualityClosureApproval_CapaItem
//FunctionClosureApproval_CapaItem
to handle FunctionClosureApproval_CapaItem
	try
		
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Function Closure Approved" into global FunctionCancellationApproval
		
		if global FunctionCancellationApprovalVerdict contains "Approved"
			Click text:"Function Closure Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionClosureApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global FunctionCancellationApprovalVerdict contains "Rejected"
			Click text:"Function Closure Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionClosureApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end FunctionClosureApproval_CapaItem

to handle OpenRecord_ProposedAction
	//NavigateToSectionFromLeftPane "Mitigation Actions"
	W_App_CommonHandlers.SearchRecords_With_State "Proposed Action"
end OpenRecord_ProposedAction

//FunctionApprovalOfCC_Closure
to handle FunctionApprovalOfCC_Closure_ChangeNotImplemented
	try
		(*Put "Approved" into global FunctionApprovalofCCClosureVerdict*)
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global FunctionApprovalofCCClosureVerdict
		
		if global FunctionApprovalofCCClosureVerdict contains "Approved"
			Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global PFAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global PFApassword
			wait 2
			
			Typetext tabkey
			Typetext"Change to Scope"
			wait 2
			Typetext downArrow, return
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApprovalofCCClosureTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global FunctionApprovalofCCClosureVerdict contains "Rejected"
			Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApprovalofCCClosureTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end FunctionApprovalOfCC_Closure_ChangeNotImplemented



//QualityApprovalOfCC_Closure
to handle QualityApprovalOfCC_Closure_ChangeNotImplemented
	try
		Put "Approved" into global QualityApprovalofCCClosureVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		//waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global QualityApprovalofCCClosureVerdict
		
		if global QualityApprovalofCCClosureVerdict contains "Approved"
			Click text:"Quality Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			
			Typetext tabkey
			wait 1
			Typetext"Change to Scope"
			wait 2
			Typetext downArrow
			typetext return
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global QualityApprovalofCCClosureVerdict contains "Rejected"
			Click text:"Quality Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end QualityApprovalOfCC_Closure_ChangeNotImplemented


//FunctionApprovalOfCC_Closure
to handle FunctionApprovalOfCC_Closure_ChangeNotProgressed
	try
		(*Put "Approved" into global FunctionApprovalofCCClosureVerdict*)
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global FunctionApprovalofCCClosureVerdict
		
		if global FunctionApprovalofCCClosureVerdict contains "Approved"
			Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			Click ImageLocation(text:"User Name",waitFor:120,SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global FAusername
			
			wait 2
			//Click ImageLocation(text:"Password",waitFor:120,SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global FApassword
			wait 2
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApprovalofCCClosureTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global FunctionApprovalofCCClosureVerdict contains "Rejected"
			Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "FunctionApprovalofCCClosureTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end FunctionApprovalOfCC_Closure_ChangeNotProgressed



//QualityApprovalOfCC_Closure
to handle QualityApprovalOfCC_Closure_ChangeNotProgressed
	try
		Put "Approved" into global QualityApprovalofCCClosureVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		//waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global QualityApprovalofCCClosureVerdict
		
		if global QualityApprovalofCCClosureVerdict contains "Approved"
			Click text:"Quality Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Typetext tabkey
			Typetext"TestingApproved"
			Typetext tabkey
			wait 1
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			
			Typetext tabkey
			
			Typetext"Change to Scope"
			wait 2
			Typetext downArrow
			typetext return
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global QualityApprovalofCCClosureVerdict contains "Rejected"
			Click text:"Quality Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end QualityApprovalOfCC_Closure_ChangeNotProgressed

to handle QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL
	try
		Put "Approved" into global QualityApprovalofCCClosureVerdict
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		//waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		//Put "Approved" into global QualityApprovalofCCClosureVerdict
		
		if global QualityApprovalofCCClosureVerdict contains "Approved"
			Click text:"Quality Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			
			Typetext tabkey
			wait 1
			
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			
			Typetext tabkey
			
			Typetext"Change to Scope"
			wait 2
			Typetext downArrow
			typetext return
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global QualityApprovalofCCClosureVerdict contains "Rejected"
			Click text:"Quality Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "QualityApprovalofCCClosureTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL


//ImplementtheChange_Complete
to handle ImplementtheChange
	try
	(*Put "Send to change" into global ImplementtheChangeVerdict
		Put "Yes" into global FunctionPostApproverRequired*)
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
		if global ImplementtheChangeVerdict contains "Close CC"
			Click text:"Change Not Implemented", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"Testing"
			Typetext tabkey
			wait 1
			Typetext"Change no longer required"
			wait 1
			Typetext downArrow
			typetext return
			(*put "No" into global PFArequired*)
			Set the searchrectangle to [bottomLeft of ImageRectangle(text:"Function Post",SearchRectangle:ScreenPart("BottomHalf")),RemoteScreenSize()]
			If global PFArequired is "Yes"
				Click text:"Yes", waitFor:120
			else
				Click text:"No", waitFor:120
			End If
			Set the searchrectangle to []
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "ImplementTheChangeTaskCompletedWithClosedCC" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global ImplementtheChangeVerdict contains "Return to IA"
			Click text:"Return to IA", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			wait 1
			typetext"Test"
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "ImplementTheChangTaskCompletedWithReturnToIA" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global ImplementtheChangeVerdict contains "Send to change"
			Click text:"Send to change coordinator", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			wait 1
			typetext"Test"
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			wait 20
			Put "ImplementTheChangTaskShouldCompleteWithSendToChangecoordinatorReview" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else
			Put "AllverdictOptionsAreNotAvailableInImplementTheChangeTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		if imagefound(text:"Continue") then
			click FoundImageLocation()
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end ImplementtheChange


//EditImpactAssessmentOutput
to handle EditImpactAssessmentOutput
	try
		
		(*		Put "Built-In" into global FormalRiskAssessmentRequired
		Put "Low" into global OverAllRisk*)
		
		click Image:"edit_img",waitfor:60,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf")
		click ImageLocation(text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		Typetext "Test"
		
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		(*Typetext global FormalRiskAssessmentRequired
		Typetext downArrow, return*)
		wait 2
		// deleting previous value
		set the SearchRectangle to  [ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-5],ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[700,150]]

		repeat 3 times
			if ImageFound(image:"RiskAssessmentClosebutton")
				click FoundImageLocation()
				
			end if
			wait 2
		end repeat
		set the SearchRectangle to []
		(*put "No Risk Assessment" into global FormalRiskAssessmentRequired*)
		
		click text:global FormalRiskAssessmentRequired,SearchRectangle:ScreenPart("LeftHalf")
		wait 2
		(*click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-20]*)
		//FormalRiskAssessmentRequired
		if global FormalRiskAssessmentRequired is "No Risk Assessment Required"
			//click ImageLocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("Center"))+[200,2]
			TypeText tabKey
			Typetext "Test"
			wait 2
		end if
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("Center"))+[200,1]
		wait 1
		//OverAllRisk
		click text:global OverAllRisk,SearchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("Center"))+[0,-21]
		click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		
		if ImageFound(Image:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "ImpactAssessmentOutPutEditedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "ImpactAssessmentOutPutNotEditedSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	ScrollWheelUp 50
end EditImpactAssessmentOutput






to handle Add_ImpactedProduct
	try
		wait 2
		NavigateToSectionFromLeftPane"Impacted Product Information"
		//Click imageName:"Add", waitFor:120
		Click text:"Add", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]
		WaitFor 120, text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf")
		click imagelocation(text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf"))+[0,25]
		Typetext 100599
		Typetext return
		wait 4
		click imagelocation(text:"Code",SearchRectangle:ScreenPart("Center"))+[0,31]
		wait 2
		click imagelocation(text:"Cancel",waitfor:120,searchrectangle:ScreenPart("BottomHalf"))+[40,0] //Clicking OK
		(*		set the SearchRectangle to empty
Put the number of occurences of imagelocation(text:"OK",waitfor:120,searchrectangle:ScreenPart("BottomHalf"))

click text:"OK",waitfor:120,searchrectangle:ScreenPart("BottomHalf")*)
		(*contrastColor:"AutoDetect", contrast:"On", click imagelocation(text:"Cancel",waitfor:50,searchrectangle:ScreenPart("BottomHalf"))*)
		wait 2
		Put "AssociatedProductAddedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		ScrollWheelUp 30
		wait 3
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Add_ImpactedProduct
// Capa program Common Handlers Start


//SharingSettings_CapaActionOwner
to handle SharingSettings_CapaActionOwner
	W_App_CommonHandlers.SharingSettings "Action Owner",global CapaActionOwnerUsername
	
end SharingSettings_CapaActionOwner


//LoginToApplication_CapaActionOwner
to handle LoginToApplication_CapaActionOwner
	LoginToApplication global CapaActionOwnerUsername,global CapaActionOwnerPassword
	
end  LoginToApplication_CapaActionOwner
//VerifyLifeCycleState_PROPOSEDACTION --need to take PROPOSEDACTION image in azure

//CreateCapaPlan_WithCapaProgram

to handle CreateCapaPlan_WithCapaProgram
	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	
		
		click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]

		//CreateCapaProgram Handlers
		CreateCapaProgram
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 2
		Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		Typetext "TestCapaDc"
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		if ImageFound(text:"PROPOSED ACTION", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant"))
			Put "CAPA Plan Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Plan Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CreateCapaPlan_WithCapaProgram

// CreateCapaProgram

to handle CreateCapaProgram
	try
		// Put "07 Mar 2021" into global CapaProgramDateDue
		wait 2
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("Center")
		wait 2
		WaitFor 120, text:"Create CAPA Program",searchrectangle:ScreenPart("Center")
		click FoundImageLocation()
		wait 2
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaProgramDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
		typetext "TestSD"
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Health"
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
		Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
		click imagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("BottomHalf"))
		wait 5
		if ImageFound(text:"CAPA Program Id", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Program Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Program Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	
end CreateCapaProgram

to handle VerifyLifeCycleState_PendingCapaPostApproval
	VerifyLifeCycleState "Pending CAPA Post-Approval" 
end VerifyLifeCycleState_PendingCapaPostApproval

//CAPA Requirements
to handle navigateToCAPARequirementsSection
	NavigateToSectionFromLeftPane "CAPA Requirements"
end navigateToCAPARequirementsSection
// AddingCapaProgran_In_CapaRequirementSection
// data: global Capa_Required,global ExistingCapaProgramRequired,global ExistingCapaProgram,global CapaProgramDateDue,global GivenRecordId

(*to handle AddingCapaProgran_In_CapaRequirementSection
try
click Image:"edit_img",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
// put "Yes" into global Capa_Required
click text:global Capa_Required,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[150,50]]
if global Capa_Required is "No"
click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
Typetext "Test"
click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
Put "CAPA Program Not Required Selected" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog
end if
// put "No" into global ExistingCapaProgramRequired
click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Existing CAPA Program",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"Existing CAPA Program",searchrectangle:ScreenPart("Center"))+[150,50]]

set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
if global ExistingCapaProgramRequired is "Yes"
click ImageLocation(text:"CAPA Program")+[120,0]
Typetext global ExistingCapaProgram
wait 1
Typetext return
set the searchrectangle to []
Put "Existing CAPA Program added" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog
else
click ImageLocation(text:"CAPA Program")+[120,0]
wait 1
Typetext controlKey,a
Typetext backspace
// create New capa program
Typetext "Create capa"
wait 1
Typetext return
Set the searchrectangle to []
WaitFor 30, text:"Create Capa program",searchrectangle:ScreenPart("Center")



Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
Typetext global CapaProgramDateDue
Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
wait 2
Click ImageLocation(text:"Short description",SearchRectangle:ScreenPart("Center"))+[100,0]
typetext "TestSD"
Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
Typetext "Health"
Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
click ImageLocation(text:"Deviation ID",SearchRectangle:ScreenPart("Center"))+[100,0]
Typetext global GivenRecordId
Typetext downArrow
Typetext return

//   global CAPEX Required
click text:"No",searchrectangle:[topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[150,50]]
Click text:"Save",searchrectangle:ScreenPart("BottomRightQuadrant")

Put "New CAPA Program Created" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog
end if

Click text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
wait 5
Put "CAPA Program added in Capa Requirement section" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog



Catch theException
LogError theException
W_App_CommonHandlers.CaptureAtLog
//
end try
end AddingCapaProgran_In_CapaRequirementSection*)
to handle UserRoleSetup_DC

	UserRoleSetup global DCFirstName,"Deviation Coordinator"
end UserRoleSetup_DC

// AuthorisedToBeginCapaExecution_Complete

to handle AuthorisedToBeginCapaExecution_Complete
	try
		
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Authorised to begin CAPA Execution",searchrectangle:ScreenPart("Center")
		Put "AuthorisedToBeginCapaExecutionTaskCompleted" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
		wait 4
		WaitFor 120, "INEXECUTION"
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end AuthorisedToBeginCapaExecution_Complete

// OpenCapaProgramRecord
to handle OpenCapaProgramRecord
	//navigateToCAPARequirementsSection
	try
		set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
		put ReadText(topright of imagerectangle(text:"Capa program"),topright of imagerectangle(text:"Capa program")+[130,50]) into VexistingCapaRecordId
		//Log VexistingCapaRecordId
		If  ReadText(topright of imagerectangle(text:"Capa program"),topright of imagerectangle(text:"Capa program")+[130,50]) is not empty
			Put "Capa is available in the CapaRequirement section:"&VexistingCapaRecordId into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Capa is not available in the CapaRequirement section" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
			Exit handler
			
		End If
		click imagelocation(text:"Capa program")+[100,0]

		wait 5
		set the searchrectangle to []
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end OpenCapaProgramRecord
//INEXECUTION
to handle VerifyLifeCycleState_INEXECUTION
	VerifyLifeCycleState "In Execution"
end VerifyLifeCycleState_INEXECUTION

to handle VerifyLifeCycleState_AUTHORISED
	VerifyLifeCycleState "AUTHORISED"
end VerifyLifeCycleState_AUTHORISED
//sharing setting CapaProgarmCoordinator
to handle SharingSettings_CapaProgarmCoordinator
	SharingSettings "Capa Progarm Coordinator",global CPCusername
end SharingSettings_CapaProgarmCoordinator

//Review_PostApproval_Of_CompletedCAPA

to handle Review_PostApproval_Of_CompletedCAPA
	try
		
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")	
		Put Imagelocation(text:"Post-Approval of Completed CAPA",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		if global Review_PostApproval_Of_CompletedCAPA_Verdict Contains "Quality Post"
			Click text:"Quality Post-Approved", waitFor:120,searchrectangle:ScreenPart("Center")
			Typetext tabKey
			Typetext"Testing"
			click imagelocation(text:"User Name",searchrectangle:ScreenPart("Center"))+[0,25]
			Typetext  global QAusername
			
			click imagelocation(text:"Password",searchrectangle:ScreenPart("Center"))+[0,25]
			Typetext  global QApassword
			
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"Review_PostApproval_Of_CompletedCAPA_TaskCompletedWithQualityPost-Approved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global Review_PostApproval_Of_CompletedCAPA_Verdict Contains "Re-Opened"
			Click text:"Re-Opened", searchrectangle:ScreenPart("Center")
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"Review_PostApproval_Of_CompletedCAPA_TaskCompletedWithRe-Opened" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if 
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end Review_PostApproval_Of_CompletedCAPA




//openCapaItem_Authorised
to handle SearchRecords_With_State_Authorised

	SearchRecords_With_State "Authorised"
	
end SearchRecords_With_State_Authorised

//AssignUsers_CapaItem

to handle AssignUsers_CapaItem
	try
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete",searchrectangle:ScreenPart("Center")
		
		click text:"Complete",searchrectangle:ScreenPart("Center")
		
		Put"Capa Item Assigned to User Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end AssignUsers_CapaItem

// CompleteTheAction_CapaItem

to handle CompleteTheAction_CapaItem
	try
		
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		
		Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
		if global CompleteTheActionVerdict Contains "Complete"
			
			Click text:"Complete"
			wait 1
			Typetext tabKey
			Typetext"Testing"
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put "CompleteTheAction_TaskWithVerdictCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteTheActionVerdict Contains "Incomplete"
			
			Click text:"Incomplete"
			wait 1
			Typetext tabkey
			Typetext "Test"
			Typetext tabkey
			Typetext "No Longer required"
			wait 2
			Typetext downArrow
			Typetext return
			wait 1
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"CompleteTheAction_TaskWithVerdictInCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteTheActionVerdict Contains "Cancel"
			
			Click text:"Cancel Proposed Action"
			wait 1
			Typetext tabkey
			Typetext "Test"
			Typetext tabkey
			Typetext "Raised in error"
			wait 2
			Typetext downArrow
			Typetext return
			//click text :"No"
			click text:global CompleteTheAction_Function_Approver_Required
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"CompleteTheAction_TaskWithVerdictCancel" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if 
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CompleteTheAction_CapaItem

//ReviewTheCompletedAction_CapaItem


(*to handle ReviewTheCompletedAction_CapaItem
	try
		
		
		click text:"Complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Review The Completed Action",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Review The Completed Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		
		click text:global ReviewTheCompletedAction_DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]

		Typetext tabkey
		Typetext "TestNextStep"
		// global ReviewTheCompletedActionVerdict
		// click text:"Review Complete",SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]
		click text:global ReviewTheCompletedActionVerdict,SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]
		Typetext tabkey
		Typetext "Test"
		
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		if global ReviewTheCompletedActionVerdict contains "Review Complete"
			Put "ReviewTheCompletedAction_TaskWithVerdictCompleted" into global Vstep
		else if global ReviewTheCompletedActionVerdict contains "Further Action Required"
			Put "ReviewTheCompletedAction_TaskWithVerdictFurthereActionRequired" into global Vstep
		end if 
		
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end ReviewTheCompletedAction_CapaItem*)
//LoginToApplication_CapaProgramCoordinator
to handle LoginToApplication_CapaProgramCoordinator
	LoginToApplication global CPCusername,global CPCpassword
	
end  LoginToApplication_CapaProgramCoordinator

//openCapaItem_ProposedAction
to handle SearchRecords_With_State_ProposedAction

	SearchRecords_With_State "Proposed Action"
	
end SearchRecords_With_State_ProposedAction

//SearchChildRecords_WithRecordID
to handle SearchChildRecords_WithRecordID

	try
		
		// put "CI210316-002" into global ChildRecordId
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext the suitevariables.CRecordId
		Typetext return
		wait 4
		
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
			Put the suitevariables.CRecordId&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			click ImageLocation(text:"Record ID")+[0,38]
			set the  SearchRectangle to []
			wait 2
			
			
		else
			Put the suitevariables.CRecordId&"RecordIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end SearchChildRecords_WithRecordID

// navigateToActionItems


to handle navigateToActionItems
	NavigateToSectionFromLeftPane "Action Items"
end navigateToActionItems

//SharingSettings_CapaProgarmCoordinatorForProgram
to handle SharingSettings_CapaProgarmCoordinatorForProgram
	SharingSettings "Capa Program Coordinator",global CPC_ForProgram_Username
end SharingSettings_CapaProgarmCoordinatorForProgram

//LoginToApplication_CapaProgramCoordinator_ForCapaProgram
to handle LoginToApplication_CapaProgramCoordinator_ForCapaProgram
	LoginToApplication global CPC_ForProgram_Username,global CPC_ForProgram_Password
	
end  LoginToApplication_CapaProgramCoordinator_ForCapaProgram
//LoginToApplication_CapaProgramCoordinator_ForCapaItem
to handle LoginToApplication_CapaProgramCoordinator_ForCapaItem
	LoginToApplication global CPC_ForCapaItem_Username,global CPC_ForCapaItem_Password
	
end  LoginToApplication_CapaProgramCoordinator_ForCapaItem

//SharingSettings_CapaProgarmCoordinatorForCapaItem

to handle SharingSettings_CapaProgarmCoordinatorForCapaItem
	SharingSettings "Capa Program Coordinator",global CPC_ForCapaItem_Username
end SharingSettings_CapaProgarmCoordinatorForCapaItem

//
to handle UserRoleSetup_AO

	UserRoleSetup global ActionOwnerFirstName,"Action Owner"
end UserRoleSetup_AO

//CPC_ForProgramFirstName
to handle UserRoleSetup_CPC_ForProgramFirstName

	UserRoleSetup global CPC_ForProgramFirstName,"CAPA Program Coordinator"
end UserRoleSetup_CPC_ForProgramFirstName

to handle UserRoleSetup_CPC_ForCapaItemFirstName

	UserRoleSetup global CPC_ForCapaItemFirstName,"CAPA Program Coordinator"
end UserRoleSetup_CPC_ForCapaItemFirstName
// Capa program Common HandlersEnd



//complaintAssessment common handlers start

//CreateComplaintAssessment

to handle CreateComplaintAssessment
	try
		
		(*put"10 Mar 2021" into global CMDateDue
put"Health" into global CCGBU
put"Consumer" into global ComplaintSource
put"P2" into global ComplaintPriority
put"10 Mar 2021" into global OccurrenceDate*)
		
		click text:"Create",waitfor:120
		WaitFor 120, text:"Short Description"
		click ImageLocation(text:"Short Description")+[100,0]

		Typetext"Test"&random(1,999)
		
		Typetext tabkey
		
		Typetext global CMDateDue
		Typetext tabkey
		Typetext global CCGBU
		Click ImageLocation(text:"Global Business Unit")+[100,26]
		Typetext tabkey
		Typetext global ComplaintSource
		
		Click ImageLocation(text:"Complaint Source")+[100,26]
		click imagelocation(text:"Affected Location Type",searchrectangle:ScreenPart("Center"))+[200,0]
		Typetext"country"
		wait 1
		Typetext downArrow,return
		
		
		(*Typetext tabkey
Typetext global ComplaintType

Click ImageLocation(text:"Complaint Type")+[100,26]*)
		
		Click ImageLocation(text:"Complaint Priority")+[100,0]



		click text:global ComplaintPriority,waitfor:120,searchrectangle:[(ImageLocation(text:"Complaint Priority")+[50,5]),(ImageLocation(text:"Complaint Priority")+[250,500])]

		Click ImageLocation(text:"Occurrence date")+[100,0]
		Typetext global OccurrenceDate
		TypeText tabkey
		wait 1
		
		//
		Click ImageLocation(text:"Complaint Summary",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext"test"
		Click ImageLocation(text:"Brand Specific",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Sku"
		wait 2
		Typetext downArrow,return
		
		
		
		
		//Typetext "Test"
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		
		
		
		wait 5
		
		
		if ImageFound(text:"Complete", waitFor:120)
			
			
			Put "OriginatorCreatedComplaintAssessmentSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			//read  record ID
			
			put ReadText([ImageLocation(text:"Record ID")+[32,-9], ImageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9]-[0-9]*")  into global VRecordId
			
			
			If global GivenRecordId is ""
				set the suitevariables.RecordId to global VRecordId
			else
				set the suitevariables.RecordId to global GivenRecordId
			end if
			
		else
			Put "OriginatorIsNotCreatedComplaintAssessmentSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
	
end CreateComplaintAssessment

//
//AssignComplaintCoordinator

to handle AssignComplaintCoordinator
	try
		Click text:"Complete", waitFor:120
		
		WaitFor 120, text: "Cancel"
		Click text:"Complete", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.35],RemoteScreenSize()]
		//ASSESSMENTINPROGRESS
		if ImageFound(text:"ASSESSMENT IN PROGRESS", waitFor:120)
			Put "AssignComplaintCoordinatorTaskCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "AssignComplaintCoordinatorTaskNotCompleted" into global Vstep
			LogError global Vstep
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end AssignComplaintCoordinator

// EditComplaintAssessmentSection updated for sprint 6

to handle EditComplaintAssessmentSection
	try
		WaitFor 120, text:"Complaint Assessment"
		
		click text:"Complaint Assessment",searchrectangle:[the RemoteScreenSize*[0,0.27],the RemoteScreenSize*[0.25,1]]
		click Image:"edit_img",waitfor:120
		click ImageLocation(text:"Batch documentation review")+[200,0]
		Typetext "test12"
		typetext tabkey
		Typetext"testcc"
		typetext tabkey
		Typetext"testcc"
		typetext tabkey
		Typetext"testcc"
		typetext tabkey
		Typetext"testcc"
		
		Click ImageLocation(text:"Deviation needed")+[100,0]
		wait 1
		typetext controlKey,a
		Typetext backspace
		wait 1
		
		TypeText global CM_DeviationNeeded
		wait 2
		
		if global CM_DeviationNeeded is " New Deviation required"
			click ImageLocation(text:"Deviation needed")+[100,24]
			wait 1
			Typetext tabkey
			wait 2
			Typetext global ExistingDeviation
			
			wait 8
			
			set the searchrectangle to [bottomLeft of Imagerectangle(text:"Deviation needed"),RemoteScreenSize()]	
			click ImageLocation(text:"Deviation")+[100,47]
			Set the SearchRectangle to []
			
		else if  global CM_DeviationNeeded is "Related Deviation Exists"
			click ImageLocation(text:"Deviation needed")+[100,24]
			wait 1
			Typetext tabkey
			wait 1
			Typetext global ExistingDeviation
			wait 8
			
			set the searchrectangle to [bottomLeft of Imagerectangle(text:"Deviation needed"),RemoteScreenSize()]	
			click ImageLocation(text:"Deviation")+[100,47]
			Set the SearchRectangle to []
			
		else if  global CM_DeviationNeeded is "Not Required"
			click ImageLocation(text:"Deviation needed")+[100,24]
			wait 1
			
		end if
		wait 2
		Click  ImageLocation(text:"Summary")+[250,0]

		Typetext"TestCMSummary"
		
		
		
		If global CM_PeerReviewRequired is "Yes"
			
			click ImageLocation(text:"Peer Review Required")+[80,0]
			Put "ComplaintCoordinatorSelectPeerReviewRequiredAsYesInEditComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog 
			
		else
			click ImageLocation(text:"Peer Review Required")+[137,0]
			Put "ComplaintCoordinatorSelectPeerReviewRequiredAsNoInEditComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog 
		End If
		
		click text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		wait 10
		Put "ComplaintCoordinatorEditedComplaintAssessmentAndDetailsSaved" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog 
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end EditComplaintAssessmentSection

//ConfirmOutcome of complaint assessment

to handle CM_ConfirmOutComeOfComplaintAssessment

	try
		
		WaitFor 120, text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		Click text:"Complete", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict"
		//drag the popup little up
		Put Imagelocation(text:"Confirm outcome of complaint assessment",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-100] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		
		
		wait 2
		if global ConfirmOutComeOfCMVerdict is "Cancel"
			Click text:"Cancel", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), ImageLocation(text:"Verdict")+[500,100]]
			Typetext tabKey
			TypeText "TestCancelCM"
			Typetext tabkey
			TypeText global ReasonForCancel
			
			
			click ImageLocation(text:"Reason for Cancellation")+[0,51]
			
			Click text:"Complete", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			Put"ComplaintCoordinatorCancelledComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		else if global ConfirmOutComeOfCMVerdict is "Justified"
			//Click text:"Justified", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict")+[-2,-2], RemoteScreenSize()]
			click ImageLocation(text:"Verdict")+[0,22]
			wait 2
			
			set the searchrectangle to [bottomLeft of Imagerectangle(text:"Peer Review required",searchrectangle:ScreenPart("BottomHalf")),ImageLocation(text:"Peer review required")+[400,60]]
			click text:global CM_PeerReviewRequired
			set the searchrectangle to []
			
			click ImageLocation(text:"Deviation needed",searchrectangle:ScreenPart("BottomHalf"))+[0,25]
			wait 1
			Typetext controlKey,a
			Typetext backspace
			wait 1
			
			Typetext global CM_DeviationNeeded
			wait 3
			click text:global CM_DeviationNeeded,SearchRectangle:[ ImageLocation(text:"Deviation needed",searchrectangle:ScreenPart("BottomHalf"))+[-70,31], ImageLocation(text:"Deviation needed",searchrectangle:ScreenPart("BottomHalf"))+[500,110]]
			
			(*Typetext downarrow
typetext return*)
			wait 1
			
			Click text:"Complete", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			Put"ComplaintCoordinatorJustifiedComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global ConfirmOutComeOfCMVerdict is "Unjustified"
			
			Click text:"Unjustified", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			
			Click text:"Complete", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			Put"ComplaintCoordinatorUnjustifiedComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
	
	
	
end CM_ConfirmOutComeOfComplaintAssessment

to handle LoginToApplication_PeerReviewer
	CC_CommonHandlers.LoginToApplication global PeerReviewerUsername,global PeerReviewerPassword
	
end  LoginToApplication_PeerReviewer

//PENDINGPEERREVIEW
to handle VerifyLifeCycleState_PENDINGPEERREVIEW
	W_App_CommonHandlers.VerifyLifeCycleState "PENDING PEER REVIEW"
end VerifyLifeCycleState_PENDINGPEERREVIEW

to handle VerifyLifeCycleState_CLOSEDJUSTIFIED
	W_App_CommonHandlers.VerifyLifeCycleState "CLOSED - JUSTIFIED"
end VerifyLifeCycleState_CLOSEDJUSTIFIED

//CLOSEDCOMPLAINTSUFFICIENT
to handle VerifyLifeCycleState_CLOSEDCOMPLAINTSUFFICIENT
	W_App_CommonHandlers.VerifyLifeCycleState "CLOSED - COMPLAINT SUFFICIENT"
end VerifyLifeCycleState_CLOSEDCOMPLAINTSUFFICIENT
to handle VerifyLifeCycleState_REOPENEDCOMPLAINT
	W_App_CommonHandlers.VerifyLifeCycleState "RE-OPENED COMPLAINT"
end VerifyLifeCycleState_REOPENEDCOMPLAINT
to handle VerifyLifeCycleState_CLOSEDUNJUSTIFIED
	W_App_CommonHandlers.VerifyLifeCycleState "CLOSED - UNJUSTIFIED"
end VerifyLifeCycleState_CLOSEDUNJUSTIFIED


// CM_ConfirmOutcomeOfReview

to handle CM_ConfirmOutcomeOfReview
	try
		
		WaitFor 120, text:"Complete"
		Click text:"Complete", waitFor:120
		WaitFor 120, text:"Verdict"	
		if global ConfirmOutComeOfReviewVerdict is "Accept Assessment"
			Click text:"Accept Assessment", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), ImageLocation(text:"Verdict")+[500,100]]
			
			//
			set the searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",searchrectangle:ScreenPart("Center")), RemoteScreenSize()]
			click imagelocation(text:"User Name")+[0,25]
			Typetext  global ComplaintCoordinatorReviewerUsername
			
			click imagelocation(text:"Password")+[0,25]
			Typetext  global ComplaintCoordinatorReviewerPassword
			set the searchrectangle to []
			Click text:"Complete", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			wait 2
			Put"ComplaintReviewerAcceptComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global ConfirmOutComeOfReviewVerdict is "Reject Assessment"
			Click text:"Reject Assessment", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), ImageLocation(text:"Verdict")+[500,100]]
			Click text:"Complete", waitFor:120,SearchRectangle:[bottomLeft of Imagerectangle(text:"Verdict"), RemoteScreenSize()]
			wait 2
			Put"ComplaintReviewerRejectComplaintAssessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
	
end CM_ConfirmOutcomeOfReview



//
//ReopenActionButtonAvailable_InCogWheelDD
to handle ReopenActionButtonAvailable_InCogWheelDD
	try
		(*Click imageName:"CogWheelNew", waitFor:120*)
		
		if ImageFound(imageName:"CancelImpactAssessment", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "ReOpenActionOptionIsDisplaying" into global Vstep
			Log global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "ReOpenActionOptionIsNotDisplaying" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end ReopenActionButtonAvailable_InCogWheelDD

//VerifyErrorPopUpInConfirmOutComeOfComplaintAssessment

to handle VerifyErrorPopUpInConfirmOutComeOfComplaintAssessment
	try
		if ImageFound(text:"Please update the record and try again", waitFor:120,searchrectangle:["ErrorPopUp_UL","ErrorPopUp_BR"])
			Put "ErrorPupupDisplayedAsExpected" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"OKButtonPopup", waitFor:120
			
		else
			Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPopUpInConfirmOutComeOfComplaintAssessment

//VerifyDeviationNotBlankErrorMessage

to handle VerifyDeviationNotBlankErrorMessage
	if ImageFound(text:"Validate that: Deviation is not blank", waitFor:120,searchrectangle:["ErrorPopUp_UL","ErrorPopUp_BR"])
		Put "ErrorMessageValidate that: Deviation is not blankDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click imageName:"OKButtonPopup", waitFor:120
		
	else
		Put "ErrorMessageValidate that: Deviation is not blankIsNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	
end VerifyDeviationNotBlankErrorMessage

// ComplaintAssessment common handlers end


//ComplaintAction common handlers start


//Login as ComplaintCoordinator

to handle LoginToApplication_ComplaintCoordinator
	CC_CommonHandlers.LoginToApplication global ComplaintCoordinatorusername,global ComplaintCoordinatorpassword
	
end  LoginToApplication_ComplaintCoordinator

to handle LoginToApplication_ComplaintCoordinatorReviewer
	LoginToApplication global ComplaintCoordinatorReviewerUsername,global ComplaintCoordinatorReviewerPassword
	
end  LoginToApplication_ComplaintCoordinatorReviewer
//UserRoleSetup

// CreateComplaintAction

to handle CreateComplaintAction
	try
		wait 4
		Click text:"Complaint Actions", waitFor:120
		
		WaitFor 120, "CreateItem"
		Click imageName:"CreateItem", waitFor:120
		WaitFor 120, "CC_DateDue"
		Click imageName:"CC_DateDue", waitFor:120
		Typetext global CMADateDue
		wait 2
		TypeText tabKey
		wait 2
		TypeText "TestSD"
		wait 2
		TypeText tabKey
		wait 2
		TypeText "TestDesc"
		Click imageName:"Save", waitFor:120
		
		Put "ComplaintActionCreatedSuccessfully " into global Vstep
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end CreateComplaintAction


//CMA_Navigate_to_ComplaintActions_Section
to handle CMA_Navigate_to_ComplaintActions_Section
	NavigateToSectionFromLeftPane "Complaint Action"
end CMA_Navigate_to_ComplaintActions_Section

to handle SearchRecords_With_State_Closed

	SearchRecords_With_State "Closed"
	
end SearchRecords_With_State_Closed
to handle SearchRecords_With_State_InProgress

	SearchRecords_With_State "in Progress"
	
end SearchRecords_With_State_InProgress

//ComplaintCoordinator_Submit_or_Cancel_ComplaintAction

to handle ComplaintCoordinator_Submit_or_Cancel_ComplaintAction

	try
		
		Click imageName:"CogWheelNew", waitFor:120
		if global ComplaintCoordinatorDecision contains "Submit"
			Click text:"Submit Complaint Action", waitFor:120
			WaitFor 120, "ActionOwner"
			Click imageName:"ActionOwner", waitFor:120
			Typetext global AOusername
			Click"ActionOwner_Item1"
			Click imageName:"StartButton", waitFor:120
			wait 3
			Put"ComplaintCoordinatorSubmittedComplaintAction" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global ComplaintCoordinatorDecision contains "Cancel"
			click text:"Cancel Complaint Action", waitFor:120
			Put"ComplaintCoordinatorCancelledComplaintAction" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end ComplaintCoordinator_Submit_or_Cancel_ComplaintAction

//Complete the Action

to handle CMA_CompleteTheAction

	try
		
		(*Click text:"Complaint Actions", waitFor:120
Click imageName:"SearchBoxCMA", waitFor:120
Typetext"In Progress"
Typetext return
wait 7
// click the 1st item

Click imageName:"AI_Item1", waitFor:50*)
		wait 2
		click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, "CompleteClosesrecord"
		
		if global CMA_AOVerdict is "Complete"
			Click imageName:"CompleteClosesrecord", waitFor:120
			Typetext tabKey
			Typetext"TestACS"
			Click imageName:"Complete", waitFor:120
			Put"ActionOwnerCompletedComplaintAction" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CMA_AOVerdict is "Cancel"
			Click imageName:"Cancel_yellow_background", waitFor:120
			TypeText tabKey
			Typetext"testjustificationForCancel"
			TypeText tabKey
			TypeText global ReasonForCancel
			wait 2
			Click imageName:"ReasonforCancellation_item1", waitFor:120
			Click imageName:"Complete", waitFor:120
			Put"ActionOwnerCancelledComplaintAction" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	
end CMA_CompleteTheAction

//CLOSED
to handle VerifyLifeCycleState_CLOSED
	W_App_CommonHandlers.VerifyLifeCycleState "CLOSED"
end VerifyLifeCycleState_CLOSED

// open closed CMA
to handle Search_Open_CMA
	try
		
		Click imageName:"SearchBoxCMA", waitFor:120
		//Typetext"Closed"
		Typetext global CMARecordId
		Typetext return
		wait 5
		// click the 1st item
		
		Click imageName:"AI_Item1", waitFor:120
		
		if ImageFound(imageName:"RecordID_UL", waitFor:120)
			Put "CMAIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CMAIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end Search_Open_CMA


//CMA_EditDateDue

to handle CMA_EditDateDue

	try
		WaitFor 120, "edit_img"
		
		Click imageName:"edit_img", waitFor:120
		WaitFor 120, "CC_DateDue"
		Click imageName:"CC_DateDue", waitFor:120
		wait 1
		Typetext controlKey,a
		TypeText backspace
		wait 2
		typetext global NewCMADateDue
		Typetext tabKey
		Click imageName:"SaveButton", waitFor:120
		wait 2
		
		if ImageFound(text:"Edit", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "DateDueEditedAndUpdated Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "DateDueEditedAndUpdatedUnSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog	
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
end CMA_EditDateDue


//Reassign task to NewActionUser
to handle AO_ReassignTaskToOtherUser_NAO
	//ReassignTaskToOtherUsern global NICusername,global NICpassword
	W_App_CommonHandlers.ReassignTaskToOtherUser global NewAOUsername
end  AO_ReassignTaskToOtherUser_NAO


// Draft_InProgress_CMA_NotAvailable

to handle Draft_InProgress_State_CMA_NotAvailable
	try
		set the SearchRectangle to ["ComplaintActions_Section_UL","ComplaintActions_Section_BR"]
		if ImageFound(text:"Draft", waitFor:120) or if ImageFound(text:"In progress", waitFor:120)
			Put "AllComplaintActionsLifeCycleStageAreNotChangedToCLOSEDCANCELLED" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog	
			
		else
			Put "AllComplaintActionsLifeCycleStageChangedToCLOSEDCANCELLED" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		end if 
		Set the SearchRectangle to []


	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
	
end Draft_InProgress_State_CMA_NotAvailable

//Reassign task to NewActionUser
to handle ReassignTaskToOtherComplaintCoordinator

	W_App_CommonHandlers.ReassignTaskToOtherUser global ComplaintCoordinatorFirstNameofOther
end  ReassignTaskToOtherComplaintCoordinator

to handle CM_UserRoleSetup_ComplaintCoordinator_Other
	//Put "Health CM 1" into global ComplaintCoordinatorrFirstName
	UserRoleSetup global ComplaintCoordinatorFirstNameofOther,"Complaint Coordinator"
end CM_UserRoleSetup_ComplaintCoordinator_Other


to handle CM_UserRoleSetup_ComplaintCoordinatorReviewer
	UserRoleSetup global ComplaintCoordinatorReviewerFirstName,"Complaint Coordinator Reviewer"
end CM_UserRoleSetup_ComplaintCoordinatorReviewer


to handle ReassignTaskToOtherComplaintCoordinatorReviewer
	//ReassignTaskToOtherUsern global NICusername,global NICpassword
	W_App_CommonHandlers.ReassignTaskToOtherUser global ComplaintCoordinatorReviewerFirstNameofOther
end  ReassignTaskToOtherComplaintCoordinatorReviewer

to handle CM_UserRoleSetup_ComplaintCoordinatorReviewer_Other
	//Put "Health CM 1" into global ComplaintCoordinatorrFirstName
	UserRoleSetup global ComplaintCoordinatorReviewerFirstNameofOther,"Complaint Coordinator Reviewer"
end CM_UserRoleSetup_ComplaintCoordinatorReviewer_Other
ChangeControlUATFetchingData
CM_DateDueExtension
to handle CM_DateDueExtension
	try
		NavigateToSectionFromLeftPane"General Information"
		(*		put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		put ReadText(topRight of ImageRectangle(text:"Date Due"),ImageLocation(text:"Date Due")+[300,30]) into ExistingDateDue
		Log ExistingDateDue*)
		put global CCDateDue into ExistingDateDue
		//Log ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into global NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendments"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext global NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",waitFor:120,searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		click ImageLocation(text:"Date Due Changed to")
		//if ImageFound(text:global NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
			//put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			//Log global Vstep
			//CaptureAtLog
			
		//else
			//put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			//LogError global Vstep
			//CaptureAtLog
		//end if
		put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			Log global Vstep
			CaptureAtLog
		NavigateToSectionFromLeftPane"General Information"
		ScrollWheelUp 50
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try	
end CM_DateDueExtension


to handle NavigateToComplaintAssessment
	NavigateToSectionFromLeftPane "Complaint Assessment"
end NavigateToComplaintAssessment

to handle NavigateToDeviationDetailsPageByClickingDeviationLink
	try
		
		//Set the searchrectangle to [ ImageLocation(text:"Deviation needed",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Deviation needed",searchrectangle:ScreenPart("Center"))+[500,150]]
		
		put ReadText(topRight of ImageRectangle(text:"Deviation",searchrectangle:ScreenPart("TopRightQuadrant"))+[0,-5],ImageLocation(text:"Deviation",searchrectangle:ScreenPart("TopRightQuadrant"))+[300,30]) into existingId
		Log existingId
		if existingId is not ""
			click ImageLocation(text:"Deviation",searchrectangle:ScreenPart("TopRightQuadrant"))+[70,0]
			put "Deviation available" into global Vstep
			Log global Vstep
			CaptureAtLog
			wait 3
			
			
			//Set the searchrectangle to []
			WaitFor 120, text:"Record Id"
			if ImageFound(text:existingId, waitFor:10) or if imagefound(text:"Deviation",searchrectangle:ScreenPart("TopLeftQuadrant"))
				put "Deviation details page is  displaing" into global Vstep
				Log global Vstep
				CaptureAtLog
			else
				put "Deviation details page is not  displaing" into global Vstep
				LogError global Vstep
				CaptureAtLog
			end if
		else
			put "Deviation not available" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try	
end NavigateToDeviationDetailsPageByClickingDeviationLink

to handle navigateToAttachmentsSection
	NavigateToSectionFromLeftPane "Attachments"
end navigateToAttachmentsSection


to handle CM_Upload_Attachment
	try
		click text:"Upload",waitfor:120,searchrectangle:ScreenPart("LeftHalf")
		WaitFor 120, text:"File name"
		click ImageLocation(text:"File name")+[200,0]

		typetext "C:\Users\ngujjula\Desktop\CCTestData.xlsx"
		wait 1
		Click text:"Open", waitFor:120,searchrectangle:ScreenPart("Center")
		//WaitFor 100, text:"Download",searchrectangle:ScreenPart("Center")
		if ImageFound(text:"Download",waitfor:120,searchrectangle:ScreenPart("LeftHalf"))
			
			put "UploadAttachmentSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			put "UploadAttachmentUnSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try		
end CM_Upload_Attachment


to handle ChangeAppicationEnvironment VEnvironment
	try
		Set the SearchRectangle to [ScreenPart("ToprightQuadrant")]
		if ImageFound(text:"Migration", waitFor:120) or if  ImageFound(text:"SIT", waitFor:120) or if  ImageFound(text:"UAT", waitFor:120)
			click foundimagelocation()
			wait 2
			click text: VEnvironment
			wait 2
			put "EnvironmentFoundandChanged" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			put "EnvironmentNotFound" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException
		captureAtLog
	end try
	
end ChangeAppicationEnvironment


//ComplaintAction common handlers end


//Vaishnavi
//Change Control UAT handlers start

//NavigateToRecordDetailsSection
to handle NavigateToRecordDetailsSection
	NavigateToSectionFromLeftPane "Record Details"
end NavigateToRecordDetailsSection

to handle VerifyRecordDetailsSection
	
	//read the values from the 
	Set the SearchRectangle to ScreenPart("Center")
	If ImageFound(text:"Originator", waitFor:120)
		Put "Originator Name is available" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "All the  fields are not available" into global Vstep
		LogError global Vstep
		CaptureAtLog    
	End If
	Set the SearchRectangle to []

end VerifyRecordDetailsSection

//VerifyErrorPromptForNotRaising_IA
to handle VerifyErrorPromptForNotRaising_IA
	if ImageFound(text:"Validate that: Implementation Actions: At least", waitFor:120,searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"one record exists", waitFor:120,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptForNotRaising_IA

//CreateMileStone
to handle CreateMileStone
	try
		//Put "15 April 2021" into global MilestoneDateDue
		NavigateToSectionFromLeftPane "Key Milestones"
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Milestone",searchrectangle:ScreenPart("Center")
		
		click ImageLocation(text:"Description",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global MilestoneDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,100]
		wait 1
		click item 2 of everyimagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "MileStone Created successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CreateMileStone

//NavigatoToRiskAssessment
to handle NavigateToRiskAssessment
	NavigateToSectionFromLeftPane "Risk Assessments"
end NavigateToRiskAssessment

//CreateRiskAssessment
to handle CreateRiskAssessment
	try
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Change Control Risk Item",searchrectangle:ScreenPart("Center")
		
		click ImageLocation(text:"Risk Description",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		Typetext tabKey
		//Click ImageLocation(text:"Risk Rating",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Medium"
		wait 1
		Typetext downArrow, return
		Click ImageLocation(text:"Risk Response",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext"Test"
		wait 1
		click item 2 of everyimagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "Risk Assessment Created successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		NavigateToSectionFromLeftPane "General Information"
		ScrollWheelUp 30
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CreateRiskAssessment

//OpenRecord_CLOSEDCANCELLED
to handle OpenRecord_CLOSEDCANCELLED
	W_App_CommonHandlers.SearchRecords_With_State "CLOSED - CANCELLED"
end OpenRecord_CLOSEDCANCELLED

//OpenRecord_CLOSEDCOMPLETE
to handle OpenRecord_CLOSEDCOMPLETE

	W_App_CommonHandlers.SearchRecords_With_State "CLOSED - COMPLETE"
end OpenRecord_CLOSEDCOMPLETE

//OpenRecord_CLOSEDINCOMPLETE
to handle OpenRecord_CLOSEDINCOMPLETE
	W_App_CommonHandlers.SearchRecords_With_State "CLOSED - INCOMPLETE"
end OpenRecord_CLOSEDINCOMPLETE

//CreateDateDueExtensionRequest
to handle CreateDateDueExtensionRequest
	//NavigateToSectionFromLeftPane"Date Due Amendment"
	CM_DateDueExtension
end CreateDateDueExtensionRequest

//ReopenIA
to handle ReopenIA
	try
		Click imageName:"CancelImpactAssessment", waitFor:30
		
		
		WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Justification",searchRectangle:ScreenPart("Center"))+[0,25]
		typetext "Test"
		wait 1
		click item 2 of everyimagelocation( text:"Start",waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "ActionReopenedSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		W_App_CommonHandlers.VerifyLifeCycleState_ReopenedAction
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end ReopenIA

//VerifyLifeCycleState_ReopenedAction
to handle VerifyLifeCycleState_ReopenedAction
	VerifyLifeCycleState "RE-OPENED ACTION"
end VerifyLifeCycleState_ReopenedAction

//ReassignPFAByChangeCoordinator_WhenCCisinPendingPostApprovalState
to handle ReassignPFAByChangeCoordinator_WhenCCisinPendingPostApprovalState

	W_App_CommonHandlers.ReassignTaskToOtherUser global PostFunctionApproverFirstNameofOther
end  ReassignPFAByChangeCoordinator_WhenCCisinPendingPostApprovalState

//ReassignQAByChangeCoordinator_WhenCCisinPendingPostApprovalState
to handle ReassignQAByChangeCoordinator_WhenCCisinPendingPostApprovalState

	W_App_CommonHandlers.ReassignTaskToOtherUser global PostQualityApproverFirstNameofOther
end  ReassignQAByChangeCoordinator_WhenCCisinPendingPostApprovalState

//OpenRecord_IA_CLOSEDINCOMPLETE
to handle OpenRecord_IA_CLOSEDINCOMPLETE
	W_App_CommonHandlers.SearchRecords_With_State "CLOSED - INCOMPLETE"
end OpenRecord_IA_CLOSEDINCOMPLETE

//VerifyErrorPromptForMileStoneDueDateLaterThanCCDateDue
to handle VerifyErrorPromptForMileStoneDueDateLaterThanCCDateDue
	//if ImageFound(imageName:"DateDueError1", waitFor:120)
	if ImageFound(imageName:"MilestoneError", waitFor:60,searchrectangle:ScreenPart("TopRightQuadrant"))
		//Click imageName:"Cancel", waitFor:120
		
		Put "ErrorMessageIsDisplayingDueToInvalidDate" into  global Vstep
		Log  global Vstep
		CaptureAtLog
	else
		Put "ErrorMessageIsNotDisplayingEvenForInvalidDate" into  global Vstep
		LogError  global Vstep
		CaptureAtLog
		//
	end if
	
end VerifyErrorPromptForMileStoneDueDateLaterThanCCDateDue

CancelTask_FromCogWheel_WorkFlowTimeLine
to handle CancelTask_FromCogWheel_WorkFlowTimeLine

	Click text:"workflow timeline ", waitFor:120,ignoreSpaces:Yes,searchrectangle:ScreenPart("TopLeftQuadrant")
	(*CogWheelNew*)
	WaitFor 120, text:"Workflow Timeline",SearchRectangle:[RemoteScreenSize()*[0.15,0.1],RemoteScreenSize()]

	Put "Workflow Timeline section should be displayed" into global Vstep
	
	Log global Vstep
	CaptureAtLog
	
	(*Set the SearchRectangle to ["ReAssignCogWheelUL1",RemoteScreenSize()]*)
	Click image:"CogWheelNewForCancelTask",waitfor:120
	click text:"Cancel Task",waitfor:120
	
	(*Set the SearchRectangle to []*)
	
	WaitFor 10, text:"Confirm Cancel Workflow Task", SearchRectangle:ScreenPart("Center")
	wait 2
	Put "Cancel Task popup should be displayed" into global Vstep
	
	Log global Vstep
	CaptureAtLog
	
	Click image:"Continue", waitFor:10,searchrectangle:ScreenPart("Center") 
	
end CancelTask_FromCogWheel_WorkFlowTimeLine

//VerifyErrorPromptToCloseIA
to handle VerifyErrorPromptToCloseIA
	if ImageFound(text:"records equal", waitFor:120,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptToCloseIA

//VerifyNotAbleToAddAttachments
to handle VerifyNotAbleToAddAttachments
	NavigateToSectionFromLeftPane"Attachments"
	wait 5
	if ImageFound(text:"Upload",waitFor:30,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Upload button present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Upload button must not be present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	ScrollWheelUp 50
	
	
end VerifyNotAbleToAddAttachments

//VerifyAbleToAddAttachments
to handle VerifyAbleToAddAttachments
	NavigateToSectionFromLeftPane"Attachments"
	wait 5
	if ImageFound(text:"Upload",waitFor:30,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Upload button present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Upload button must not be present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
		
	end if
	ScrollWheelUp 50
	
	
end VerifyAbleToAddAttachments

//OpenChildRecord_withObjectReference
to handle OpenChildRecord_withObjectReference
	try
		waitfor 120,text:"Show in tab",Searchrectangle:ScreenPart("TopHalf")
		wait 2
		if imagefound(text:"Object Reference",waitFor:120,Searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			click imagelocation(text:"Object Reference",Searchrectangle:ScreenPart("TopLeftQuadrant"))+[-9,38]
			
			wait 2
			waitfor 120,text:"Details",Searchrectangle:ScreenPart("TopLeftQuadrant")
			Put "Child records Details page displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Child records are not availablein the section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end OpenChildRecord_withObjectReference



//OpenChildRecord_withRecordIDReference
to handle OpenChildRecord_withRecordIDReference

	try
		waitfor 120,text:"Show in tab",Searchrectangle:ScreenPart("TopHalf")
		
		if imagefound(text:"Record ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			click imagelocation(text:"Record ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))+[-7,38]
			
			wait 2
			waitfor 120,text:"Details",Searchrectangle:ScreenPart("TopLeftQuadrant")
			Put "Child records Details page displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Child records are not availablein the section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end OpenChildRecord_withRecordIDReference

//CreateButtonNotAvailable
to handle CreateButtonNotAvailable
	
	
	if ImageFound(text:"Create",searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Create button present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Create button should not be present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	
	ScrollWheelUp 50
	
end CreateButtonNotAvailable

//CreateButtonAvailable
to handle CreateButtonAvailable
	
	wait 3
	if ImageFound(text:"Create",waitFor:120,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Create button present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Create button should not be present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
		
	end if
	ScrollWheelUp 40
	
end CreateButtonAvailable

//VerifyAbleToCreate_DateDueExtensionRequest
to handle VerifyAbleToCreate_DateDueExtensionRequest
	NavigateToSectionFromLeftPane"Date Due Amendment"
	CreateButtonAvailable
end VerifyAbleToCreate_DateDueExtensionRequest

//VerifyNotAbleToCreate_DateDueExtensionRequest
to handle VerifyNotAbleToCreate_DateDueExtensionRequest
	NavigateToSectionFromLeftPane"Date Due Amendment"
	CreateButtonNotAvailable
end VerifyNotAbleToCreate_DateDueExtensionRequest

to handle VerifyNotAbleToCreate_DateDueExtensionRequest_CC

	if ImageFound(text:"Date Due Amendment", waitFor:60,Searchrectangle:ScreenPart("LeftHalf")) and  if ImageFound(Image:"edit_img", waitFor:60,Searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "Cannot Edit Date Due and Date Due Amendment section is available" into global Vstep
		LogError global Vstep
		CaptureAtLog
	else
		Put "Cannot Edit Date Due and Date Due Amendment section is not available" into global Vstep
		Log global Vstep
		CaptureAtLog
	end if		
	
end VerifyNotAbleToCreate_DateDueExtensionRequest_CC

//CannotEdit_ExistingDateDueExtensionRequest
to handle CannotEdit_ExistingDateDueExtensionRequest
SearchRecord
	NavigateToSectionFromLeftPane"Date Due Amendments"
	OpenChildRecord_withRecordIDReference
	EditButtonNotAvailable
end CannotEdit_ExistingDateDueExtensionRequest

//Open_DateDueExtensionRequest
to handle Open_DateDueExtensionRequest
	NavigateToSectionFromLeftPane"Date Due Amendment"
	OpenChildRecord_withRecordIDReference
end Open_DateDueExtensionRequest

//CannotEdit_GeneralInformation
to handle CannotEdit_GeneralInformation
	NavigateToSectionFromLeftPane"General Information"
	EditButtonNotAvailable
end CannotEdit_GeneralInformation

//CanEdit_GeneralInformation
to handle CanEdit_GeneralInformation
	NavigateToSectionFromLeftPane"General Information"
	EditButtonAvailable
end CanEdit_GeneralInformation

//CannotEdit_ImpactAssessmentOutputSection
to handle CannotEdit_ImpactAssessmentOutputSection
	NavigateToImpactAssessmentOutputSection
	EditButtonNotAvailable
end CannotEdit_ImpactAssessmentOutputSection

//CannotEdit_GeneralInformation
to handle CannotEdit_GeneralInformation_InImplementation
	NavigateToSectionFromLeftPane"General Information"
	//EditButtonNotAvailable Titletest
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	wait 5
	if ImageFound(image:"Titletest")
		Put "Can edit General Information" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Cannot Edit General Information" into global Vstep
		Log global Vstep
		CaptureAtLog
	end if
	Click text:"Cancel",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	ScrollWheelUp 40
	
end CannotEdit_GeneralInformation_InImplementation

//CannotEdit_ImpactAssessmentOutputSection
to handle CannotEdit_ImpactAssessmentOutputSection_InImplementation
	NavigateToImpactAssessmentOutputSection
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(image:"ImpactAssessmentConclusionISum")
		Put "Can edit Impact Assessment Output section" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Cannot Edit Impact Assessment Output section" into global Vstep
		Log global Vstep
		CaptureAtLog
	end if
	
	Click text:"Cancel",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	ScrollWheelUp 40
	
end CannotEdit_ImpactAssessmentOutputSection_InImplementation

//EditMilestone
to handle EditMilestone
	NavigateToSectionFromLeftPane"Key Milestones"
	OpenChildRecord_withRecordIDReference
	EditButtonAvailable
end EditMilestone

//CannotEdit_ExistingDateDueExtensionRequest
//to handle CannotEdit_ExistingDateDueExtensionRequest
//	Open_DateDueExtensionRequest
//	EditButtonNotAvailable
//end CannotEdit_ExistingDateDueExtensionRequest

//CanEdit_ImpactAssessmentOutputSection
to handle CanEdit_ImpactAssessmentOutputSection
	NavigateToImpactAssessmentOutputSection
	EditButtonAvailable
end CanEdit_ImpactAssessmentOutputSection

//Edit_ImpactedProductInformation
to handle Edit_ImpactedProductInformation
	NavigateToSectionFromLeftPane"Impacted Product Information"
	OpenChildRecord_withObjectReference
	EditButtonAvailable
end Edit_ImpactedProductInformation

to handle CreateDateDueExtensionRequest NewDateDue
	NavigateToSectionFromLeftPane"Date Due Amendment"
	wait 5
	try
		click text:"Create",waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext NewDateDue
		typetext tabkey
		wait 1
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		typetext"Test"
		put "Details entered in Create Date Due Amendment Page and Click the Save button" into global Vstep
		Log global Vstep
		CaptureAtLog
		click item 2 of everyimagelocation(text:"Save",waitFor:120,searchrectangle:Screenpart("BottomHalf"))
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
	End try
end CreateDateDueExtensionRequest
to handle CreateDateDueExtensionRequest_IADateDueMoreThan_CC_DateDue
	CreateDateDueExtensionRequest global IADateDueMoreThan_CC_DateDue
end CreateDateDueExtensionRequest_IADateDueMoreThan_CC_DateDue

to handle CreateDateDueExtensionRequest_IADateDueLessThan_Current_Date_Due
	CreateDateDueExtensionRequest global IADateDueLessThan_Current_Date_Due
end CreateDateDueExtensionRequest_IADateDueLessThan_Current_Date_Due

to handle CreateDateDueExtensionRequest_IADateDueLessThan_CC_more_ThanCurrent_DateDue
	CreateDateDueExtensionRequest global IADateDueLessThan_CC_more_ThanCurrent_DateDue
end CreateDateDueExtensionRequest_IADateDueLessThan_CC_more_ThanCurrent_DateDue

//VerifyErrorMessage_IADateDueMoreThan_CC_DateDue
to handle VerifyErrorMessage_IADateDueMoreThan_CC_DateDue
	
	If imagefound(text:"date due of Implementation Actions need to be",seaechrectangle:ScreenPart("Center"),waitfor:20)and If imagefound(text:"before Change Control Date due",seaechrectangle:ScreenPart("Center"),waitfor:120) //message needs to update
		Put "Error message should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	click text:"OK",searchrectangle:ScreenPart("BottomHalf"),waitfor:120
end VerifyErrorMessage_IADateDueMoreThan_CC_DateDue

//VerifyErrorMessage_IADateDueLessThan_Current_Date_Due
to handle VerifyErrorMessage_IADateDueLessThan_Current_Date_Due

	If imagefound(text:"Implementation Action Date Due needs to be later than Date Due Changed To",seaechrectangle:ScreenPart("Center"),waitfor:120)
		Put "Error message should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	click text:"Cancel",searchrectangle:ScreenPart("BottomHalf"),waitfor:120
end VerifyErrorMessage_IADateDueLessThan_Current_Date_Due

//Edit_GeneralInformation
to handle Edit_CC_GeneralInformation GivenFieldName, GivenFieldValue
	try
		NavigateToSectionFromLeftPane "General Information"
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		//waitfor 120,text:GivenFieldName,SearchRectangle:ScreenPart("Center")+[100,100]
		//Put "Affected Location Type" into GivenFieldName
		//Click ImageLocation(text:GivenFieldName,SearchRectangle:ScreenPart("Center"))+[100,0]
		Click ImageLocation(text:GivenFieldName)+[100,0]
		Typetext Controlkey,a
		Typetext Backspace
		wait 2
		Typetext GivenFieldValue
		wait 2
		Typetext return
		Put "Entered New value in Section Edit Page" into global Vstep
		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		Click (text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		
		wait 5
		// verify the new value
		if imagefound(text:GivenFieldValue,waitfor:50)
			Put "New value Edited successfully" into global Vstep
			
			Log global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "New value Not Edited successfully" into global Vstep
			
			Logerror global Vstep
			
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		
		LogError theException
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	end try
end Edit_CC_GeneralInformation 



to handle Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct
	Edit_CC_GeneralInformation "Brand Specific","Brand Related (but not product specific)"
	
end Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct

//VerifyErrorPromptToaddImpactedProductInformation
to handle VerifyErrorPromptToaddImpactedProductInformation
	if ImageFound(text:"Validate that: Change Control - Product Join:", waitFor:120,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptToaddImpactedProductInformation

to handle VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_ImpactAssessmentActionPlanTask
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Impact Assessment Conclusion"),topleft of imageRectangle(text:"Impact Assessment Conclusion")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Impact Assessment Conclusion Summary" into ErrorMessagesDisplayForFields
	else
		insert "Impact Assessment Conclusion Summary" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	(*TypeText tabKey
	ScrollWheelDown 50*)
	//
	Set the searchrectangle to [topleft of imageRectangle(text:"Implementation Success criteria")+[-10,10],topleft of imageRectangle(text:"Implementation Success criteria")+[250,100]]
	if ImageFound(text:"This field is required")
		insert "Implementation Success criteria" into ErrorMessagesDisplayForFields
		
	else
		insert "Implementation Success criteria" into ErrorMessagesNotDisplayForFields
	end if
	Set the searchrectangle to ()
	
	//
	Set the searchrectangle to [topleft of imageRectangle(text:"Overall Risk"),topleft of imageRectangle(text:"Overall Risk")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Overall Risk" into ErrorMessagesDisplayForFields
	else
		insert "Overall Risk" into ErrorMessagesNotDisplayForFields
	end if
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 3
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_ImpactAssessmentActionPlanTask

//ReviewTheImplementationOfTheChange_withoutMandatoryFields
to handle ReviewTheImplementationOfTheChange_withoutMandatoryFields
	try
	(*Put "Complete" into global CCReviewVerdict
		Put "Yes" into global DMEffectiveness
		Put "Yes" into global PFArequired*)
		//Click imageName:"ReviewtheImplementationoftheChange", waitFor:10
		Click text:"Complete", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global CCReviewVerdict contains "Complete"
			click text:"Change Coordinator Review Complete",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Test"
			TypeText tabKey
			(*Typetext "TestPostImpSummary"*)
			///////DemonstratesEffectiveness_Yes DemonstratesEffectiveness_No
			if global DMEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
				wait 2
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					Click imageName:"Complete", waitFor:120
					put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					click imageName:"No",SearchRectangle:ScreenPart("BottomHalf")
					// to be added code
				end if
				
				//
			else if global DMEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				wait 2
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:120
					Put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"No", waitFor:120
					wait 3
					//Click imageName:"Complete", waitFor:120
					Put "CompleteReviewTheImplementationChangeWithoutPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
				end if
				//
			end if
			Click imageName:"Complete", waitFor:120
		else
			Put " AllCCReviewVerdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end ReviewTheImplementationOfTheChange_withoutMandatoryFields

//VerifyErrorPromptToaddPostImplementationSummary
to handle VerifyErrorPromptToadd_PostImplementationSummary

	Set the searchrectangle to [topleft of imageRectangle(text:"Post-Implementation Summary"),topleft of imageRectangle(text:"Post-Implementation Summary")+[300,110]]
	if ImageFound(text:"field is required")
		Put "Error message displayed" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	end if
	Set the searchrectangle to []

	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyErrorPromptToadd_PostImplementationSummary

// supplementary info Editable
to handle SupplementaryInfoEditable
	try
		wait 2
		//click text:"Supplementary Information",waitfor:120
		NavigateToSectionFromLeftPane "Supplementary Information"
		WaitFor 120, text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Supplementary Information",SearchRectangle:ScreenPart("Center")
		
		Put "Create Supplementary Information Popup should be displayed" into global Vstep
		log global Vstep
		CaptureAtLog
		click imagelocation(text:"Comments",SearchRectangle:ScreenPart("Center"))+[80,0]
		Typetext controlKey,a
		Typetext backspace
		Typetext"Test Summary"&random(0, 99)
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,SearchRectangle:ScreenPart("Center"))
		wait 5
		if ImageFound(text:"comments", waitFor:120,SearchRectangle:ScreenPart("TopHalf"))
			Put "Supplementary Information should be created in Supplementary Information section" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put "Supplementary Information not created in Supplementary Information section" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		(*	
		//Audit trial verify
		Click imageName:"CogWheelNew", waitFor:120
		Click text:"Audit Trail", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Supplementary",SearchRectangle:ScreenPart("Center")
		
		Put "Audit Trail screen should be displayed with the Supplementary Infomation" into global Vstep
		log global Vstep
		CaptureAtLog
		click image:"AuditTrial_Close",SearchRectangle:ScreenPart("BottomRightQuadrant")*)
		//
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end SupplementaryInfoEditable

//UserRoleSetup_FA_second
to handle UserRoleSetup_FA_second
	UserRoleSetup global FA_second,"Function Approver" 
end UserRoleSetup_FA_second

//LoginToApplication_FA_second
to handle LoginToApplication_FA_second
	//LoginToApplication global PFAUsername,global PFAPassword
	LoginToApplication "Function.cc.2.N@sb-reckitt.com","rbQone@2test"
end LoginToApplication_FA_second

//	AssignUser_Teams_secondFA "Health CC 1 Function Approver","Function Approver" 
	
//UserRoleSetup_PFA_second
to handle UserRoleSetup_PFA_second
	UserRoleSetup global PFA_second,"Function Post-Approver" 
end UserRoleSetup_PFA_second

//LoginToApplication_PFA_second
to handle LoginToApplication_PFA_second
	LoginToApplication global FAusername,global FApassword
end LoginToApplication_PFA_second

//VerifyErrorPromptTo_CreateRiskAssessment
to handle VerifyErrorPromptTo_CreateRiskAssessment
wait 5
	if ImageFound(text:"At least one record", waitFor:20,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end VerifyErrorPromptTo_CreateRiskAssessment

//EditImpactAssessmentOutput_withoutMandatoryFields
to handle EditImpactAssessmentOutput_withoutMandatoryFields
	try
		
		(*		Put "Built-In" into global FormalRiskAssessmentRequired
		Put "Low" into global OverAllRisk*)
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		wait 20
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]

		wait 2
		// deleting previous value
		set the SearchRectangle to  [ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-5],ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[700,150]]
		wait 15
		repeat 3 times
			if ImageFound(image:"RiskAssessmentClosebutton")
				click FoundImageLocation()
				
			end if
			wait 1
		end repeat
		set the SearchRectangle to []


		click text:global FormalRiskAssessmentRequired,SearchRectangle:ScreenPart("LeftHalf")
		wait 2
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-20]
		//FormalRiskAssessmentRequired
		if global FormalRiskAssessmentRequired is "No Risk Assessment Required"
			click ImageLocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("RightHalf"))+[200,2]
			Typetext "Test"
			wait 2
		end if
		
		click text:"Save",waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		
		if ImageFound(Image:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "ImpactAssessmentOutPutEditedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "ImpactAssessmentOutPutNotEditedSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end EditImpactAssessmentOutput_withoutMandatoryFields

//PrepareImpactAssessmentActionPlan_withoutMandatoryFields
to handle PrepareImpactAssessmentActionPlan_withoutMandatoryFields
	try
		ScrollWheelUp 50
		wait 2
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global PIAverdict is "SubmitForApproval"
			
			put "Health" into global GBU
			if global GBU is "Hygiene"
				click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))+[40,0] //Clicking No
				//click imagelocation(text:"No",waitfor:120,searchrectangle:ScreenPart("Center"))
				
			end if
			
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			typetext tabKey
			Typetext "Test"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[100,0]
			ScrollWheelDown 150
			
			Click imageName:"complete", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[100,0]
			ScrollWheelDown 50
			put "PrepareImpactAssessmentActionPlanSuccessfullyDone" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end PrepareImpactAssessmentActionPlan_withoutMandatoryFields

to handle PrepareImpactAssessmentActionPlan_withoutMandatoryFields_CCPL
	try
		ScrollWheelUp 50
		wait 2
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global PIAverdict is "SubmitForApproval"
			
			put "Health" into global GBU
			if global GBU is "Hygiene"
				click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))+[40,0] //Clicking No
				//click imagelocation(text:"No",waitfor:120,searchrectangle:ScreenPart("Center"))
				
			end if
			
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			typetext tabKey
			Typetext "Test"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			//click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[100,0]
			ScrollWheelDown 150
			
			Click imageName:"complete", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[100,0]
			ScrollWheelDown 50
			put "PrepareImpactAssessmentActionPlanSuccessfullyDone" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end PrepareImpactAssessmentActionPlan_withoutMandatoryFields_CCPL

//Add_Attachment
to handle Add_Attachment
	NavigateToSectionFromLeftPane"Attachments"
	CM_Upload_Attachment
end Add_Attachment

//Verify_CreateMileStoneFields
to handle Verify_CreateMileStoneFields
	NavigateToSectionFromLeftPane "Key Milestones"
	
	Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Create Milestone",searchrectangle:ScreenPart("Center")
	
	
	Put [] into NotDisplayedFields
	Put [] into DisplayedFields

	if ImageFound(text:"Description",searchrectangle:ScreenPart("Center"))
		insert "Description" into DisplayedFields
	else
		insert "Description" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Date Due",SearchRectangle:ScreenPart("Center"))
		insert "Date Due" into DisplayedFields
		
	else
		insert "Date Due" into NotDisplayedFields
	end if
	
	
	if number of items of DisplayedFields is 2
		Put "Fields are Displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
		try
			
			
			
			click ImageLocation(text:"Description",searchrectangle:ScreenPart("Center"))+[100,0]
			Typetext"TestDsc"
			
			Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
			Typetext global MilestoneDateDue
			Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,100]
			wait 1
			click item 2 of everyimagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("Center"))
			
			Put "MileStone Created successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		Catch theException
			LogError theException
			CaptureAtLog
			//
		End try
		
		
	else
		Put "Not Displayed fields are "&ErrorMessagesNotDisplayForFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
end Verify_CreateMileStoneFields

//Verify_CreateCCFields
to handle Verify_CreateCCFields

	Click imageName:"CreateButton", waitFor:120
	
	
	Put [] into NotDisplayedFields
	Put [] into DisplayedFields
	wait 5
	if ImageFound(text:"Title")
		insert "Title" into DisplayedFields
	else
		insert "Title" into NotDisplayedFields
	end if
	wait 2
	if ImageFound(text:"Global Business Unit(s)")
		insert "Global Business Unit(s)" into DisplayedFields
		
	else
		insert "Global Business Unit(s)" into NotDisplayedFields
	end if
	wait 1
	if ImageFound(text:"e-commerce")
		insert "e-commerce" into DisplayedFields
		
	else
		insert "e-commerce" into NotDisplayedFields
	end if
	wait 1
	if ImageFound(text:"Change Type")
		insert "Change Type" into DisplayedFields
		
	else
		insert "Change Type" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Reason(s)")
		insert "Reason(s) / Driver(s)" into DisplayedFields
		
	else
		insert "Reason(s)/Driver(s)" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Justification")
		insert "Justification" into DisplayedFields
		
	else
		insert "Justification" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Detailed description")
		insert "Detailed description" into DisplayedFields
		
	else
		insert "Detailed description" into NotDisplayedFields
	end if
	
	if ImageFound(text:"External References")
		insert "External References" into DisplayedFields
		
	else
		insert "External References" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Date Due")
		insert "Date Due" into DisplayedFields
		
	else
		insert "Date Due" into NotDisplayedFields
	end if
	
	if number of items of DisplayedFields is 9
		Put "Fields are Displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
		try
		(*put "test123" into global  CCshortDescription
		put "20 Apr 2021" into global CCDateDue
		put "Health" into global CCGBU
		put "Artwork"into global CCChangeType
		put "Health" into global CCReasonDrivers
		put "Country" into global  CCImpactedLocation*)
			
			Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
			waitfor 120,text:"Title",searchrectangle:ScreenPart("Center")
			Put "Create Change Control page should be displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[150,0]
			//typetext global  CCshortDescription
			Typetext "Test"
			Click ImageLocation(text:"Date Due")+[150,0]
			typetext global  CCDateDue
			typetext tabKey
			Click ImageLocation(text:"Global Business Unit(s)")+[150,0]
			typetext  global  CCGBU
			Click ImageLocation(text:"Global Business Unit(s)")+[130,22]
			// click out side the location
			Click ImageLocation(text:"Global Business Unit(s)")+[0,30]
			typetext tabkey
			
			click imagelocation(text:"Change Type")+[85,0]
			typetext  global  CCChangeType
			click imagelocation(text:"Change Type")+[74,27]
			// click out side the loc
			//click imagelocation(text:"Change Type")
			
			
			click imagelocation(text:"Reason(s)")+[200,0]
			typetext  global  CCReasonDrivers
			Click imagelocation(text:"Reason(s)")+[190,20]
			// click out side the loc
			click imagelocation(text:"Reason(s)")
			typetext tabkey
			
			click ImageLocation(text:"Detailed Description")+[100,0]
			typetext "testing"
			typetext tabkey
			
			click ImageLocation(text:"Change Justification")+[100,0]
			typetext "testing"
			typetext tabkey
			
			
			
			
			click ImageLocation(text:"Affected Location Type")+[112,0]
			wait 2
			Typetext controlkey,a
			Typetext backspace
			//typetext global  CCImpactedLocation
			typetext "Country"
			wait 2
			Typetext downarrow,return
			
			//uat
			(*Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 1
		Typetext controlKey,a
		Typetext backspace
		wait 1
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return*)
			
			
			click ImageLocation(text:"Brand Specific",ScreenPart:("RightHalf"))+[200,0]
			Typetext "sku specific"
			wait 2
			Typetext return
			click imagelocation(text:"External References",searchrectangle:ScreenPart("RightHalf"),waitfor:30)+(200,0)
			Typetext"https://login.veevavault.com/auth/login"
			Put "Entered Details in Create change control page" into global Vstep
			Log global Vstep
			CaptureAtLog
			click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
			wait 5
			if ImageFound(text:"complete",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
				//read recordid
				
				//put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
				put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
				//Log  global VRecordId
				If global GivenRecordId is ""
					set the suitevariables.RecordId to global VRecordId
				else
					set the suitevariables.RecordId to global GivenRecordId
				end if
				Put "CC created Successfully With RecordID"&the suitevariables.RecordId into global Vstep
				Log global Vstep
				CaptureAtLog
				return global RecordId
			else 
				put "Originator not Created Change Control" into global Vstep
				Logerror global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
		Catch theException
			Logerror theException
			W_App_CommonHandlers.CaptureAtLog
			
		End try
		
	else
		Put "Not Displayed fields are "&ErrorMessagesNotDisplayForFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
end Verify_CreateCCFields

to handle CreateReferenceRecord Reference_object_type
	try
		
		NavigateToSectionFromLeftPane "Referenced / Associated"
		wait 3
		click text:"Create",waitfor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
		(*WaitFor 120, text:"Create Change Control Reference Object",SearchRectangle:ScreenPart("Center")*)
		wait 3
		click  imagelocation(text:"Reference Object Type",waitfor:50,SearchRectangle:ScreenPart("Center"))+[200,0]
		
		Typetext Reference_object_type
		wait 2
		Typetext downArrow,return
		wait 2
		
		Typetext tabKey
		Typetext"testing"
		
		Click imageName:"RelatedProcess", waitFor:120
		wait 7
		Typetext downArrow
		
		Typetext downArrow
		Typetext downArrow,return
		wait 2
		TypeText controlKey,a
		TypeText controlKey,c
		Put RemoteClipboard() into global relatedRecordId
		//Log global relatedRecordId
		
		
		click item 2 of everyimagelocation(text:"Save",waitfor:120,SearchRectangle:ScreenPart("BottomRightQuadrant"))
		wait 5
		
		if ImageFound(text:"Reference Object Type", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "ReferenceObjectAddedSuccessfully"&global relatedRecordId into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "ReferenceObjectIsNotAddedSuccessfully"&global relatedRecordId into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
		
		ScrollWheelUp 50
		wait 2
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreateReferenceRecord

to handle CreateReferenceRecord_ALL
	CreateReferenceRecord "Change Control"
	CreateReferenceRecord "Deviation"
	CreateReferenceRecord "CAPA Program"
	CreateReferenceRecord "CAPA Item"
	CreateReferenceRecord "Complaint Assessment"
	CreateReferenceRecord "Quality Incident"
	CreateReferenceRecord "Complaint Action"
	CreateReferenceRecord "Mitigation Action"
	CreateReferenceRecord "Implementation Action"
	CreateReferenceRecord "Investigation Action"
	CreateReferenceRecord "Assesment Item"
	//CreateReferenceRecord "Activity"
end CreateReferenceRecord_ALL

//VerifyErrorPromptToAssignFunctionPostApprover
to handle VerifyErrorPromptToAssignFunctionPostApprover
	if ImageFound(text:"This record requires at least one", waitFor:30,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"user to be assigned to the Function", waitFor:30,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"approver team roles", waitFor:30,Searchrectangle:ScreenPart("Center"))
		Put "Popup displayed as Expected" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Popup not displayed as Expected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:10
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptToAssignFunctionPostApprover

//VerifyErrorPromptToAssignFunctionApprover
to handle VerifyErrorPromptToAssignFunctionApprover
	if ImageFound(text:"Function", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"approver", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"must contain users", waitFor:120,Searchrectangle:ScreenPart("Center"))
		Put "Popup displayed as Expected" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Popup not displayed as Expected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:50
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptToAssignFunctionApprover

to handle PrepareImpactAssessmentActionPlan_WithMandatoryfields
	try
		
		//Click imageName:"PrepareImpactAssessmentActionP", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global PIAverdict is "SubmitForApproval"
			
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testing"
			Typetext tabKey
			Typetext"testing"
			Typetext tabKey
			Typetext"testing"
			Typetext tabKey
			Typetext tabKey
			Typetext "Medium"
			Typetext downArrow, return
			Click imageName:"complete", waitFor:120
			put "PrepareImpactAssessmentActionPlanSuccessfullyDone" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end PrepareImpactAssessmentActionPlan_WithMandatoryfields

//FunctionApprovalOfChangeControl
to handle FunctionApprovalOfChangeControl_second
	try
		Put "Approved" into global FAverdict
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global FAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global FAusername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global FApassword
			wait 3
			Click imageName:"Complete", waitFor:120
			wait 10
			Put "FunctionApproverApprovedAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else
			Put "ApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end FunctionApprovalOfChangeControl_second

to handle FunctionApprovalOfChangeControl_second_CCPL
try
		Put "Approved" into global FAverdict
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global FAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global PFAUsername
			
			wait 3
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global PFAPassword
			wait 3
			Click imageName:"Complete", waitFor:120
			wait 10
			Put "FunctionApproverApprovedAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else
			Put "ApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try

end FunctionApprovalOfChangeControl_second_CCPL

to handle FAFinalApproval_second
	try
		Put "Approve" into global FAFinalApproveVerdict 
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		if global FAFinalApproveVerdict contains "Approve"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testingFA"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global FAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global FApassword
			wait 2
			Click imageName:"Complete", waitFor:120
			
			Put "FAFinalApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
			Log global Vstep
			CaptureAtLog
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FAFinalApproval_second

to handle AddSupplementaryInformation
	try
		wait 2
		//click text:"Supplementary Information",waitfor:120
		NavigateToSectionFromLeftPane "Supplementary Information"
		WaitFor 120, text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Supplementary Information",SearchRectangle:ScreenPart("Center")
		
		Put "Create Supplementary Information Popup should be displayed" into global Vstep
		log global Vstep
		CaptureAtLog
		click imagelocation(text:"Comments",SearchRectangle:ScreenPart("Center"))+[80,0]
		Typetext controlKey,a
		Typetext backspace
		Typetext"Test Summary"&random(0, 99)
		click item 2 of EveryImageLocation(text:"Save",SearchRectangle:ScreenPart("Center"))
		wait 5
		if ImageFound(text:"comments", waitFor:120,SearchRectangle:ScreenPart("TopHalf"))
			Put "Supplementary Information should be created in Supplementary Information section" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put "Supplementary Information not created in Supplementary Information section" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end AddSupplementaryInformation

//EditAffectedLocationType
to handle Edit_CC_GeneralInformation_Country

	Edit_CC_GeneralInformation "Affected Location Type","Country"
	
end Edit_CC_GeneralInformation_Country

to handle Edit_CC_GeneralInformation_Area

	Edit_CC_GeneralInformation "Affected Location Type","Area"
	
end Edit_CC_GeneralInformation_Area

to handle Edit_CC_GeneralInformation_Global

	Edit_CC_GeneralInformation "Affected Location Type","Global"
	
end Edit_CC_GeneralInformation_Global

to handle Edit_CC_GeneralInformation_Region

	Edit_CC_GeneralInformation "Affected Location Type","Region"
	
end Edit_CC_GeneralInformation_Region

//QualityPostApprovalOfChangeControl_withoutNextSteps
to handle QualityPostApprovalOfChangeControl_withoutNextSteps

	try
	(*		Put "Approve" into global QPAverdict
		Put "Quality.CC.1.H@sb-rb.com" into global QAusername
		Put "rbQone@1test" into global QApassword*)
		Put "No" into global QPAdemonstrateEffectiveness
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global QPAverdict contains "Approve"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			ScrollWheelDown 9
			(*TypeText tabKey*)
			Put "No" into global QPAdemonstrateEffectiveness
			///
			if global QPAdemonstrateEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("LeftHalf")
				wait 3
				
				Click imageName:"Complete", waitFor:120
				Put "QPAApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
				log global Vstep
				CaptureAtLog
			else if global QPAdemonstrateEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("LeftHalf")
				TypeText tabKey
				
				Typetext Controlkey,a
				
				Typetext Backspace
				
				Click imageName:"Complete", waitFor:120
				Put "Not able to approve without Next steps" into global Vstep		
				log global Vstep
				CaptureAtLog
				click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[100,0]
				ScrollWheelDown 9
				
				// currently the nex steps are not coming--error in application
			end if
			///
			
			
		else if global QPAverdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPARejected" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QPAverdict contains "Include"
			click text:"Include",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPAIncludeFPA" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end QualityPostApprovalOfChangeControl_withoutNextSteps

(*//QualityPostApprovalOfChangeControl_withoutNextSteps
to handle QualityPostApprovalOfChangeControl_withoutNextSteps

	try
	(*	Put "Approve" into global QPAverdict
Put "Quality.CC.1.H@sb-rb.com" into global QAusername
Put "rbQone@1test" into global QApassword
Put "Yes" into global QPAdemonstrateEffectiveness*)
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		if global QPAverdict contains "Approve"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			ScrollWheelDown 9
			(*TypeText tabKey*)
			Put "No" into global QPAdemonstrateEffectiveness
			///
			if global QPAdemonstrateEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
				wait 3
				
				Click imageName:"Complete", waitFor:120
				Put "QPAApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
				log global Vstep
				CaptureAtLog
			else if global QPAdemonstrateEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("LeftHalf")
				// currently the nex steps are not coming--error in application
				Click imageName:"Complete", waitFor:120
			end if
			///
			
			
		else if global QPAverdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPARejected" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QPAverdict contains "Include"
			click text:"Include",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestReject"
			Click imageName:"Complete", waitFor:120
			Put "QPAIncludeFPA" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end QualityPostApprovalOfChangeControl_withoutNextSteps*)

//VerifyErrorMessage_ToFillNextSteps
to handle VerifyErrorMessage_ToFillNextSteps

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Next Steps"),topleft of imageRectangle(text:"Next Steps")+[300,110]]
	if ImageFound(text:"Edit this field if Demonstrate")
		insert "Next Steps" into ErrorMessagesDisplayForFields
	else
		insert "Next Steps" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Next Steps field" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click imageName:"CompleteToCancel", waitFor:60,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyErrorMessage_ToFillNextSteps

to handle VerifyErrorMessage_ToFillNextSteps_WithoutCancel

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Next Steps"),topleft of imageRectangle(text:"Next Steps")+[300,110]]
	if ImageFound(text:"Edit this field if Demonstrate")
		insert "Next Steps" into ErrorMessagesDisplayForFields
	else
		insert "Next Steps" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Next Steps field" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	(*Click imageName:"CompleteToCancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")*)
	
end VerifyErrorMessage_ToFillNextSteps_WithoutCancel

to handle FAApproval_Verify_MandatoryFields

	try
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		
		
		if global FAFinalApproveVerdict contains "Approve"
			Click text:"Approved", waitFor:120
			
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testingFA"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global PFAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global PFApassword
			wait 2
			Click imageName:"Complete", waitFor:120
			
			Put "FAFinalApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
			Log global Vstep
			CaptureAtLog
			
			
		else if global FAFinalApproveVerdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Comments")
				insert "Comments" into MandatoryFields
			else
				insert "Comments" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 1
				Put "Comments field is Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"RejectByPFA"
			Click imageName:"Complete", waitFor:120
			Put "FAFinalapprovalRejected" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FAApproval_Verify_MandatoryFields

to handle QualityApprovalOfChangeControl_Verify_MandatoryFields
	try
		Put "Rejected" into global QAverdictt
		(*		Put "Quality.CC.1.H@sb-rb.com" into global QAusername
		Put "rbQone@1test" into global QApassword*)
		//Click imageName:"Complete", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		//log global QAverdict
		if global QAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestingApproved"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global QAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global QApassword
			wait 2
			Click imageName:"complete", waitFor:120
			Put "QAapprovedCC" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		else if global QAverdictt is "Rejected"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Comments")
				insert "Comments" into MandatoryFields
			else
				insert "Comments" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 1
				Put "Comments field is Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"TestingRejected"
			Click imageName:"complete", waitFor:120
			Put "QArejectedCC" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global QAverdict is "QAincludeFunctionApproved"
			click text:"Include",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"Testing"
			Click imageName:"complete", waitFor:120
			Put "QAIncludesFA" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		else
			Put "AllverdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityApprovalOfChangeControl_Verify_MandatoryFields

to handle ReviewTheImplementationOfTheChange_VerifyMandatoryFields

	try
		
		//Put "Complete" into global CCReviewVerdict
		Put "No" into global DMEffectiveness
		//Put "Yes" into global PFArequired
		//Click imageName:"ReviewtheImplementationoftheChange", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global CCReviewVerdict contains "Complete"
			click text:"Change Coordinator Review Complete",SearchRectangle:ScreenPart("Center")
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Post-Implementation Summary")
				insert "Post-Implementation Summary" into MandatoryFields
			else
				insert "Post-Implementation Summary" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 1
				Put "Post-Implementation Summary Field is Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Test"
			TypeText tabKey
			Typetext "TestPostImpSummary"
			ScrollWheelDown 9
			///////DemonstratesEffectiveness_Yes DemonstratesEffectiveness_No
			if global DMEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				TypeText tabKey
				Typetext Controlkey,a
				Typetext Backspace
				wait 1
				
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				
				if global PFArequired is "Yes"
					click imageName:"FunctionPostApproversRequired_1",SearchRectangle:ScreenPart("BottomHalf")
					//Click imageName:"Complete", waitFor:120
					put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					click text:"No",SearchRectangle:ScreenPart("BottomHalf")
					// to be added code
				end if
				
			end if
			
			//////////////////////
			Click imageName:"Complete", waitFor:120
		else
			Put " AllCCReviewVerdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end ReviewTheImplementationOfTheChange_VerifyMandatoryFields

to handle ReviewTheImplementationOfTheChange_VerifyFields

	try
		
		//Put "Complete" into global CCReviewVerdict
		Put "No" into global DMEffectiveness
		//Put "Yes" into global PFArequired
		//Click imageName:"ReviewtheImplementationoftheChange", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global CCReviewVerdict contains "Complete"
			click text:"Change Coordinator Review Complete",SearchRectangle:ScreenPart("Center")
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Post-Implementation Summary")
				insert "Post-Implementation Summary" into MandatoryFields
			else
				insert "Post-Implementation Summary" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 1
				Put "Post-Implementation Summary Field is Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Test"
			TypeText tabKey
			Typetext "TestPostImpSummary"
			///////DemonstratesEffectiveness_Yes DemonstratesEffectiveness_No
			if global DMEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				//TypeText tabKey
				//Typetext Controlkey,a
				//Typetext Backspace
				//TypeText "Next Steps filled"
				wait 1
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:20
					put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"PostFunctionApproversRequired_No", waitFor:120
					// to be added code
				end if
				
			end if
			
			//////////////////////
			Click imageName:"Complete", waitFor:120
		else
			Put " AllCCReviewVerdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end ReviewTheImplementationOfTheChange_VerifyFields


to handle PrepareImpactAssessmentActionPlan_Hygiene_NoFA
	try
		ScrollWheelUp 50
		//Click imageName:"PrepareImpactAssessmentActionP", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		
		if global PIAverdict is "ChangeNotRequired"
			Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
			
			typetext"testing"
			wait 2
			//Click imageName:"ReasonforClosingNotProgressed", waitFor:120
			Typetext tabKey
			//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:120
			
			wait 3
			Click text:global ReasonForClosing, waitFor:120
			
			
			wait 3
			Click imageName:"complete", waitFor:120
			
			Put "CloseChangeControlChangeNotRequired" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			
			
		else if global PIAverdict is "SubmitForApproval"
			//Log global CCGBU
			//put "Health" into global GBU
			//if global CCGBU is "Hygiene"
			click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))+[40,0] //Clicking No
			//click imagelocation(text:"No",waitfor:120,searchrectangle:ScreenPart("Center"))
			
			//end if
			
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			Typetext"testing"
			Typetext tabKey
			Typetext global conclusionSummary
			Typetext tabKey
			Typetext global ImplementationSuccessCriteria
			
			Click imageName:"complete", waitFor:120
			put "PrepareImpactAssessmentActionPlanSuccessfullyDone" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end PrepareImpactAssessmentActionPlan_Hygiene_NoFA

//CreateImplementationActivities_VerifyMandatoryFields
to handle CreateImplementationActivities_VerifyMandatoryFields

	try
		wait 3
		//Click imageName:"ImplementationActionItems", waitFor:120
		NavigateToSectionFromLeftPane "Activities"
		wait 4
		Click imageName:"CreateItem", waitFor:120
		
		Put [] into NonMandatoryFields
		Put [] into MandatoryFields

		if ImageFound(text:"Title", SearchRectangle:ScreenPart("Center"))
			insert "Title" into MandatoryFields
		else
			insert "Title" into NonMandatoryFields
		end if
		
		if ImageFound(text:"Date Due", SearchRectangle:ScreenPart("Center"))
			insert "Date Due" into MandatoryFields
		else
			insert "Date Due" into NonMandatoryFields
		end if
		
		if ImageFound(text:"Description", SearchRectangle:ScreenPart("Center"))
			insert "Description" into MandatoryFields
		else
			insert "Description" into NonMandatoryFields
		end if
		
		if number of items of MandatoryFields is 3
			Put "Title, Date Due and Description fields are Mandatory" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog		
			
		else
			Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
		end if
		
		
		//Click imageName:"Title", waitFor:120
		
		
		Click ImageLocation(text:"Date Due", waitFor:60,searchrectangle:ScreenPart("Center"))+[150,0]
		TypeText global ACTDateDue
		//TypeText"10 mar 2021"
		//Click imageName:"Ai_DateDue_outSide", waitFor:30
		
		TypeText tabKey
		TypeText "Test"
		TypeText tabKey
		TypeText "Test"
		
		Click imageName:"Save", waitFor:120
		
		Put "SuccessfullyCreatedImplementationActivity" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end CreateImplementationActivities_VerifyMandatoryFields

//VerifyAbleToAddSupplementaryInformation
to handle VerifyAbleToAddSupplementaryInformation
	
	NavigateToSectionFromLeftPane "Supplementary Information"
	if ImageFound(text:"Add",searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Add button present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Add button should not be present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	
end VerifyAbleToAddSupplementaryInformation

//CannotReopen_ClosedCompletedActivity
to handle CannotReopen_ClosedCompletedActivity
	try
		//Click imageName:"CogWheelNew", waitFor:120
		
		if ImageFound(imageName:"CancelImpactAssessment", waitFor:10,searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "ReOpen Option Is Displaying" into global Vstep
			LogError global Vstep
		else
			Put "Cannot Reopen Closed - Complete Activity" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end CannotReopen_ClosedCompletedActivity

//ImplementationActivityTobeCompleted_VerifyMandatoryFields
to handle ImplementationActivityTobeCompleted_VerifyMandatoryFields
	try
		
		//Click imageName:"ACT_ImplementationActivitytobecompleted", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		// verdict AssessmentComplete,AssessmentCancel
		//put "AssessmentComplete" into AIAssessmentVerdict
		wait 5
		if global ImplementationActivityToBeCompletedVerdict is "Activity Complete"
			wait 4
			click text:"Activity Complete",SearchRectangle:ScreenPart("Center")
			
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Summary")
				insert "Summary" into MandatoryFields
			else
				insert "Summary" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 1
				Put "Summary field is Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if	
			
			TypeText tabkey
			TypeText tabkey
			TypeText "test" --TaskCompletionSummary
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityTobeCompleted task closed complete" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global ImplementationActivityToBeCompletedVerdict is "Close action without completing"
			click text:"Close action without completing",SearchRectangle:ScreenPart("Center")
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Justification")
				insert "Justification" into MandatoryFields
			else
				insert "Justification" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Reason")
				insert "Reason" into MandatoryFields
			else
				insert "Reason" into NonMandatoryFields
			end if
			
			if number of items of MandatoryFields is 2
				Put "Justification and Reason fields are Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			typetext tabkey
			Typetext"Testing" --Justification for Closing-Incomplete
			
			typetext tabkey
			typetext "Raised in error"
			wait 4
			//typetext downArrow
			typetext downArrow, return
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityToBeCompletedVerdict task closed InComplete" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global ImplementationActivityToBeCompletedVerdict is "Request More Info / Cancellation"
			click text:"Request More Info",SearchRectangle:ScreenPart("Center")
			wait 2
			typetext tabkey
			Typetext"Testing" --Justification for Request More info
			
			Click imageName:"complete", waitFor:120
			
			Put "ImplementationActivityToBeCompletedVerdict task moved to Pending Information" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end ImplementationActivityTobeCompleted_VerifyMandatoryFields

//UpdateActivity_VerifyMandatoryFields
to handle UpdateActivity_VerifyMandatoryFields
	try
		
		wait 3
		
		//complete the Pending Assessment
		//Click imageName:"ACT_UpdateActivity", waitFor:120
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 2
		
		// verdict AssessmentComplete,AssessmentCancel
		if global UpdateActivityVerdict is "Updated & Return to Work in Progress"
			click text:"Return to Work in Progress",SearchRectangle:ScreenPart("Center")
			
			Click imageName:"complete", waitFor:120
			
			Put "Implementaion Activity moved from Pending Information to Work In Progress" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global UpdateActivityVerdict is "Cancel Activity (Closed - Cancelled)"
			click text:"Cancel Activity",SearchRectangle:ScreenPart("Center")
			
			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Justification")
				insert "Justification" into MandatoryFields
			else
				insert "Justification" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Reason")
				insert "Reason" into MandatoryFields
			else
				insert "Reason" into NonMandatoryFields
			end if
			
			if number of items of MandatoryFields is 2
				Put "Justification and Reason fields are Mandatory" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if	
			
			TypeText tabkey
			typetext "justification"
			TypeText tabkey
			typetext "Raised in error"
			typetext downArrow, Return
			
			Click imageName:"complete", waitFor:120
			
			Put "Implementation Activity Closed Cancelled successfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end UpdateActivity_VerifyMandatoryFields

to handle ReassignActivityOwnerByCurrentActivityOwner

ReassignActivityOwner
//CancelTask_FromCogWheel_WorkFlowTimeLine

end ReassignActivityOwnerByCurrentActivityOwner

to handle ReassignActivityOwner

AssignUser_Teams_verifyNewTaskUser global ActivityOwnerFirstNameofOther, "Activity Owner"

end ReassignActivityOwner

//LoginToApplication_ActivityOwner_second
to handle LoginToApplication_ActivityOwner_second

	LoginToApplication global ActivityOwnerusername_second,global ActivityOwnerpassword_second
	
end LoginToApplication_ActivityOwner_second

//VerifyIALink_withinActivity
to handle VerifyIALink_withinActivity

	if ImageFound(text:"Implementation Action ID", waitFor:120)
		put ReadText([imageLocation(text:"Implementation Action ID")+[32,-10], imageLocation(text:"Implementation Action ID")+[166,15]],validpattern:"[A-Z][A-Z]*-[0-9][0-9][0-9]*")  into global Vstep
		Log  global Vstep
		Put "Implementation Action link is present within the Activity" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Implementation Action link is not present within the Activity" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	
	
end VerifyIALink_withinActivity

//CreateDeviation_fromOtherModules
to handle CreateDeviation_fromOtherModules

	try
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		
		waitfor 120,text:"Deviation",SearchRectangle:ScreenPart("TopRightQuadrant")
		click ImageLocation(text:"Deviation",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Create"
		click ImageLocation(text:"Deviation",SearchRectangle:ScreenPart("TopRightQuadrant"))+[200,40]

		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvRelatedQMSElement
		wait 2
		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Country"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Health"
		TypeText downArrow, return
		Typetext tabKey
		Typetext tabKey
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]

		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "SKU"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		
		
		
		
		Put "OriginatorDeviationCreatedSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CreateDeviation_fromOtherModules

//UserRoleSetup_QA_CC
to handle UserRoleSetup_QA_CC

	UserRoleSetup global CCUserID,"Quality Approver"
	
end UserRoleSetup_QA_CC

//UserRoleSetup_FA_CC
to handle UserRoleSetup_FA_CC

	UserRoleSetup global CCUserID,"Function Approver"
	
end UserRoleSetup_FA_CC

//VerifyCannotRaise_ImplementationAction
to handle VerifyCannotRaise_ImplementationAction
	NavigateToImplementationAction
	CreateButtonNotAvailable
end VerifyCannotRaise_ImplementationAction

//UserRoleSetup_FA_third
to handle UserRoleSetup_FA_third
	UserRoleSetup "Health CC 1 UAT Function Approver","Function Approver" 
end UserRoleSetup_FA_third

//LoginToApplication_FA_third
to handle LoginToApplication_FA_third
	LoginToApplication "Function.cc.1.H@sb-reckitt.com","rbQone@3test"
end LoginToApplication_FA_third

//CannotCompleteTask
to handle CannotCompleteTask
	wait 3
	if ImageFound(text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "Complete button present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "Complete button should not be present in the page" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	
end CannotCompleteTask

//LoginToApplication_FA_fourth
to handle LoginToApplication_FA_fourth
	LoginToApplication "Function.cc.2.H@sb-reckitt.com","rbQone@3test"
end LoginToApplication_FA_fourth

//ReassignFAByOtherFA
to handle ReassignFAByOtherFA
	//W_App_CommonHandlers.ReassignTaskToOtherUser "Health CC 2 Function Approver"
	AssignUser_Teams_reassgnFA "Health CC 2 Function Approver" , "Function Approver"
	
end ReassignFAByOtherFA
 
to handle AssignUser_Teams_reassgnFA UserFirstName,Role
	
	try
		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,45]
		wait 5
		Typetext controlkey,a
		Typetext backspace
		Typetext backspace
		Typetext backspace
		Typetext backspace
		wait 5
		Typetext UserFirstName
		wait 5
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopHalf")
		wait 5
		//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		put Role&" Assigned successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 15
		ScrollWheelUp 50
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end AssignUser_Teams_reassgnFA

//Remove_FA_fromUsers --need to implement
to handle RemoveFA_fromUsers

	if ImageFound(text:"Function Approver", waitFor:120)
		
		Put " should be added" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put " is not added" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end RemoveFA_fromUsers

//VerifyErrorMessage_NotToAddSameUser
to handle VerifyErrorMessage_NotToAddSameUser

	//Click item 2 of everyimagelocation(text:"Save", waitFor:120)
	//if ImageFound(text:"Function", waitFor:60)and if ImageFound(Text:"Approvers")
		if ImageFound(text:"Function", waitFor:20,SearchRectangle:ScreenPart("Center")) and if ImageFound(text:"Approver", waitFor:20,SearchRectangle:ScreenPart("Center") )and if ImageFound(text:"must contain users", waitFor:20,SearchRectangle:ScreenPart("Center")) 
		Put "Error message displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	Click text:"OK", waitFor6: 60,searchrectangle:ScreenPart("BottomHalf")
	ScrollWheelUp 30
end VerifyErrorMessage_NotToAddSameUser

to handle VerifyErrorMessage_NotToAddSameUser_QA

	//Click item 2 of everyimagelocation(text:"Save", waitFor:120)

		if ImageFound(text:"Quality", waitFor:20,SearchRectangle:ScreenPart("Center")) and if ImageFound(text:"Approvers", waitFor:20,SearchRectangle:ScreenPart("Center") )and if ImageFound(text:"must contain users", waitFor:20,SearchRectangle:ScreenPart("Center")) 
		Put "Error message displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	Click text:"OK", waitFor6: 60,searchrectangle:ScreenPart("BottomHalf")
	ScrollWheelUp 30
end VerifyErrorMessage_NotToAddSameUser_QA

//VerifyErrorPromptForNotRaising_AI
to handle VerifyErrorPromptForNotRaising_AI
	if ImageFound(text:"Validate that: Assessment Items:", waitFor:20,searchrectangle:ScreenPart("Center"))and if ImageFound(text:"At least one", waitFor:20,searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"record exists", waitFor:20,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:10
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptForNotRaising_AI

//VerifyErrorPromptForNotClosing_AI
to handle VerifyErrorPromptForNotClosing_AI
	if ImageFound(text:"Validate that: Assessment Items:", waitFor:20,searchrectangle:ScreenPart("Center"))and if ImageFound(text:"At least one", waitFor:20,searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"record equals Closed - Complete", waitFor:20,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end VerifyErrorPromptForNotClosing_AI

//PrepareImpactAssessmentActionPlan_VerifyMandatoryFields
to handle PrepareImpactAssessmentActionPlan_VerifyMandatoryFields
	//Click imageName:"complete", waitFor:120
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	
	//if global PIAverdict is "ChangeNotRequired"
	Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
	wait 2
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Justification")
		insert "Justification" into MandatoryFields
	else
		insert "Justification" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Reason")
		insert "Reason" into MandatoryFields
	else
		insert "Reason" into NonMandatoryFields
	end if
	
	if number of items of MandatoryFields is 2
		Put "Justification and Reason fields are Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	//end if
	
end PrepareImpactAssessmentActionPlan_VerifyMandatoryFields


to handle PrepareImpactAssessmentActionPlan_Verdict
	try
		click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
		
		typetext"testing"
		wait 2
		//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
		Typetext tabKey
		//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
		
		wait 3
		Typetext global ReasonForClosing
		Typetext downArrow, return
		wait 10
		CaptureAtLog
		Click imageName:"complete", waitFor:50
		wait 10
		CaptureAtLog
		Put "CloseChangeControlChangeNotRequired" into global Vstep
		Log global Vstep
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end PrepareImpactAssessmentActionPlan_Verdict

to handle PrepareImpactAssessmentActionPlan_Verdict_CCPL
try
		click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("BottomHalf"))+[120,30]
		
		typetext"testing"
		wait 2
		//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
		Typetext tabKey
		//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
		
		wait 3
		Typetext global ReasonForClosing
		Typetext downArrow, return
		wait 10
		CaptureAtLog
		Click imageName:"complete", waitFor:50
		wait 10
		CaptureAtLog
		Put "CloseChangeControlChangeNotRequired" into global Vstep
		Log global Vstep
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
 end PrepareImpactAssessmentActionPlan_Verdict_CCPL
 
 to handle PrepareImpactAssessmentActionPlan_Verdict_CCPL_withoutFA
 try
		click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("BottomHalf"))+[120,30]
		
		typetext"testing"
		wait 2
		//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
		Typetext tabKey
		//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
		
		wait 3
		Typetext global ReasonForClosing
		Typetext downArrow, return
		wait 10
		CaptureAtLog
		Click imageName:"complete", waitFor:50
		wait 10
		CaptureAtLog
		Put "CloseChangeControlChangeNotRequired" into global Vstep
		Log global Vstep
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
 end PrepareImpactAssessmentActionPlan_Verdict_CCPL_withoutFA
to handle CreateCC_Hygiene
	(*try
		wait 3
		Click imageName:"CreateButton", waitFor:120
		if ImageFound(imageName:"Title", waitFor:120)
			Put "CreateCCPageIsDisplaying" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "CreateCCPageIsNotDisplaying" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if
		
		
		
		Click imageName:"Title", waitFor:120
		//TypeText global CCshortDescription
		Typetext"testSD"
		Click imageName:"CC_GlobalBusinessUnit", waitFor:120
		Click text:"Hygiene",SearchRectangle:["CC_GlobalBusinessUnit_UL","CC_GlobalBusinessUnit_BR"],waitfor:120
		Click imageName:"CC_GlobalBusinessUnit_outSide", waitFor:120
		Click imageName:"CC_ChangeType", waitFor:120
		Typetext global CCChangeType
		
		Click imageName:"CC_ChangeType_1stItem", waitFor:120
		
		wait 2
		Put "health" into global CCReasonDrivers
		Click imageName:"CC_ReasonsDriversforChange", waitFor:120
		TypeText global CCReasonDrivers
		TypeText downArrow, return
		
		(*	Click imageName:"CC_ReasonsDriversforChange_1stItem", waitFor:20*)
		Click imageName:"CC_GlobalBusinessUnit_outSide", waitFor:120
		(*Click imageName:"CC_ImpactedLocations", waitFor:30
TypeText global CCImpactedLocation
Click imageName:"CC_ImpactedLocations_Item1", waitFor:120*)
		Click imageName:"CC_DetailedDescription", waitFor:120
		TypeText global CCDetailedDescription
		Click imageName:"CC_ChangeJustification", waitFor:120
		Typetext global CCChangeJustification
		Typetext tabKey
		Typetext "Site"
		Typetext downArrow, return
		(*// select due date in calender
put the long date + 1 weeks into DueDateFull
//Log DueDateFull --Wednesday, January 14, 2021
Put item 2 of DueDateFull into MonthDate
//log MonthDate
split MonthDate by " "
put item 2 of MonthDate into MonthNameFull
//Log MonthNameFull
put item 3 of MonthDate into DueDay
//Log DueDay
Put chars 1 to 3 of MonthNameFull into MonthName3Char
//Log MonthName3Char
if ImageFound(text:MonthName3Char, waitFor:120,SearchRectangle:("W_CC_Month_UL","W_CC_Month_BR"))
click (text:DueDay,SearchRectangle:("W_CC_Calendar_UL","W_CC_Calendar_BR"))
else
Click imageName:"W_CC_NextMonthButton", waitFor:120,SearchRectangle:("W_CC_Month_UL","W_CC_Month_BR")
wait 2
click (text:DueDay,SearchRectangle:("W_CC_Calendar_UL","W_CC_Calendar_BR"))

end if*)
		
		// enter due date (input: 12 Jan 2021 DD MMM YYYY)
		Click imageName:"CC_DateDue", waitFor:120
		TypeText global CCDateDue
		Click imageName:"CC_DateDue_outSide", waitFor:120
		
		Click imageName:"ProductIMaterialBrandSpecific", waitFor:120
		click ImageLocation(text:"Product / Material",searchrectangle:ScreenPart("TopRightQuadrant"))+[120,20]
		
		(*		Click imageName:"BusinessFunction", waitFor:120
		TypeText global CCReasonDrivers
		TypeText downArrow, return*)
		Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		wait 2
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return
		// fastSku
		if ImageFound(imageName:"CC_CRNumber", waitFor:120)
			click FoundImageLocation()
			TypeText "CR"&random(0, 999)
		end if
		// click save button
		Click imageName:"SaveButton", waitFor:120
		wait 12
		// read record ID
		(*put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId*)
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		Put "CCcreatedSuccessfullyWithRecordID"&the suitevariables.RecordId into global Vstep
		Log global Vstep
		CaptureAtLog
		return global RecordId
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try*)
	
	
	
	try
	(*put "test123" into global  CCshortDescription
		put "20 Apr 2021" into global CCDateDue
		put "Health" into global CCGBU
		put "Artwork"into global CCChangeType
		put "Health" into global CCReasonDrivers
		put "Country" into global  CCImpactedLocation*)
		
		Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		waitfor 120,text:"Title",searchrectangle:ScreenPart("Center")
		Put "Create Change Control page should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[150,0]
		//typetext global  CCshortDescription
		Typetext "Test"
		Click ImageLocation(text:"Date Due")+[150,0]
		typetext global  CCDateDue
		typetext tabKey
		Click ImageLocation(text:"Global Business Unit(s)")+[150,0]
		typetext  "Hygiene"
		Click ImageLocation(text:"Global Business Unit(s)")+[130,22]
		// click out side the location
		Click ImageLocation(text:"Global Business Unit(s)")+[0,30]
		typetext tabkey
		
		click imagelocation(text:"Change Type")+[85,0]
		typetext  global  CCChangeType
		click imagelocation(text:"Change Type")+[74,27]
		// click out side the loc
		//click imagelocation(text:"Change Type")
		
		
		click imagelocation(text:"Reason(s)")+[200,0]
		typetext  global  CCReasonDrivers
		Click imagelocation(text:"Reason(s)")+[190,20]
		// click out side the loc
		click imagelocation(text:"Reason(s)")
		typetext tabkey
		
		click ImageLocation(text:"Detailed Description")+[100,0]
		typetext "testing"
		typetext tabkey
		
		click ImageLocation(text:"Change Justification")+[100,0]
		typetext "testing"
		typetext tabkey
		
		Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 1
		Typetext controlKey,a
		Typetext backspace
		wait 1
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return
		
		
		click ImageLocation(text:"Affected Location Type")+[112,0]
		wait 1
		Typetext controlkey,a
		Typetext backspace
		//typetext global  CCImpactedLocation
		typetext "Country"
		wait 1
		Typetext downarrow,return
		
		//uat
		(*Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 1
		Typetext controlKey,a
		Typetext backspace
		wait 1
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return*)
		
		
		click ImageLocation(text:"Brand Specific",ScreenPart:("RightHalf"))+[200,0]
		Typetext "sku specific"
		wait 2
		Typetext return
		click imagelocation(text:"External References",seaechrectangle:ScreenPart("RightHalf"),waitfor:120)+(200,0)
		Typetext"https://login.veevavault.com/auth/login"
		Put "Entered Details in Create change control page" into global Vstep
		Log global Vstep
		CaptureAtLog
		click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		NavigateToSectionFromLeftPane "General Information"
		if ImageFound(text:"General Information",waitFor:120,searchrectangle:ScreenPart("LeftHalf"))
		
			//read recordid
			
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
			//Log  global VRecordId
			If global GivenRecordId is ""
				set the suitevariables.RecordId to global VRecordId
			else
				set the suitevariables.RecordId to global GivenRecordId
			end if
			Put "CC created Successfully With RecordID"&the suitevariables.RecordId into global Vstep
			Log global Vstep
			CaptureAtLog
			return global RecordId
		else 
			put "Originator not Created Change Control" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end CreateCC_Hygiene

to handle AssignToChangeCordinator_Cancel
	try
		wait 3
		Click imageName:"CancelImpactAssessment", waitFor:120
		click imagelocation(text:"Cancel",waitfor:60,searchrectangle:ScreenPart("Center"))+[40,0]
		wait 8
		Put "OriginatorCancelCC" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end AssignToChangeCordinator_Cancel


// create Implementation Action
to handle CreateIA_VerifyDateDue
	try
		wait 3
		Click imageName:"ImplementationActionItems", waitFor:120
		wait 4
		Click imageName:"CreateItem", waitFor:120
		Click imagelocation(text:"Title", waitFor:120,searchrectangle:ScreenPart("Center"))+[80,0]
		TypeText "Test"
		TypeText tabKey
		TypeText "Test"
		
		//Click imageName:"Ai_DateDue", waitFor:120
		//Typetext"Testing"
		
		//Click ImageLocation(text:"Date Due")+[150,0]
		Click ImageLocation(text:"Date Due", waitFor:60,searchrectangle:ScreenPart("Center"))+[100,0]
		TypeText global IADateDue
		//typetext "15 Aug 2021"
		Click ImageLocation(text:"Date Due")+[100,0]
		Click imageName:"Save", waitFor:120
		Put "DateDueVerifiedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end CreateIA_VerifyDateDue

//VerifyErrorMessage_ToFillNextSteps
to handle VerifyErrorMessage_ToFillReasonAndJustification

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyErrorMessage_ToFillReasonAndJustification

//CM_DateDueExtension_withoutVerification
to handle CM_DateDueExtension_withoutVerification

	try
		NavigateToSectionFromLeftPane"General Information"
		put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		Log ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendments"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 10
		// Put "29 Mar 2021" into NewDateDue
		put "DateDueExtensionCreatedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try	
	
end CM_DateDueExtension_withoutVerification

to handle CM_DateDueExtension_withoutVerification_CCPL

	try
		NavigateToSectionFromLeftPane"General Information"
		//put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
          put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center") )+[10,0],ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue	
	Log ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into global NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendments"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext global NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 10
		// Put "29 Mar 2021" into NewDateDue
		put "DateDueExtensionCreatedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try	
	
end CM_DateDueExtension_withoutVerification_CCPL

//VerifyDateDutChanged_From_and_To
to handle VerifyDateDutChanged_From_and_To
     log global NewDateDue
	click ImageLocation(text:"Date Due Changed to")
	if ImageFound(text: global NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
		put "DateDueExtensionUpdatedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		put "DateDueExtensionUpdatedUnSuccessfully" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	
	ScrollWheelUp 50
	
end VerifyDateDutChanged_From_and_To

to handle SubmitActionForApproval_Hygiene
	try
		//Click imageName:"IA_Submitactionforpreapproval", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		Put "No" into global FA_Require_Not
		
		if global SubmitActionForPreApproval_Verdict is "Submit action for pre-approval"
			//click text:"Submit action for pre-approval",SearchRectangle:ScreenPart("Center")
			Click item 2 of everyimagelocation(text:"Submit action for pre-approval", waitFor:50,searchrectangle:ScreenPart("Center"))
			wait 2
			if global FA_Require_Not is "Yes"
				click text:"Yes"
			else
				//click imageName:"No"
				click imagelocation(text:"Yes", waitFor:100,SearchRectangle:ScreenPart("Center"))+[40,0](*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			end if
			Click imageName:"Complete", waitFor:120
			
			Put "SubmitActionForPreApprovalMovesToPre-Approval " into global Vstep
			Log global Vstep
			CaptureAtLog
			//IA verdict closed Cancelled		
		else  
			Click text:"Cancel Action", waitFor:120
			TypeText tabKey, waitFor: 120
			TypeText "test"
			TypeText tabKey
			TypeText "Raised in error"
			TypeText downArrow, return
			
			
			Click item2 of EveryImageLocation("Complete"), waitFor: 120
			Put "CancelActionForPreApprovalMovesToClosedCancelled " into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
end SubmitActionForApproval_Hygiene

//ImplementtheChange_Hygiene
to handle ImplementtheChange_Hygiene
	try
		
		if global ImplementtheChangeVerdict contains "Close CC"
			Click text:"Close CC", waitFor:50,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"Testing"
			Typetext tabkey
			wait 1
			Typetext"Change no longer required"
			wait 1
			Typetext downArrow
			typetext return
			put "No" into global FunctionPostApproverRequired
			Set the searchrectangle to [bottomLeft of ImageRectangle(text:"Function Post",SearchRectangle:ScreenPart("BottomHalf")),RemoteScreenSize()]
			If global PFArequired is "Yes"
				Click text:"Yes", waitFor:120
			else
				Click text:"No", waitFor:120
			End If
			Set the searchrectangle to []
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			Put "ImplementTheChangeTaskCompletedWithClosedCC" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog					
			
			
		else
			Put "AllverdictOptionsAreNotAvailableInImplementTheChangeTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
end ImplementtheChange_Hygiene

//EditPostImplementationReview
to handle EditPostImplementationReview

	NavigateToSectionFromLeftPane"Post-Implementation Review"
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Post-Implementation",SearchRectangle:ScreenPart("LeftHalf")
	
	click ImageLocation(text:"Post-Implementation Summary",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
	Typetext "Test"
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	Put "PostImplementationReview field is update" into global Vstep
	Log global Vstep
	CaptureAtLog
	
end EditPostImplementationReview

//CC: ReviewTheImplementationOfTheChange_withoutPostImplementationSummary
to handle ReviewTheImplementationOfTheChange_withoutPostImplementationSummary
	try
	(*		Put "Complete" into global CCReviewVerdict
		Put "Yes" into global DMEffectiveness*)
		(*Put "Yes" into global PFArequired*)
		//Click imageName:"ReviewtheImplementationoftheChange", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		if global CCReviewVerdict contains "Return"
			click text:"Return",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"TestingReturn"
			Click imageName:"Complete", waitFor:120
			Put "SuccessfullyReturnReviewTheImplementationOfTheChange" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
			
		else if global CCReviewVerdict contains "Complete"
			click text:"Change Coordinator Review Complete",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText "Test"
			TypeText tabKey
			TypeText "PostImplementationSummary"
			///////DemonstratesEffectiveness_Yes DemonstratesEffectiveness_No
			if global DMEffectiveness is "Yes"
				click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
				wait 3
				ScrollWheelDown 9
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:120
					put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"PostFunctionApproversRequired_No", waitFor:120
					// to be added code
				end if
				//
			else if global DMEffectiveness is "No"
				click text:"No",SearchRectangle:ScreenPart("BottomHalf")
				//PostFunctionApproversRequired_yes PostFunctionApproversRequired_No
				if global PFArequired is "Yes"
					Click imageName:"FunctionPostApproversRequired", waitFor:120
					//Click imageName:"Complete", waitFor:120
					Put "CompleteReviewTheImplementationChangeWithPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
					
				else if global PFArequired is "No"
					Click imageName:"PostFunctionApproversRequired_No", waitFor:120
					wait 3
					//Click imageName:"Complete", waitFor:120
					Put "CompleteReviewTheImplementationChangeWithoutPFA" into global Vstep
					Log global Vstep
					CaptureAtLog
				end if
				//
			end if
			//////////////////////
			Click imageName:"Complete", waitFor:120
		else
			Put " AllCCReviewVerdictOptionsAreNotAvailable" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end ReviewTheImplementationOfTheChange_withoutPostImplementationSummary

//VerifyNextStepsPrePopulatedText
to handle VerifyNextStepsPrePopulatedText

	Put () into DataNotDisplayed
	Put () into DataDisplayed
	Set the searchrectangle to [topleft of imageRectangle(text:"Next Steps"),topleft of imageRectangle(text:"Next Steps")+[400,110]]
	if ImageFound(text:"Only required if Demonstrates Effectiveness? (Post Appr.) is No")
		insert "Next Steps" into DataDisplayed
	else
		insert "Next Steps" into DataNotDisplayed
	end if
	
	Set the searchrectangle to ()
	
	if number of items of DataDisplayed is 1
		Put "Text is Pre-populated" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Text is not Pre-populated for "&DataNotDisplayed&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyNextStepsPrePopulatedText

//VerifyNextStepsPrePopulatedText_CCReview
to handle VerifyNextStepsPrePopulatedText_CCReview

	Put () into DataNotDisplayed
	Put () into DataDisplayed
	Set the searchrectangle to [topleft of imageRectangle(text:"Next Steps"),topleft of imageRectangle(text:"Next Steps")+[400,110]]
	if ImageFound(text:"Only required if Demonstrates Effectiveness? (Post Imp.) is No")
		insert "Next Steps" into DataDisplayed
	else
		insert "Next Steps" into DataNotDisplayed
	end if
	
	Set the searchrectangle to ()
	
	if number of items of DataDisplayed is 1
		Put "Text is Pre-populated" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Text is not Pre-populated for "&DataNotDisplayed&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyNextStepsPrePopulatedText_CCReview

//FAFinalApproval_withoutComments
to handle FAFinalApproval_withoutComments
	try
		//Click imageName:"Complete", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 5
		if global FAFinalApproveVerdict contains "Approve"
			Click text:"Approved", waitFor:120
			TypeText tabKey
			Typetext"testingFA"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText global PFAusername
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText global PFApassword
			wait 2
			Click imageName:"Complete", waitFor:120
			
			Put "FAFinalApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
			Log global Vstep
			CaptureAtLog
			
			
		else if global FAFinalApproveVerdict contains "Reject"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			Click imageName:"Complete", waitFor:120
			Put "FAFinalapprovalRejected without Comments" into global Vstep
			Log global Vstep
			CaptureAtLog
			
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FAFinalApproval_withoutComments

//VerifyErrorMessage_ToFillComments
to handle VerifyErrorMessage_ToFillComments

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Comments"),topleft of imageRectangle(text:"Comments")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Comments" into ErrorMessagesDisplayForFields
	else
		insert "Comments" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end VerifyErrorMessage_ToFillComments
DevFetchingDataForUAT
QualityPostApprovalOfChangeControl_withoutComments
to handle QualityPostApprovalOfChangeControl_withoutComments

	try
		
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 15
		
		click text:"Rejected",SearchRectangle:ScreenPart("Center")
		Click imageName:"Complete", waitFor:120
		wait 10
		Put "QPARejected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityPostApprovalOfChangeControl_withoutComments



//QualityPostApprovalOfCC_OldQA_VerifyVerdicts
to handle QualityPostApprovalOfCC_OldQA_VerifyVerdicts

SearchRecord
	try
		
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:120
		//Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		if ImageFound(text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "Approve and Reject options are present" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		else
			Put "Approve and Reject options are not present" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityPostApprovalOfCC_OldQA_VerifyVerdicts

//QualityPostApprovalOfCC_Verdict
to handle QualityPostApprovalOfCC_Verdict

	try
		
		(*click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
		Typetext"testing"*)
		Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
		TypeText global QAusername
		
		wait 2
		//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
		TypeText tabKey
		TypeText global QApassword
		wait 2
		ScrollWheelDown 9
		(*TypeText tabKey*)
		Put "Yes" into global QPAdemonstrateEffectiveness
		///
		if global QPAdemonstrateEffectiveness is "Yes"
			click text:"Yes",SearchRectangle:ScreenPart("BottomHalf")
			wait 3
			
			Click imageName:"Complete", waitFor:120
			Put "QPAApproved" into global Vstep ---need to verify state:CLOSEDIMPLEMENTED
			log global Vstep
			CaptureAtLog
		else if global QPAdemonstrateEffectiveness is "No"
			click text:"No",SearchRectangle:ScreenPart("BottomHalf")
			// currently the nex steps are not coming--error in application
		end if
		///	
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end QualityPostApprovalOfCC_Verdict

//QualityPostApprovalOfCC_Complete
to handle QualityPostApprovalOfCC_Complete

	//Click imageName:"QualityPostApprovalofChangeControl", waitFor:120
	Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
	
	if global QPAverdict contains "Approve"
		Click text:"Approved", waitFor:120
		ScrollWheelDown 30
		(*VerifyNextStepsPrePopulatedText*)
		if ImageFound(imageName:"OnlyrequiredifDemonstratesEffe")
Put "Text is Pre-populated" into global Vstep

Log global Vstep
else
Put "Text is not Pre-populated for " into global Vstep

Logerror global Vstep
end if
		(*Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")*)
		
	end if
	
end QualityPostApprovalOfCC_Complete

//EditImpactAssessmentOutput_withoutJustification
to handle EditImpactAssessmentOutput_withoutJustification
	try
		
		(*		Put "Built-In" into global FormalRiskAssessmentRequired
		Put "Low" into global OverAllRisk*)
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf")
		click ImageLocation(text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		Typetext controlKey,a
		Typetext backspace
		Typetext "Test"
		
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		(*Typetext global FormalRiskAssessmentRequired
		Typetext downArrow, return*)
		wait 2
		// deleting previous value
		set the SearchRectangle to  [ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-5],ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[700,150]]

		repeat 3 times
			if ImageFound(image:"RiskAssessmentClosebutton")
				click FoundImageLocation()
				
			end if
			wait 1
		end repeat
		set the SearchRectangle to []

    
		click text:global FormalRiskAssessmentRequired,SearchRectangle:ScreenPart("LeftHalf")
		wait 2
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-20]
		
		click ImageLocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("RightHalf"))+[200,2]
		Typetext controlKey,a
		Typetext backspace
			
			wait 2
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[200,1]
		wait 1
		//OverAllRisk
		Typetext controlKey,a
		Typetext backspace
		click text:global OverAllRisk,SearchRectangle:ScreenPart("RightHalf")
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[0,-21]
		wait 5
		
		click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		wait 5
		VerifyErrorMessage_ToFillJustification
		(*
		if ImageFound(imageName:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "ImpactAssessmentOutPutEditedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "ImpactAssessmentOutPutNotEditedSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if*)
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end EditImpactAssessmentOutput_withoutJustification

//VerifyErrorMessage_ToFillJustification
to handle VerifyErrorMessage_ToFillJustification

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	wait 5
	if ImageFound(text:"Required field")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Justification field" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if 
	Click text:"Cancel", waitFor:60,searchrectangle:ScreenPart("TopRightQuadrant")
	Click ImageName:"Continue", waitFor:60,searchrectangle:ScreenPart("BottomHalf")
end VerifyErrorMessage_ToFillJustification
to handle Navigate_and_EditImpactAssessmentOutput_Justification
NavigateToImpactAssessmentOutputSection
EditImpactAssessmentOutput
end Navigate_and_EditImpactAssessmentOutput_Justification
//EditImpactAssessmentOutput_Justification
to handle EditImpactAssessmentOutput_Justification

	if global FormalRiskAssessmentRequired is "No Risk Assessment Required"
		click ImageLocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		Typetext "Test"
		wait 2
		
		if ImageFound(text:"No Risk Assessment Required")
			Put "Formal RiskAssessment Required field is updated " into global Vstep
			Log global Vstep		
			CaptureAtLog
		else
			Put "Formal RiskAssessment Required field is not updated" into global Vstep
			LogError global Vstep		
			CaptureAtLog
		end if
	end if
	
end EditImpactAssessmentOutput_Justification

//Verify_MileStoneFields
to handle Verify_MileStoneFields
	NavigateToSectionFromLeftPane "Key Milestones"
	
	Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Create Milestone",searchrectangle:ScreenPart("Center")
	
	
	Put [] into NotDisplayedFields
	Put [] into DisplayedFields

	if ImageFound(text:"Description",searchrectangle:ScreenPart("Center"))
		insert "Description" into DisplayedFields
	else
		insert "Description" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Date Due",SearchRectangle:ScreenPart("Center"))
		insert "Date Due" into DisplayedFields
		
	else
		insert "Date Due" into NotDisplayedFields
	end if
	
	
	if number of items of DisplayedFields is 2
		Put "Fields are Displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Not Displayed fields are "&ErrorMessagesNotDisplayForFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
end Verify_MileStoneFields
ChangeControlUATFetchingData
Verify_MileStone_Create
to handle Verify_MileStone_Create

	try
		
		click ImageLocation(text:"Description",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global MilestoneDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,100]
		wait 1
		click item 2 of everyimagelocation( text:"Save",waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "MileStone Created successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Verify_MileStone_Create

//Verify_CreateCCFields
to handle Verify_CCFields
	SelectingQMSProcess
	Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
	
	
	Put [] into NotDisplayedFields
	Put [] into DisplayedFields

	if ImageFound(text:"Title")
		insert "Title" into DisplayedFields
	else
		insert "Title" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Global Business Unit(s)")
		insert "Global Business Unit(s)" into DisplayedFields
		
	else
		insert "Global Business Unit(s)" into NotDisplayedFields
	end if
	
	if ImageFound(text:"e-commerce")
		insert "e-commerce" into DisplayedFields
		
	else
		insert "e-commerce" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Change Type")
		insert "Change Type" into DisplayedFields
		
	else
		insert "Change Type" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Reason(s)")
		insert "Reason(s) / Driver(s)" into DisplayedFields
		
	else
		insert "Reason(s)/Driver(s)" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Justification")
		insert "Justification" into DisplayedFields
		
	else
		insert "Justification" into NotDisplayedFields
	end if
	
	if ImageFound(text:"Detailed description")
		insert "Detailed description" into DisplayedFields
		
	else
		insert "Detailed description" into NotDisplayedFields
	end if
	
	if ImageFound(text:"External References")
		insert "External References" into DisplayedFields
		
	else
		insert "External References" into NotDisplayedFields
	end if
	
	
	if number of items of DisplayedFields is 8
		Put "Fields are Displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
		
	else
		Put "Not Displayed fields are "&ErrorMessagesNotDisplayForFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
end Verify_CCFields

//Verify_CreateCCFields_DateDue
to handle Verify_CreateCCFields_DateDue

	if ImageFound(text:"Date Due")
		insert "Date Due" into DisplayedFields
		
	else
		insert "Date Due" into NotDisplayedFields
	end if
	
	if number of items of DisplayedFields is 1
		Put "Date Due field is Displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
		
	else
		Put "Date Due field is not Displayed " into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
end Verify_CreateCCFields_DateDue

ChangeControlUATFetchingData
Verify_CC_Create
to handle Verify_CC_Create

	
	(*try
		Click imageName:"Title", waitFor:120
		//TypeText global CCshortDescription
		Typetext"testSD"
		Click imageName:"CC_GlobalBusinessUnit", waitFor:120
		Click text: global CCGBU,SearchRectangle:("CC_GlobalBusinessUnit_UL","CC_GlobalBusinessUnit_BR"),waitfor:50
		Click imageName:"CC_GlobalBusinessUnit_outSide", waitFor:120
		Click imageName:"CC_ChangeType", waitFor:120
		Typetext global CCChangeType
		
		Click imageName:"CC_ChangeType_1stItem", waitFor:120
		
		wait 2
		Put "health" into global CCReasonDrivers
		Click imageName:"CC_ReasonsDriversforChange", waitFor:120
		TypeText global CCReasonDrivers
		TypeText downArrow, return
		
		
		Click imageName:"CC_GlobalBusinessUnit_outSide", waitFor:120
		
		Click imageName:"CC_DetailedDescription", waitFor:120
		TypeText global CCDetailedDescription
		Click imageName:"CC_ChangeJustification", waitFor:120
		Typetext global CCChangeJustification
		Typetext tabKey
		Typetext "Country"
		Typetext downArrow, return
		
		Click imageName:"CC_DateDue", waitFor:120
		TypeText global CCDateDue
		Click imageName:"CC_DateDue_outSide", waitFor:120
		
		Click imageName:"ProductIMaterialBrandSpecific", waitFor:120
		click ImageLocation(text:"Product / Material",searchrectangle:ScreenPart("TopRightQuadrant"))+[120,20]
		
		(*		Click imageName:"BusinessFunction", waitFor:120
		TypeText global CCReasonDrivers
		TypeText downArrow, return*)
		
		// fastSku
		if ImageFound(imageName:"CC_CRNumber", waitFor:120)
			click FoundImageLocation()
			TypeText "CR"&random(0, 999)
		end if
		// click save button
		Click imageName:"SaveButton", waitFor:120
		wait 12
		// read record ID
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
		Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		Put "CCcreatedSuccessfullyWithRecordID"&the suitevariables.RecordId into global Vstep
		Log global Vstep
		CaptureAtLog
		return global RecordId
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try*)
	
	
	
	try
	(*put "test123" into global  CCshortDescription
		put "20 Apr 2021" into global CCDateDue
		put "Health" into global CCGBU
		put "Artwork"into global CCChangeType
		put "Health" into global CCReasonDrivers
		put "Country" into global  CCImpactedLocation*)
		
		Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		waitfor 120,text:"Title",searchrectangle:ScreenPart("Center")
		Put "Create Change Control page should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[150,0]
		//typetext global  CCshortDescription
		Typetext "Test"
		Click ImageLocation(text:"Date Due")+[150,0]
		typetext global  CCDateDue
		typetext tabKey
		Click ImageLocation(text:"Global Business Unit(s)")+[150,0]
		typetext  global  CCGBU
		Click ImageLocation(text:"Global Business Unit(s)")+[130,22]
		// click out side the location
		Click ImageLocation(text:"Global Business Unit(s)")+[0,30]
		typetext tabkey
		
		click imagelocation(text:"Change Type")+[85,0]
		typetext  global  CCChangeType
		click imagelocation(text:"Change Type")+[74,27]
		// click out side the loc
		//click imagelocation(text:"Change Type")
		
		
		click imagelocation(text:"Reason(s)")+[200,0]
		typetext  global  CCReasonDrivers
		Click imagelocation(text:"Reason(s)")+[190,20]
		// click out side the loc
		click imagelocation(text:"Reason(s)")
		typetext tabkey
		
		click ImageLocation(text:"Detailed Description")+[100,0]
		typetext "testing"
		typetext tabkey
		
		click ImageLocation(text:"Change Justification")+[100,0]
		typetext "testing"
		typetext tabkey
		
		
		
		
		click ImageLocation(text:"Affected Location Type")+[112,0]
		wait 2
		Typetext controlkey,a
		Typetext backspace
		//typetext global  CCImpactedLocation
		typetext "Country"
		wait 2
		Typetext downarrow,return
		
		//uat
		Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 1
		Typetext controlKey,a
		Typetext backspace
		wait 1
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return
		
		
		click ImageLocation(text:"Brand Specific",ScreenPart:("RightHalf"))+[200,0]
		Typetext "sku specific"
		wait 2
		Typetext return
		click imagelocation(text:"External References",seaechrectangle:ScreenPart("RightHalf"),waitfor:30)+(200,0)
		Typetext"https://login.veevavault.com/auth/login"
		Put "Entered Details in Create change control page" into global Vstep
		Log global Vstep
		CaptureAtLog
		click item 2 of EveryImageLocation(text:"Save",searchrectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		if ImageFound(text:"General Information",waitFor:120,searchrectangle:ScreenPart("LeftHalf"))
			NavigateToSectionFromLeftPane"General Information"
			//read recordid
			
			//put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
			//Log  global VRecordId
			If global GivenRecordId is ""
				set the suitevariables.RecordId to global VRecordId
			else
				set the suitevariables.RecordId to global GivenRecordId
			end if
			Put "CC created Successfully With RecordID"&the suitevariables.RecordId into global Vstep
			Log global Vstep
			CaptureAtLog
			return global RecordId
		else 
			put "Originator not Created Change Control" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end Verify_CC_Create

//CreateCC_TemporaryChange
to handle CreateCC_TemporaryChange

	Click imageName:"TemporaryChange", WaitFor:120
	TypeText tabKey
	TypeText "24 Nov 2021"
	Click imageName:"TemporaryChange", WaitFor:120
	
	if ImageFound(text:"24 Nov 2021")
		Put "Temporary change field is filled" into global Vstep
		Log global Vstep		
		CaptureAtLog
	else
		Put "Temporary change field is not filled" into global Vstep
		LogError global Vstep		
		CaptureAtLog
	end if
	
end CreateCC_TemporaryChange

//VerifyAffectedLocationFieldValues
to handle VerifyAffectedLocationFieldValues

	Click text:"+ Create", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	Click imageName:"AffectedLocationType", WaitFor:120
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Affected Location Type"),topleft of imageRectangle(text:"Affected Location Type")+[400,200]]
	if ImageFound(text:"Site") and if ImageFound(text:"Country") and if ImageFound(text:"Area") and if ImageFound(text:"Global") and if ImageFound(text:"Region")
		Put "Values are displayed for Affected Location Type field" into global Vstep
		Log global Vstep		
		CaptureAtLog
	else
		Put "Values are not displayed for Affected Location Type field" into global Vstep
		LogError global Vstep		
		CaptureAtLog
	end if
	
	Set the searchrectangle to ()
	
	
end VerifyAffectedLocationFieldValues

//FillAffectedLocationInformationField
to handle FillAffectedLocationInformationField

	Typetext "Site"
	Typetext downArrow, return
	
	if ImageFound(text:"Site")
		Put "Site is displayed for Affected Location Type field" into global Vstep
		Log global Vstep		
		CaptureAtLog
	else
		Put "Site is not displayed for Affected Location Type field" into global Vstep
		LogError global Vstep		
		CaptureAtLog
	end if
	
end FillAffectedLocationInformationField

//CreateCC_withoutAffectedLocation
to handle CreateCC_withoutAffectedLocation

	try
		(*Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")*)
		waitfor 120,text:"Title",searchrectangle:ScreenPart("Center")
		Put "Create Change Control page should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[150,0]
		//typetext global  CCshortDescription
		Typetext "Test"
		Click ImageLocation(text:"Date Due")+[150,0]
		typetext global  CCDateDue
		typetext tabKey
		Click ImageLocation(text:"Global Business Unit(s)")+[150,0]
		typetext  global  CCGBU
		Click ImageLocation(text:"Global Business Unit(s)")+[130,22]
		// click out side the location
		Click ImageLocation(text:"Global Business Unit(s)")+[0,30]
		typetext tabkey
		
		click imagelocation(text:"Change Type")+[85,0]
		typetext  global  CCChangeType
		click imagelocation(text:"Change Type")+[74,27]
		// click out side the loc
		//click imagelocation(text:"Change Type")
		
		
		click imagelocation(text:"Reason(s)")+[200,0]
		typetext  global  CCReasonDrivers
		Click imagelocation(text:"Reason(s)")+[190,20]
		// click out side the loc
		click imagelocation(text:"Reason(s)")
		typetext tabkey
		
		click ImageLocation(text:"Detailed Description")+[100,0]
		typetext "testing"
		typetext tabkey
		
		click ImageLocation(text:"Change Justification")+[100,0]
		typetext "testing"
		typetext tabkey
		
		//uat
		Click ImageLocation(text:"Business Function",ScreenPart:("BottomHalf"))+[200,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		wait 2
		TypeText "Customer Services"
		wait 2
		Typetext downArrow,return
		
		
		click ImageLocation(text:"Brand Specific",ScreenPart:("RightHalf"))+[200,0]
		Typetext "sku specific"
		wait 2
		Typetext return
		click imagelocation(text:"External References",seaechrectangle:ScreenPart("RightHalf"),waitfor:120)+(200,0)
		Typetext"https://login.veevavault.com/auth/login"
		Put "Entered Details in Create change control page" into global Vstep
		Log global Vstep
		CaptureAtLog
		click item 2 of EveryImageLocation(text:"Save",searchrectangle:ScreenPart("TopRightQuadrant"))
		wait 12
		// read record ID
		NavigateToSectionFromLeftPane "General Information"
		if ImageFound(text:"General Information",waitFor:120,searchrectangle:ScreenPart("LeftHalf"))
			//read recordid
			
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]],validpattern:"[A-Z][A-Z][0-9]*-[0-9][0-9][0-9]*")  into global VRecordId
			put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
			If global GivenRecordId is ""
				set the suitevariables.RecordId to global VRecordId
			else
				set the suitevariables.RecordId to global GivenRecordId
			end if
			Put "CCcreatedSuccessfullyWithRecordID"&the suitevariables.RecordId into global Vstep
			Log global Vstep
			CaptureAtLog
			return global RecordId
		end if	
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreateCC_withoutAffectedLocation

//EditImpactAssessmentOutput_withBuiltInTool
to handle EditImpactAssessmentOutput_withBuiltInTool
	NavigateToImpactAssessmentOutputSection
	try
		
		//Put "Built-In" into global FormalRiskAssessmentRequired
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf")
		(*click ImageLocation(text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
		Typetext "Test"*)
		
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[400,2]
		Typetext backspace
		Typetext backspace
		Typetext backspace
		Typetext backspace
		(*Typetext global FormalRiskAssessmentRequired
		Typetext downArrow, return*)
		wait 2
		// deleting previous value
		set the SearchRectangle to  [ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-5],ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[700,150]]

		repeat 3 times
			if ImageFound(image:"RiskAssessmentClosebutton")
				click FoundImageLocation()
				
			end if
			wait 1
		end repeat
		set the SearchRectangle to []

		Put "Built-In" into global FormalRiskAssessmentRequired
		click text:global FormalRiskAssessmentRequired,SearchRectangle:ScreenPart("LeftHalf")
		wait 2
		click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-20]
		
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[200,1]
		wait 1
		//OverAllRisk
		click text:global OverAllRisk,SearchRectangle:ScreenPart("RightHalf")
		click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[0,-21]
		click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		wait 5
		if ImageFound(imageName:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "ImpactAssessmentOutPutEditedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "ImpactAssessmentOutPutNotEditedSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end EditImpactAssessmentOutput_withBuiltInTool

to handle PrepareImpactAssessmentActionPlan_VerdictwithFA

	click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))
	click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
	
	typetext"testing"
	wait 2
	//Click imageName:"ReasonforClosingNotProgressed", waitFor:120
	Typetext tabKey
	//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:120
	
	wait 3
	Typetext global ReasonForClosing
	Typetext downArrow, return
	
	wait 3
	
	Click imageName:"complete", waitFor:10
	
	Put "CloseChangeControlChangeNotRequired" into global Vstep
	Log global Vstep
	
	CaptureAtLog
	
	
end PrepareImpactAssessmentActionPlan_VerdictwithFA

to handle PrepareImpactAssessmentActionPlan_VerdictwithFA_CCPL

	//click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))
	click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("BottomHalf"))+[120,30]
		
	typetext"testing"
	wait 2
	//Click imageName:"ReasonforClosingNotProgressed", waitFor:120
	Typetext tabKey
	//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:120
	
	wait 3
	Typetext global ReasonForClosing
	Typetext downArrow, return
	
	wait 3
	
	Click imageName:"complete", waitFor:10
	
	Put "CloseChangeControlChangeNotRequired" into global Vstep
	Log global Vstep
	
	CaptureAtLog
	
	
end PrepareImpactAssessmentActionPlan_VerdictwithFA_CCPL

to handle PrepareImpactAssessmentActionPlan_Verdict_withoutFA

	click imagelocation(text:"Yes",waitfor:120,searchrectangle:ScreenPart("Center"))+[40,0] //Clicking No
	click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
	
	typetext"testing"
	wait 2
	//Click imageName:"ReasonforClosingNotProgressed", waitFor:120
	Typetext tabKey
	//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:120
	
	wait 3
	TypeText global ReasonForClosing
	TypeText downArrow,return
	wait 3
	
	Click imageName:"complete", waitFor:120
	
	Put "CloseChangeControlChangeNotRequired" into global Vstep
	Log global Vstep
	
	CaptureAtLog
	
	
end PrepareImpactAssessmentActionPlan_Verdict_withoutFA

//OpenChildRecord_withSupplementary
to handle OpenChildRecord_withSupplementary
	try
		waitfor 30,text:"Show in tab",Searchrectangle:ScreenPart("TopHalf")
		
		if imagefound(text:"Supplementary Information ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			click imagelocation(text:"Supplementary Information ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))+[-50,32]
			
			wait 2
			waitfor 30,text:"Details",Searchrectangle:ScreenPart("TopLeftQuadrant")
			Put "Child records Details page displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Child records are not availablein the section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end OpenChildRecord_withSupplementary

//AttachFile_CommentsField
to handle AttachFile_CommentsField

	navigateToAttachmentsSection
	CM_Upload_Attachment
	
end AttachFile_CommentsField

//EditGeneralInformation_VerifyFields
to handle EditGeneralInformation_VerifyFields

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Title", SearchRectangle:ScreenPart("Center"))
		insert "Title" into MandatoryFields
	else
		insert "Title" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Date Due", SearchRectangle:ScreenPart("Center"))
		insert "Date Due" into MandatoryFields
	else
		insert "Date Due" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Description", SearchRectangle:ScreenPart("Center"))
		insert "Description" into MandatoryFields
	else
		insert "Description" into NonMandatoryFields
	end if
	
	if number of items of MandatoryFields is 3
		Put "Title, Date Due and Description fields are Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
	
end EditGeneralInformation_VerifyFields

//EditGeneralInformation_VerifyHyperlinkinFields
to handle EditGeneralInformation_VerifyHyperlinkinFields

	//Click text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	Click ImageLocation(text:"Title")+[100,0]
	Typetext Controlkey,a
	Typetext Backspace
	wait 1
	Typetext global URL
	wait 2
	Typetext return
	
	Click ImageLocation(text:"Description")+[100,0]
	Typetext Controlkey,a
	Typetext Backspace
	wait 1
	Typetext global URL
	wait 2
	Typetext return
	
	Click (text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
	
	put "https://sb-rb-uat.veevavault.com/" into global URL
	(*if imagefound(text:global URL,waitfor:50)*)
	Put "Hyper links are added to Title and Description fields" into global Vstep
	
	Log global Vstep
	
	W_App_CommonHandlers.CaptureAtLog
	(*else*)
	(*		Put "Hyper links are not added to Title and Description fields" into global Vstep
		
		Logerror global Vstep
		
		W_App_CommonHandlers.CaptureAtLog*)
	(*end if*)
	
end EditGeneralInformation_VerifyHyperlinkinFields

to handle VerifyErrorMessage_IACTDateDueMoreThan_CC_DateDue

	NavigateToSectionFromLeftPane "General Information"
	//put "25 May 2021" into global IADateDue
	split global IADateDue by " "
	put item 1 of global IADateDue into IADateDue_Day
	//Log ExistingDateDue_Day
	put item 2 of global IADateDue into IADateDue_Month
	//Log ExistingDateDue_Month
	put item 3 of global IADateDue into IADateDue_Year
	//Log ExistingDateDue_Year
	put IADateDue_Day+1 into NewDateDue_Day
	//Log NewDateDue_Day
	
	put NewDateDue_Day&&IADateDue_Month&&IADateDue_Year into NewDateDue
	//Log NewDateDue
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	Click ImageLocation(text:"Date Due")+[100,0]
	Typetext Controlkey,a
	Typetext Backspace
	wait 1
	Typetext NewDateDue
	wait 2
	
	Click (text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
	
	If imagefound(image:"ImplementationActivityDateDuen",searchrectangle:ScreenPart("Center"))
		Put "Error message displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		Put "Error message not displayed" into global Vstep
		Logerror global Vstep
		CaptureAtLog
		
	end if
	click text:"Cancel",searchrectangle:ScreenPart("TopRightQuadrant"),waitfor:120
	
	click item 2 of everyimagelocation(text:"Continue",waitFor:120,searchrectangle:Screenpart("Center"))
	
end VerifyErrorMessage_IACTDateDueMoreThan_CC_DateDue

to handle VerifyErrorMessage_IACTDateDueLessThan_Current_Date_Due
	
	
	put "20 May 2021" into global IADateDue
	split global IADateDue by " "
	put item 1 of global IADateDue into IADateDue_Day
	//Log ExistingDateDue_Day
	put item 2 of global IADateDue into IADateDue_Month
	//Log ExistingDateDue_Month
	put item 3 of global IADateDue into IADateDue_Year
	//Log ExistingDateDue_Year
	put IADateDue_Day-1 into NewDateDue_Day
	//Log NewDateDue_Day
	
	put NewDateDue_Day&&IADateDue_Month&&IADateDue_Year into NewDateDue
	//Log NewDateDue
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	Click ImageLocation(text:"Date Due")+[100,0]
	Typetext Controlkey,a
	Typetext Backspace
	wait 1
	Typetext NewDateDue
	wait 2
	
	Click (text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
	
	If imagefound(text:"Cannot be in the past",seaechrectangle:ScreenPart("Center")) //message needs to update
		Put "Error message displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		Put "Error message not displayed" into global Vstep
		Logerror global Vstep
		CaptureAtLog
		
	end if
	click text:"Cancel",searchrectangle:ScreenPart("TopRightQuadrant"),waitfor:120
	
	click item 2 of everyimagelocation(text:"Continue",searchrectangle:Screenpart("Center"))
	
end VerifyErrorMessage_IACTDateDueLessThan_Current_Date_Due

//ACT_Function_Titles_tatus
to handle ACT_Function_Titles_status

	//Cannot test(not there in the application)
	//Click test:"Team",searchrectangle:ScreenPart("TopLeftQuadrant"),waitfor:30 
	//If imagefound(text:"Activity Owner",seaechrectangle:ScreenPart("Center"))
	//end if
	NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	if ImageFound(text:"Nutrition CC 2 UAT Action Owner", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"Nutrition CC 2 Action Owner",SearchRectangle:ScreenPart("LeftHalf"))
	else if ImageFound(text:"CC 2 Action Owner", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"CC 2 Action Owner",SearchRectangle:ScreenPart("LeftHalf"))
	end if
	waitfor 60,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for Action Owner" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for Action Owner" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"R & D", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	Put "Function name displayed for Action Owner" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
else
	Put "Function name not displayed for Action Owner" into global Vstep
	LogError global Vstep
	W_App_CommonHandlers.CaptureAtLog
end if
if ImageFound(text:"Testing title", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end ACT_Function_Titles_status

//ACTOwner_Function_Titles_status
to handle ACTOwner_Function_Titles_status

	//Cannot test(not there in the application)
	//Click test:"Team",searchrectangle:ScreenPart("TopLeftQuadrant"),waitfor:30 
	//If imagefound(text:"Activity Owner",seaechrectangle:ScreenPart("Center"))
	//end if
	NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	if ImageFound(text:"Nutrition CC 1 UAT Activity Owner", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"Nutrition CC 1 Activity Owner",SearchRectangle:ScreenPart("LeftHalf"))
	else if ImageFound(text:"CC 1 Activity Owner", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"CC 1 Activity Owner",SearchRectangle:ScreenPart("LeftHalf"))
	end if
	waitfor 60,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for Activity Owner" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for Activity Owner" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"R & D", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	Put "Function name displayed for Activity Owner" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
else
	Put "Function name not displayed for Activity Owner" into global Vstep
	LogError global Vstep
	W_App_CommonHandlers.CaptureAtLog
end if
if ImageFound(text:"Testing title", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for Activity" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for Activity" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end ACTOwner_Function_Titles_status

//Edit_CC_GeneralInformation_Formulation
to handle Edit_CC_GeneralInformation_Formulation
	Edit_CC_GeneralInformation "Brand Specific","Formulation"
	
end Edit_CC_GeneralInformation_Formulation

//Edit_CC_GeneralInformation_SemiFinished
to handle Edit_CC_GeneralInformation_SemiFinished
	Edit_CC_GeneralInformation "Brand Specific","Semi-Finished Material (incl. Device)"
	
end Edit_CC_GeneralInformation_SemiFinished

//Edit_CC_GeneralInformation_RawMaterial
to handle Edit_CC_GeneralInformation_RawMaterial
	Edit_CC_GeneralInformation "Brand Specific","Raw Material"
	
end Edit_CC_GeneralInformation_RawMaterial

//Edit_CC_GeneralInformation_Packaging
to handle Edit_CC_GeneralInformation_Packaging
	Edit_CC_GeneralInformation "Brand Specific","Packaging Material"
	
end Edit_CC_GeneralInformation_Packaging

//Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct
to handle Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct
	Edit_CC_GeneralInformation "Brand Specific","Brand Related (but not product specific)"
	
end Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct

//Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct
to handle Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct

	try
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		//waitfor 50,text:GivenFieldName,SearchRectangle:ScreenPart("Center")+[100,100]
		//Put "Affected Location Type" into GivenFieldName
		//Click ImageLocation(text:GivenFieldName,SearchRectangle:ScreenPart("Center"))+[100,0]
		Click ImageLocation(text:"Brand Specific")+[100,0]
		Typetext Controlkey,a
		Typetext Backspace
		wait 1
		Typetext "Brand Related (but not product specific)"
		wait 2
		Typetext return
		//if GivenFieldName is "Brand Related (but not product specific)" then verify Brand(s) field
		Put "Entered New value in Section Edit Page" into global Vstep
		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		
		LogError theException
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	end try
	
end Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct

//VerifyBrandField_GeneralInformation
to handle VerifyBrandField_GeneralInformation

	if imagefound(text:"Brand(s)",waitfor:50)
		Put "Brand(s) field auto populated" into global Vstep
		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Brand(s) field not auto populated" into global Vstep
		
		Logerror global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
	end if
	
	Click (text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
	
end VerifyBrandField_GeneralInformation

// closer browser window
to handle CloseCurrentWindow


	TypeText altKey,f4
	if ImageFound(imageName:"LeaveButton", waitFor:9)
		click FoundImageLocation()
	end if
	wait 2
	
end CloseCurrentWindow

//handlers according to StepNames
to handle LaunchAndLoginToApplication_Originator

	PreExecution
	ChangeControlUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_Originator
	
end LaunchAndLoginToApplication_Originator

to handle CreateCC_Draft

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	
end CreateCC_Draft

to handle AssignChangeCoordinator_AssignFunctionApprover

	UserRoleSetup_CC
	AssignUser_Teams_FA
	
end AssignChangeCoordinator_AssignFunctionApprover

(*to handle AssignToChangeCordinator_IAAP

	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end AssignToChangeCordinator_IAAP
*)
to handle SearchRecord_IMPACTASSESSMENTACTIONPLANNING

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end SearchRecord_IMPACTASSESSMENTACTIONPLANNING

to handle Fill_Location_and_ImpactAssessmentOutput

	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
end Fill_Location_and_ImpactAssessmentOutput

to handle CreateAI_and_IA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	
end CreateAI_and_IA

to handle CreateAI_and_IA_SecondRecord

	OpenDependentRecord1
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	OpenDependentRecord1
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	OpenDependentRecord1
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	OpenDependentRecord1
	
end CreateAI_and_IA_SecondRecord

to handle PrepareImpactAssessmentActionPlan_VerifyErrorToAddImpactedProduct

	PrepareImpactAssessmentActionPlan
	VerifyErrorPromptToaddImpactedProductInformation
	
end PrepareImpactAssessmentActionPlan_VerifyErrorToAddImpactedProduct

to handle Add_ImpactedProductInformation

	NavigateToImpactedProductInformationSection
	Add_ProductObject
	
end Add_ImpactedProductInformation

to handle PrepareImpactAssessmentActionPlan_PendingFunctionApproval
	SearchRecord
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end PrepareImpactAssessmentActionPlan_PendingFunctionApproval

to handle PrepareImpactAssessmentActionPlan_PendingFunctionApproval_CCPL
	SearchRecord
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end PrepareImpactAssessmentActionPlan_PendingFunctionApproval_CCPL

to handle SearchRecord_PENDINGFUNCTIONAPPROVAL

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end SearchRecord_PENDINGFUNCTIONAPPROVAL

to handle FunctionApprovalOfChangeControl_IMPACTASSESSMENTACTIONPLANNING

	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end FunctionApprovalOfChangeControl_IMPACTASSESSMENTACTIONPLANNING

to handle AssignToChangeCordinator_IMPACTASSESSMENTACTIONPLANNING

	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end AssignToChangeCordinator_IMPACTASSESSMENTACTIONPLANNING

(*to handle VerifyRecordDetailsSection

	NavigateToRecordDetailsSection
	VerifyRecordDetailsSection
	
end VerifyRecordDetailsSection*)

to handle CreateCC_IMPACTASSESSMENTACTIONPLANNING

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IMPACTASSESSMENTACTIONPLANNING

to handle CreateAssessmentItem_Draft

	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	
end CreateAssessmentItem_Draft

to handle StartImpactAssessment_PendingAssessment

	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	
end StartImpactAssessment_PendingAssessment

to handle SearchRecord_CreateIA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	
end SearchRecord_CreateIA
to handle SearchRecord_Second_CreateIA_CCPL

	OpenDependentRecord1
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	
end SearchRecord_Second_CreateIA_CCPL


to handle SubmitRecord_withoutAI

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyErrorPromptForNotRaising_AI
	
end SubmitRecord_withoutAI

to handle SubmitRecord_withoutAI_CCPL

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyErrorPromptForNotRaising_AI
	
end SubmitRecord_withoutAI_CCPL

to handle SubmitRecord_withoutClosingAI
	
	SearchRecord
	PrepareImpactAssessmentActionPlan
	VerifyErrorPromptForNotClosing_AI
	
end SubmitRecord_withoutClosingAI

to handle AssessmentItem_ClosedComplete
	
	LogOut
	LoginToApplication_Assessor
	SearchRecord
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end AssessmentItem_ClosedComplete

to handle AssessmentItem_ClosedComplete_Second_Hygiene
	
	LogOut
	LoginToApplication_Assessor
	OpenDependentRecord1
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end AssessmentItem_ClosedComplete_Second_Hygiene

to handle SearchRecord_AssignFA

	SearchRecord
	//VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 10
	//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 10
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,10]
	wait 4
	Typetext controlkey,a
	Typetext backspace
	wait 4
	Typetext "Nutrition CC 1 Function Approver"
	wait 4
	typetext downarrow,return
	//click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 5
	click imagelocation(text:"Cancel",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant"))+[40,0]
	//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 10
	ScrollWheelUp 50
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 5
	//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 5
	put "Quality Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,10]
	wait 7
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 7
	Typetext "Nutrition CC 1 Quality Approver"
	wait 7
	typetext downarrow,return
	//click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 5
	click imagelocation(text:"Cancel",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant"))+[40,0]
	//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 15
	ScrollWheelUp 50
end SearchRecord_AssignFA

to handle CreateCC_IMPACTASSESSMENTACTIONPLANNING_Hygiene

	SelectingQMSProcess
	CreateCC_Hygiene
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IMPACTASSESSMENTACTIONPLANNING_Hygiene

to handle SearchRecord_AssignQA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	AssignUser_Teams_QA
	
end SearchRecord_AssignQA
to handle SearchRecord_AssignQA_second_Hygiene

	OpenDependentRecord1
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	AssignUser_Teams_QA
	
end SearchRecord_AssignQA_second_Hygiene



to handle PrepareImpactAssessmentActionPlan_PendingQualityApproval
	
	PrepareImpactAssessmentActionPlan_Hygiene_NoFA
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end PrepareImpactAssessmentActionPlan_PendingQualityApproval

to handle LoginToApplication_CC_AssignQA

	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	AssignUser_Teams_QA
	
end LoginToApplication_CC_AssignQA

to handle CreateCC_IAandAP_AssignUsers

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignUsers

to handle SearchRecord_CreateAI_ClosedComplete

	SearchRecord
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	LoginToApplication_Assessor
	SearchRecord
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end SearchRecord_CreateAI_ClosedComplete

to handle ProgressTo_PendingFunctionApproval

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end ProgressTo_PendingFunctionApproval

to handle ProgressTo_PendingQualityApproval

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressTo_PendingQualityApproval

to handle ProgressTo_InImplementation

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	
end ProgressTo_InImplementation

to handle SearchRecord_InImplementation_CreateIA

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	
end SearchRecord_InImplementation_CreateIA

to handle ProgressIA_ToClosedComplete

	(*AssignUser_Teams_FA
	AssignUser_Teams_QA*)
	AssignUser_Teams_ActionOwner
	//StartImplementation
	//VerifyLifeCycleState_Draft
	SubmitActionForPreApproval
	//VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	//LogOut
	
	//LoginToApplication_FA
	//SearchRecord 
	//OpenRecord_IA_PENDINGFUNCTIONAPPROVAL
	//VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	//FunctionApprovalOfAction
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA	
	SearchRecord 
	OpenRecord_IA_PENDINGQUALITYAPPROVAL
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfAction
	VerifyLifeCycleState_WORKINPROGRESS
	LogOut
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end ProgressIA_ToClosedComplete

to handle SearchRecord_ChangeCoordinatorReview_CreateIA

	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	
end SearchRecord_ChangeCoordinatorReview_CreateIA

to handle SubmitRecord_VerifyErrorPromptForNotRaising_IA

	LoginToApplication_CC
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyErrorPromptForNotRaising_IA
	
end SubmitRecord_VerifyErrorPromptForNotRaising_IA

to handle VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval
	
	PrepareImpactAssessmentActionPlan_withoutMandatoryFields
	VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_ImpactAssessmentActionPlanTask
	
end VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval

to handle VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_CCPL
	
	PrepareImpactAssessmentActionPlan_withoutMandatoryFields_CCPL
	VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_ImpactAssessmentActionPlanTask
	
end VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_CCPL

to handle AddProduct_Location_Information

	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput_withoutMandatoryFields
	
end AddProduct_Location_Information

to handle SearchRecord_CreateAI_and_IA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	
end SearchRecord_CreateAI_and_IA

to handle SearchRecord_EditImpactAssessmentOutput

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
	CreateRiskAssessment_Create
	
end SearchRecord_EditImpactAssessmentOutput

to handle CreateCC_IAandAP_AssignQA

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignQA

to handle CreateCC_IAandAP_AssignFA

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignFA

to handle CreateCC_IAandAP_AssignUsers_Hygiene

	SelectingQMSProcess
	CreateCC_Hygiene
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignUsers_Hygiene


to handle PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_withFA

	SearchRecord
	AssignUser_Teams_FA
	PrepareImpactAssessmentActionPlan_VerifyMandatoryFields
	
end PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_withFA

(*to handle PrepareImpactAssessmentActionPlan_Verdict

	PrepareImpactAssessmentActionPlan_Verdict
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end PrepareImpactAssessmentActionPlan_Verdict*)

to handle ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	FunctionApprovalOfCC_Closure_ChangeNotProgressed
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed

to handle ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_CCPL

	OpenDependentRecord2
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	FunctionApprovalOfCC_Closure_ChangeNotProgressed
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_CCPL
to handle ProgressTo_ChangeNotProgressed

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	W_App_CommonHandlers.QualityApprovalOfCC_Closure_ChangeNotProgressed
	W_App_CommonHandlers.VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	
end ProgressTo_ChangeNotProgressed

to handle ProgressTo_ChangeNotProgressed_CCPL_Hygiene

	W_App_CommonHandlers.OpenDependentRecord2
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	W_App_CommonHandlers.QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL
	W_App_CommonHandlers.VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	
end ProgressTo_ChangeNotProgressed_CCPL_Hygiene

to handle ProgressTo_ChangeNotProgressed_CCPL
W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	W_App_CommonHandlers.QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL
	W_App_CommonHandlers.VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
end ProgressTo_ChangeNotProgressed_CCPL 
to handle CreateCC_IAandAP_AssignQA_Hygiene

	SelectingQMSProcess
	CreateCC_Hygiene
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignQA_Hygiene

to handle LoginToApplication_CC_VerifyMandatoryFields

	LoginToApplication_CC
	SearchRecord
	PrepareImpactAssessmentActionPlan_VerifyMandatoryFields
	
end LoginToApplication_CC_VerifyMandatoryFields


to handle LoginToApplication_CC_VerifyMandatoryFields_CCPL
    OpenDependentRecord2
	PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithFA
end LoginToApplication_CC_VerifyMandatoryFields_CCPL

to handle PrepareImpactAssessmentActionPlan_Verdict_withFA

	PrepareImpactAssessmentActionPlan_VerdictwithFA
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end PrepareImpactAssessmentActionPlan_Verdict_withFA



to handle PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	PrepareImpactAssessmentActionPlan_VerifyMandatoryFields
	(*PrepareImpactAssessmentActionPlan_Verdict*)
	
end PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed

to handle PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed_Second

	OpenDependentRecord1
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	//PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields
	PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithoutFA
	(*PrepareImpactAssessmentActionPlan_Verdict*)
	
end PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed_Second

to handle SearchRecord_Create_2AI_1IA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	SearchRecord
	CreateAssessmentItem
	OpenRecord_AI_Draft
	VerifyLifeCycleState_Draft
	(*AssignUser_Teams_ActionOwner*)
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	
end SearchRecord_Create_2AI_1IA

to handle IA_and_AI_ProgressedTo_ClosedCancelled

	SearchRecord
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	NavigateToImplementationAction
	Draft_InProgress_State_NotAvailable
	NavigateToSectionFromLeftPane "Assessment Items"
	Draft_InProgress_State_NotAvailable
	
end IA_and_AI_ProgressedTo_ClosedCancelled

to handle ProgressTo_PendingQualityApproval_Hygiene

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_Hygiene_NoFA
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressTo_PendingQualityApproval_Hygiene

to handle CreateImplementationAction_VerifyDateDue

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateIA_VerifyDateDue
	VerifyErrorMessage_IADateDueMoreThan_CC_DateDue
	
	
end CreateImplementationAction_VerifyDateDue

to handle CreateImplementationAction_VerifyDateDue_CCPL

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateIA_VerifyDateDue
	OpenRecord_IA_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
    NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	LoginToApplication_CC
	SearchRecord
	AssignUser_Teams_QA
    PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
	
	VerifyErrorMessage_IADateDueMoreThan_CC_DateDue
	
end CreateImplementationAction_VerifyDateDue_CCPL

(*to handle ProgressFrom_IAandAP_ToPendingFunctionApproval

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end ProgressFrom_IAandAP_ToPendingFunctionApproval*)

to handle RegressFromFunctionApproval_ToIAandAP_CCPL

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end RegressFromFunctionApproval_ToIAandAP_CCPL

to handle RegressFromFunctionApproval_ToIAandAP

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end RegressFromFunctionApproval_ToIAandAP
to handle CancelTask_IAandAP

	CancelTask
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CancelTask_IAandAP

to handle RegressFromQualityApproval_ToIAandAP
	SearchRecord
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	W_App_CommonHandlers.QualityApprovalOfChangeControl
	W_App_CommonHandlers.VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end RegressFromQualityApproval_ToIAandAP

(*to handle ProgressFrom_IAandAP_ToPendingQualityApproval

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_Hygiene_NoFA
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressFrom_IAandAP_ToPendingQualityApproval*)

to handle RegressTo_PendingFunctionApproval_VerifyErrorPrompt

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyErrorPromptToAssignFunctionApprover
	
end RegressTo_PendingFunctionApproval_VerifyErrorPrompt

to handle RegressTo_PendingFunctionApproval

	QualityApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end RegressTo_PendingFunctionApproval

to handle AddFunction_Location_PendingFunctionApproval

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end AddFunction_Location_PendingFunctionApproval

to handle AddFunction_Location_PendingFunctionApproval_CCPL

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end AddFunction_Location_PendingFunctionApproval_CCPL


to handle CM_DateDueExtension_VerifyErrorPrompt

	SearchRecord
	CM_DateDueExtension_WithoutJustificationAndReason
	VerifyErrorMessage_ToFillReasonAndJustification
	
end CM_DateDueExtension_VerifyErrorPrompt

to handle ProgressIATo_PendingFunctionApproval

	W_App_CommonHandlers.AssignUser_Teams_FA
	W_App_CommonHandlers.AssignUser_Teams_QA
	W_App_CommonHandlers.AssignUser_Teams_ActionOwner
	//W_App_CommonHandlers.StartImplementation
	//W_App_CommonHandlers.VerifyLifeCycleState_Draft
	W_App_CommonHandlers.SubmitActionForPreApproval
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end ProgressIATo_PendingFunctionApproval

to handle ProgressIATo_PendingQualityApproval

	W_App_CommonHandlers.SearchRecord 
	W_App_CommonHandlers.OpenRecord_IA_PENDINGFUNCTIONAPPROVAL
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	W_App_CommonHandlers.FunctionApprovalOfAction
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressIATo_PendingQualityApproval

to handle ProgressIATo_WorkInProgress

	W_App_CommonHandlers.SearchRecord 
	W_App_CommonHandlers.OpenRecord_IA_PENDINGFUNCTIONAPPROVAL
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	W_App_CommonHandlers.FunctionApprovalOfAction
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressIATo_WorkInProgress

to handle ProgressIATo_PendingQualityApproval_Hygiene

	W_App_CommonHandlers.AssignUser_Teams_QA
	W_App_CommonHandlers.AssignUser_Teams_ActionOwner
	//W_App_CommonHandlers.StartImplementation
	//W_App_CommonHandlers.VerifyLifeCycleState_Draft
	W_App_CommonHandlers.SubmitActionForPreApproval
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end ProgressIATo_PendingQualityApproval_Hygiene

to handle CreateCC_IAandAP_AssignUsers_PFA

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_IAandAP_AssignUsers_PFA

to handle SearchRecord_INIMPLEMENTATION

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	
end SearchRecord_INIMPLEMENTATION

to handle ImplementTheChange_VerifyFields

	ImplementTheChange
	VerifyErrorMessage_ToFillReasonAndJustification
	
end ImplementTheChange_VerifyFields

to handle ImplementTheChange_PendingFunctionClosureApproval

	ImplementTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end ImplementTheChange_PendingFunctionClosureApproval


to handle ProgressTo_PendingFunctionClosureApproval_ChangeNotImplemented

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	FunctionApprovalOfCC_Closure_ChangeNotImplemented
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end ProgressTo_PendingFunctionClosureApproval_ChangeNotImplemented 

to handle ProgressTo_ChangeNotImplemented

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	QualityApprovalOfCC_Closure_ChangeNotImplemented
	VerifyLifeCycleState_CHANGENOTIMPLEMENTED
	
end ProgressTo_ChangeNotImplemented

to handle ImplementTheChange_PendingQualityClosureApproval

	ImplementTheChange
	VerifyLifeCycleState_PENDINGQUALITYNCLOSUREAPPROVAL
	
end ImplementTheChange_PendingQualityClosureApproval

to handle ProgressIA_FromAuthorised_ToWorkInProgress

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	//OpenRecord_IA_AUTHORISED
	//VerifyLifeCycleState_AUTHORISED
	//AssignUser_Teams_ActionOwner
	//AssignActionOwner
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end ProgressIA_FromAuthorised_ToWorkInProgress

to handle ProgressIATo_ClosedComplete

	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end ProgressIATo_ClosedComplete

to handle ImplementTheChange_VerifyFields_Hygiene

	ImplementtheChange_Hygiene
	VerifyErrorMessage_ToFillReasonAndJustification
	
end ImplementTheChange_VerifyFields_Hygiene

to handle Verify_IA_State

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end Verify_IA_State

to handle ImplementTheChange_VerifyErrorPromptToCloseIA

	SearchRecord
	
	ImplementTheChange
	VerifyErrorPromptToCloseIA
	//OpenRecord_IA_AUTHORISED
	//VerifyLifeCycleState_AUTHORISED
	//AssignUser_Teams_ActionOwner
	//AssignActionOwner
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end ImplementTheChange_VerifyErrorPromptToCloseIA

to handle Logout_ProgressIA_ToClosedComplete

	LogOut
	LoginToApplication_ActionOwner
	SearchRecord
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	//LoginToApplication_CC
	
end Logout_ProgressIA_ToClosedComplete

to handle LoginToApplication_CC_Verify_CCState

	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end LoginToApplication_CC_Verify_CCState

to handle SearchRecord_CreateAI_and_3IAs

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	
end SearchRecord_CreateAI_and_3IAs

to handle Progress2IAs_ToClosedComplete

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end Progress2IAs_ToClosedComplete

to handle LoginToApplication_CC_ReopenIA

	LoginToApplication_CC
	SearchRecord
	NavigateToImplementationAction
	OpenRecord_CLOSEDCOMPLETE
	ReopenIA
	
end LoginToApplication_CC_ReopenIA

to handle QA_ReopenIA

	SearchRecord
	NavigateToImplementationAction
	OpenRecord_CLOSEDCOMPLETE
	ReopenIA
	
end QA_ReopenIA

to handle SearchRecord_CreateAI_and_IA_FillProduct_and_LocationInformation

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
end SearchRecord_CreateAI_and_IA_FillProduct_and_LocationInformation

to handle LoginToApplication_CC_ChangeCoordinatorReview

	LoginToApplication_CC
	SearchRecord
	
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end LoginToApplication_CC_ChangeCoordinatorReview

to handle VerifyErrorPromptToaddPostImplementationSummary
	if ImageFound(text:"Implement The Change", waitFor:30,Searchrectangle:ScreenPart("TopLeftQuadrant"))
		ImplementTheChange
		ReviewTheImplementationOfTheChange_withoutMandatoryFields
	else
		
		ReviewTheImplementationOfTheChange_withoutMandatoryFields
	end if
	VerifyErrorPromptToadd_PostImplementationSummary
	
end VerifyErrorPromptToaddPostImplementationSummary

to handle ReviewTheImplementationOfTheChange_PendingPostQualityApproval
	
	ReviewTheImplementationOfTheChange_withoutPostImplementationSummary
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end ReviewTheImplementationOfTheChange_PendingPostQualityApproval

to handle SearchRecord_Create2AIs_and_IA_FillProduct_and_LocationInformation

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
end SearchRecord_Create2AIs_and_IA_FillProduct_and_LocationInformation

to handle NavigateToIA_ReopenIA

	NavigateToImplementationAction
	OpenRecord_CLOSEDCOMPLETE
	ReopenIA
	wait 900
end NavigateToIA_ReopenIA

to handle ImplementTheChange_IMPACTASSESSMENTACTIONPLANNING

	SearchRecord
	ImplementTheChange	
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end ImplementTheChange_IMPACTASSESSMENTACTIONPLANNING

to handle CreateIA_ChangeCoordinatorReview

	CreateImplementationAction
	
end CreateIA_ChangeCoordinatorReview

to handle OpenIA_AssignUsers

	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_QA
	AssignUser_Teams_ActionOwner
	
end OpenIA_AssignUsers

to handle SubmitActionForPreApproval_Hygiene

	SubmitActionForApproval_Hygiene
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end SubmitActionForPreApproval_Hygiene

to handle SearchRecord_QualityApprovalOfAction

	SearchRecord
	OpenRecord_IA_PENDINGQUALITYAPPROVAL
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfAction
	VerifyLifeCycleState_WORKINPROGRESS
	
end SearchRecord_QualityApprovalOfAction

to handle SearchRecord_IAWorkInProgress

	SearchRecord
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end SearchRecord_IAWorkInProgress

to handle ImplementationActionTobeCompleted_ClosedComplete

	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end ImplementationActionTobeCompleted_ClosedComplete

to handle ImplementTheChange_VerifyErrorMessage_ToFillNextSteps
	
	ImplementTheChange
	//ReviewTheImplementationOfTheChange_VerifyFields
	//VerifyErrorMessage_ToFillNextSteps_WithoutCancel
	ReviewTheImplementationOfTheChange_withoutMandatoryFields
	//VerifyErrorPromptToadd_PostImplementationSummary
	Set the searchrectangle to [topleft of imageRectangle(text:"Post-Implementation Summary"),topleft of imageRectangle(text:"Post-Implementation Summary")+[300,110]]
	if ImageFound(text:"field is required")
		Put "Error message displayed" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "Error message not displayed" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	end if
	Set the searchrectangle to []
	
	
end ImplementTheChange_VerifyErrorMessage_ToFillNextSteps

to handle ReviewTheImplementationOfTheChange_PendingQualityPostApproval

	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end ReviewTheImplementationOfTheChange_PendingQualityPostApproval

to handle CreateCC_ChangeCoordinatorReview_AssignUsers

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	ImplementTheChange
	
end CreateCC_ChangeCoordinatorReview_AssignUsers

to handle ReviewTheImplementationOfTheChange_VerifyErrorToAssignPFA

	SearchRecord
	ReviewTheImplementationOfTheChange
	VerifyErrorPromptToAssignFunctionPostApprover
	
end ReviewTheImplementationOfTheChange_VerifyErrorToAssignPFA

to handle ReviewTheImplementationOfTheChange_PendingFunctionPostApproval
	
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
end ReviewTheImplementationOfTheChange_PendingFunctionPostApproval

to handle FunctionPostApproval_VerifyErrorToFillComments

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
	FAFinalApproval_withoutComments
	VerifyErrorMessage_ToFillComments
	
end FunctionPostApproval_VerifyErrorToFillComments

to handle FAFinalApproval_ChangeCoordinatorReview
	
	FAFinalApproval
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end FAFinalApproval_ChangeCoordinatorReview

to handle CreateCC_PendingFunctonPostApproval_AssignUsers

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	//ImplementTheChange
	//ReviewTheImplementationOfTheChange
	if ImageFound(text:"Implement The Change", waitFor:30,Searchrectangle:ScreenPart("TopLeftQuadrant"))
		ImplementTheChange
		ReviewTheImplementationOfTheChange
	else
		
		ReviewTheImplementationOfTheChange
	end if
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
end CreateCC_PendingFunctonPostApproval_AssignUsers

to handle SearchRecord_FunctionPostApproval_ReopenIA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	NavigateToImplementationAction
	OpenRecord_CLOSEDCOMPLETE
	ReopenIA
	wait 900
end SearchRecord_FunctionPostApproval_ReopenIA

to handle SearchRecord_FunctionPostApproval_ReassignPFA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	//ReassignPFAByChangeCoordinator_WhenCCisinPendingPostApprovalState
	//AssignUser_Teams_verifyNewTaskUser_PFA
	try
wait 3
Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
wait 3
WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
wait 2
Click imagelocation(text:"Function Post-Approver",searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,35)
wait 1
Log "Old user present"
CaptureAtLog
Typetext backspace
Typetext backspace

Typetext backspace

//Typetext backspace
wait 1
Typetext global PostFunctionApproverFirstNameofOther
wait 3
typetext downarrow,return
click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
wait 5
//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")

if imagefound(text:global PFA)
Logerror "New Task owner not updated"
CaptureAtLog
else
Log"New Task owner updated"
CaptureAtLog
end if


Catch theException
Logerror theException
CaptureAtLog

End try
	
	
end SearchRecord_FunctionPostApproval_ReassignPFA

to handle FunctionPostApproval_Canceltask_CoordinatorReview

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	CancelTask
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end FunctionPostApproval_Canceltask_CoordinatorReview

to handle ProgressTo_PendingQulaityPostApproval

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end ProgressTo_PendingQulaityPostApproval

to handle CreateCC_PendingQualityPostApproval_AssignUsers

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	
	AssignUser_Teams_CC
	
	AssignUser_Teams_FA
	
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	wait 20
	Add_ImpactedProduct
	wait 20
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	wait 20
	
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	(*	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	OpenRecord_IA_AUTHORISED
	VerifyLifeCycleState_AUTHORISED
	AssignUser_Teams_ActionOwner
	//AssignActionOwner
	VerifyLifeCycleState_WORKINPROGRESS
	LogOut*)
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
	ImplementationActionTobeCompleted
	(*VerifyLifeCycleState_CLOSEDCOMPLETE*)
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
	ImplementTheChange
	
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	LogOut
	
	LoginToApplication_PFA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end CreateCC_PendingQualityPostApproval_AssignUsers

to handle QualityPostApproval_Canceltask_CoordinatorReview

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	CancelTask
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end QualityPostApproval_Canceltask_CoordinatorReview

to handle QualityPostApproval_VerifyErrorToFillComments

	SearchRecord
	(*VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL*)
	QualityPostApprovalOfChangeControl_withoutComments
	VerifyErrorMessage_ToFillComments
	
end QualityPostApproval_VerifyErrorToFillComments

to handle QualityPostApprovalOfChangeControl_ChangeCoordinatorReview
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Rejected",SearchRectangle:ScreenPart("Center")
	TypeText tabKey
	Typetext"TestReject"
	Click imageName:"Complete", waitFor:120
	wait 15
	Put "QPARejected with comments" into global Vstep
	Log global Vstep
	CaptureAtLog
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end QualityPostApprovalOfChangeControl_ChangeCoordinatorReview

to handle SearchRecord_QualityPostApproval_ReopenIA

	SearchRecord
	//VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	NavigateToImplementationAction
	OpenRecord_CLOSEDCOMPLETE
	ReopenIA
	wait 900
end SearchRecord_QualityPostApproval_ReopenIA

to handle SearchRecord_QualityPostApproval_ReassignPFA

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	//ReassignQAByChangeCoordinator_WhenCCisinPendingPostApprovalState
	AssignUser_Teams_verifyNewTaskUser_PQA
	TypeText F5
	wait 20
	CancelTask_FromCogWheel_WorkFlowTimeLine
	
end SearchRecord_QualityPostApproval_ReassignPFA

to handle AssignUser_Teams_verifyNewTaskUser_PQA
	AssignUser_Teams_verifyNewTaskUser global PostQualityApproverFirstNameofOther,"Quality Approver" 
end AssignUser_Teams_verifyNewTaskUser_PQA

to handle SearchRecord_QualityPostApprovalOfCC_Complete

	SearchRecord
	QualityPostApprovalOfCC_Complete
	
end SearchRecord_QualityPostApprovalOfCC_Complete

to handle QualityPostApprovalOfCC_Verdict_ClosedComplete

	QualityPostApprovalOfCC_Verdict
	VerifyLifeCycleState_CLOSEDIMPLEMENTED
	
end QualityPostApprovalOfCC_Verdict_ClosedComplete

to handle Open_SupplementaryInformation_AttcahFile

	OpenChildRecord_withSupplementary
	AttachFile_CommentsField
	
end Open_SupplementaryInformation_AttcahFile

to handle SearchRecord_EditButtonNotAvailable

	SearchRecord
	EditButtonNotAvailable
	
end SearchRecord_EditButtonNotAvailable

to handle IA_Authorised_ToWorkInProgress

	//OpenRecord_IA_AUTHORISED
	//VerifyLifeCycleState_AUTHORISED
	//AssignUser_Teams_ActionOwner
	//AssignActionOwner
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end IA_Authorised_ToWorkInProgress

to handle IA_WorkInProgress_ToClosedCompleted

	SearchRecord
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end IA_WorkInProgress_ToClosedCompleted

to handle SearchRecord_ChangeCoordinatorReview

	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end SearchRecord_ChangeCoordinatorReview

to handle Assign_2FAs

	SearchRecord
	AssignUser_Teams_FA
	(*AssignUser_Teams_FA_second*)
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Nutrition CC 2 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
end Assign_2FAs

to handle CreateAI_and_IA_PendingFunctionApproval
	SearchRecord
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end CreateAI_and_IA_PendingFunctionApproval
 to handle CreateAI_and_IA_PendingFunctionApproval_CCPL
 SearchRecord
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
 end CreateAI_and_IA_PendingFunctionApproval_CCPL
to handle Approve_By_1FA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end Approve_By_1FA

to handle Approve_By_2FA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl_second_CCPL
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end Approve_By_2FA

to handle SearchRecord_IAAuthorised

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	OpenRecord_IA_WORKINPROGRESS
	//VerifyLifeCycleState_AUTHORISED
	
end SearchRecord_IAAuthorised

to handle AssignAO_WorkinProgress

	//AssignUser_Teams_ActionOwner
	//AssignActionOwner
	VerifyLifeCycleState_WORKINPROGRESS
	
end AssignAO_WorkinProgress

to handle SearchRecord_ImplementTheChange_PendingFunctionPostApproval

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	ImplementTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end SearchRecord_ImplementTheChange_PendingFunctionPostApproval

to handle IAs_ClosedCancelled

	NavigateToImplementationAction
	OpenRecord_CLOSEDCANCELLED
	VerifyLifeCycleState_CLOSEDCANCELLED
	SearchRecord
	NavigateToImplementationAction
	OpenRecord_CLOSEDCANCELLED
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end IAs_ClosedCancelled

to handle SearchRecord_QA_VerifyNotAbleToAddAttachments

	SearchRecord
	VerifyNotAbleToAddAttachments
	
end SearchRecord_QA_VerifyNotAbleToAddAttachments

to handle FunctionApprovalOfChangeControl_PendingQualityApproval

	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
	
end FunctionApprovalOfChangeControl_PendingQualityApproval

to handle ProgressIA_ToClosedComplete_CCPL

	
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end ProgressIA_ToClosedComplete_CCPL

to handle SearchRecord_PENDINGFUNCTIONPOSTAPPROVAL

	SearchRecord
	
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
end SearchRecord_PENDINGFUNCTIONPOSTAPPROVAL

to handle VerifyNotAbleToCreate_Edit_DateDueExtensionRequest

	VerifyNotAbleToCreate_DateDueExtensionRequest
	CannotEdit_ExistingDateDueExtensionRequest
	
end VerifyNotAbleToCreate_Edit_DateDueExtensionRequest

to handle FAFinalApproval_PendingQualityPostApproval

	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end FAFinalApproval_PendingQualityPostApproval

to handle SearchRecord_PENDINGQUALITYPOSTAPPROVAL

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end SearchRecord_PENDINGQUALITYPOSTAPPROVAL

to handle SearchRecord_Assign2PFAs

	SearchRecord
	AssignUser_Teams_PFA
	//AssignUser_Teams_PFA_second
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Post-Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext global PFA_second
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
end SearchRecord_Assign2PFAs

to handle ImplementTheChange_PendingQualityPostApproval

	ImplementTheChange
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end ImplementTheChange_PendingQualityPostApproval

to handle QualityPostApprovalOfChangeControl_VerifyErrorToAssignPFA
	
	QualityPostApprovalOfChangeControl
	if ImageFound(text:"Workflow task assignee group", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"must contain user", waitFor:120,Searchrectangle:ScreenPart("Center"))
		Put "Popup displayed as Expected" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Popup not displayed as Expected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	wait 2
	Click imageName:"OKButtonPopup", waitFor:120
	wait 5
end QualityPostApprovalOfChangeControl_VerifyErrorToAssignPFA

to handle QualityPostApprovalOfChangeControl_PENDINGFUNCTIONPOSTAPPROVAL

	QualityPostApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
end QualityPostApprovalOfChangeControl_PENDINGFUNCTIONPOSTAPPROVAL

to handle CreateCC_Draft_Hygiene

	SelectingQMSProcess
	CreateCC_Hygiene
	VerifyLifeCycleState_Draft
	
end CreateCC_Draft_Hygiene

(*to handle UserRoleSetup_QA_CC_VerifyErrorMessage_NotToAddSameUser

	AssignUser_Teams_QA_CC
	VerifyErrorMessage_NotToAddSameUser
	
end UserRoleSetup_QA_CC_VerifyErrorMessage_NotToAddSameUser *)

to handle Remove_FA_fromUsers

	RemoveUserFromTeam_FunctionApprover
	
end Remove_FA_fromUsers

//
to handle RemoveUserFromTeam Role
	try
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		
		WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		
		click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 2
		
		put "Manage Teams page displayed" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog	
		//Click imagelocation(text:Role,searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,3)
		
		Set the searchrectangle to (topRight of imagerectangle(text:Role)+(0,-3),topRight of imagerectangle(text:Role)+(400,60))
		if imagefound(image:"CloseIcon") // take image closeicon
			click foundimagelocation()
		else
			click imagelocation(text:Role)+(200,10)
			Typetext controlkey,a
			Typetext backspace
		end if
		
		set the searchrectangle to ()
		click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 5
		put Role&" User Removed from Team" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	Catch theException
		
		LogError theException
		
		CaptureAtLog
		
		
	End try
end RemoveUserFromTeam
//
(*to handle RemoveUserFromTeam_FunctionApprover

	Click Image:"UserRoleSetup", waitFor:120
	wait 3
	WaitFor 120, text:"Show in tab"
	click ImageLocation(text:"Function Approver", waitFor:50)+[-200,0]
	Click imageName:"CogWheelNew", waitFor:120
	Click text:"Delete", waitFor:120
	Click text:"Continue", waitFor:120,searchRectangle:ScreenPart("Center")
	Put "FunctionApprover removed from users list" into global Vstep
	Log global Vstep
	CaptureAtLog
end RemoveUserFromTeam_FunctionApprover*)

to handle RemoveUserFromTeam_FunctionApprover

	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:"Function Approver",searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[155,25]
		wait 5
		Typetext controlkey,a
		Typetext backspace
		Typetext backspace

		wait 5
		click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	Put "FunctionApprover removed from users list" into global Vstep
	Log global Vstep
	CaptureAtLog
end RemoveUserFromTeam_FunctionApprover
to handle UserRoleSetup_FA_CC_VerifyErrorMessage_NotToAddSameUser

	AssignUser_Teams_FA_CC
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	//VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	//VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	//VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyErrorMessage_NotToAddSameUser
	
end UserRoleSetup_FA_CC_VerifyErrorMessage_NotToAddSameUser

//Assign_FunctionApprover_second
(*to handle Assign_FunctionApprover_second

	UserRoleSetup "Nutrition CC 2 Function Approver","Function Approver" 
	
end Assign_FunctionApprover_second*)
to handle Assign_FunctionApprover_second

	AssignUser_Teams_secondFA "Nutrition CC 2 Function Approver","Function Approver" 
	
end Assign_FunctionApprover_second

to handle AssignUser_Teams_secondFA UserFirstName,Role
try
		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[300,33]
		wait 5
		//Typetext controlkey,a
		//Typetext backspace
		wait 5
		Typetext UserFirstName
		wait 5
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 5
		//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		put Role&" Assigned successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 15
		ScrollWheelUp 50
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	end AssignUser_Teams_secondFA
to handle AssignToChangeCordinator_IAAP

	//AssignToChangeCordinator
	AssignUser_Teams_CC
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end AssignToChangeCordinator_IAAP

to handle AssignFA_2Users

	//AssignUser_Teams_FA
	AssignUser_Teams_secondFA "Nutrition CC 1 Function Approver","Function Approver" 
	AssignUser_Teams_secondFA "Health CC 1 Function Approver","Function Approver" 
	
	//AssignUser_Teams_FA_third
	
end AssignFA_2Users
AssignUser_Teams_secondFA

to handle SearchRecord_Fill_Product_AndLocationInformation

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end SearchRecord_Fill_Product_AndLocationInformation

to handle FunctionApprovalOfChangeControl_PendingFunctionApproval

	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end FunctionApprovalOfChangeControl_PendingFunctionApproval

to handle FunctionApprovalOfChangeControl_PendingFunctionApproval_Second
	
	try
	scrollwheelup 50
		//Put "Approved" into global FAverdict
		//Click imageName:"FunctionApprovalofChangeContro", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 3
		if global FAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText "Function.cc.2.N@sb-reckitt.com"
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText "rbQone@2test"
			wait 2
			Click imageName:"Complete", waitFor:120
			
			Put "FunctionApproverApprovedAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global FAverdict is "Rejected"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"Testing rejected"
			Click imageName:"Complete", waitFor:120
			
			Put "FunctionApproverRejectAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "ApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end FunctionApprovalOfChangeControl_PendingFunctionApproval_Second

to handle CreateAI_and_IA_VerifyCannotRaiseDateDueExtensionRequest

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	VerifyNotAbleToCreate_DateDueExtensionRequest_CC
	
end CreateAI_and_IA_VerifyCannotRaiseDateDueExtensionRequest

to handle SearchRecord_IAAP_CreateDateDueExtension

	SearchRecord
	VerifyAbleToCreate_DateDueExtensionRequest
	CM_DateDueExtension
	
end SearchRecord_IAAP_CreateDateDueExtension

to handle SearchRecord_CannotEdit_DateDueExtension

	CannotEdit_ExistingDateDueExtensionRequest
	
end SearchRecord_CannotEdit_DateDueExtension

to handle QualityApprovalOfChangeControl_InImplementation

	SearchRecord
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	
end QualityApprovalOfChangeControl_InImplementation

to handle CannotEdit_GeneralInformation_ImpactAssessment

	CannotEdit_GeneralInformation_InImplementation
	CannotEdit_ImpactAssessmentOutputSection_InImplementation
	
end CannotEdit_GeneralInformation_ImpactAssessment

to handle SearchRecord_CannotEdit_ExistingDateDueExtensionRequest

	SearchRecord
	CannotEdit_ExistingDateDueExtensionRequest
	
end SearchRecord_CannotEdit_ExistingDateDueExtensionRequest

to handle CanEdit_ImpactAssessment_GeneralInformation

	SearchRecord
	CanEdit_ImpactAssessmentOutputSection
	CanEdit_GeneralInformation
	
end CanEdit_ImpactAssessment_GeneralInformation

to handle VerifySKUProductIndicationStatus_AsRed

	NavigateToFormulationsDevicesSection
	VerifyIndicationStatus_AsRed
	
end VerifySKUProductIndicationStatus_AsRed

to handle Add_FormulationDevice

	NavigateToFormulationsDevicesSection
	Add_ProductObject
	
end Add_FormulationDevice

to handle PrepareImpactAssessmentActionPlan_VerifyErrorRelatedToProduct

	PrepareImpactAssessmentActionPlan
	VerifyErrorToRemoveProductObject
	
end PrepareImpactAssessmentActionPlan_VerifyErrorRelatedToProduct

to handle Remove_SKUProductObject

	NavigateToImpactedProductInformationSection
	Remove_ProductObject_RedStatus
	
end Remove_SKUProductObject

to handle VerifyFormulationDeviceIndicationStatus_AsRed

	NavigateToSemiFinishedMaterialSection
	VerifyIndicationStatus_AsRed
	
end VerifyFormulationDeviceIndicationStatus_AsRed

to handle Add_SemiFinishedMaterial

	NavigateToSemiFinishedMaterialSection
	Add_ProductObject
	
end Add_SemiFinishedMaterial

to handle PrepareImpactAssessmentActionPlan_RemoveErrorObjects

	PrepareImpactAssessmentActionPlan
	VerifyErrorToRemoveProductObject
	
end PrepareImpactAssessmentActionPlan_RemoveErrorObjects

to handle Remove_FormulationObject

	NavigateToFormulationsDevicesSection
	Remove_ProductObject_RedStatus
	
end Remove_FormulationObject

to handle VerifySemiFinishedMaterialIndicationStatus_AsRed

	NavigateToRawMaterialSection
	VerifyIndicationStatus_AsRed
	
end VerifySemiFinishedMaterialIndicationStatus_AsRed

to handle Add_RawMaterialObject

	NavigateToRawMaterialSection
	Add_ProductObject
	
end Add_RawMaterialObject

to handle Remove_SemiFinishedObject

	NavigateToSemiFinishedMaterialSection
	Remove_ProductObject_RedStatus
	
end Remove_SemiFinishedObject

to handle VerifyRawMaterialIndicationStatus_AsRed

	NavigateToPackagingMaterialSection
	VerifyIndicationStatus_AsRed
	
end VerifyRawMaterialIndicationStatus_AsRed

to handle Add_PackagingMaterial

	NavigateToPackagingMaterialSection
	Add_ProductObject
	
end Add_PackagingMaterial

to handle Remove_RawMaterialObject

	NavigateToRawMaterialSection
	Remove_ProductObject_RedStatus
	
end Remove_RawMaterialObject

to handle Remove_PackagingObject

	NavigateToPackagingMaterialSection
	Remove_ProductObject_RedStatus
	
end Remove_PackagingObject

to handle CreateCC_Draft_AssignUsers

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	
end CreateCC_Draft_AssignUsers

to handle Navigate_and_CreateRiskAssessment

	NavigateToRiskAssessment
	CreateRiskAssessment
	
end Navigate_and_CreateRiskAssessment

to handle CreateButtonNotAvailable_RiskAssessment

	NavigateToImpactAssessmentOutputSection
	CannotEdit_ImpactAssessmentOutputSection
	NavigateToRiskAssessment
	CreateButtonNotAvailable
	
end CreateButtonNotAvailable_RiskAssessment

to handle PrepareImpactAssessmentActionPlan_VerifyErrorPromptTo_CreateRiskAssessment

	PrepareImpactAssessmentActionPlan_Buildintool
	VerifyErrorPromptTo_CreateRiskAssessment
	
end PrepareImpactAssessmentActionPlan_VerifyErrorPromptTo_CreateRiskAssessment
to handle PrepareImpactAssessmentActionPlan_Buildintool
try
	(*Put "ChangeNotRequired" into global PIAverdict
		Put "Raised In Error" into global ReasonForClosing*)
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		if global PIAverdict is "ChangeNotRequired"
			Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
			
			typetext"testing"
			wait 3
			//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
			Typetext tabKey
			//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
			wait 2
			Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			
			
			Typetext global ReasonForClosing
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
			Put "Change Coordinator Select Verdict as CloseChangeControl/ChangeNotRequired" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
			
			
		else if global PIAverdict is "SubmitForApproval"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			Typetext tabKey
			Typetext"testing"
			(*Click imageName:"ImpactAssessmentConclusionSummary", waitFor:50
			Typetext "test"*)
			Typetext tabKey
			Typetext "test"
			Typetext tabKey
			Typetext "test"
			TypeText tabKey
			
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText "Low"
			TypeText downArrow, return
			put "Change Coordinator Select Verdict as Submit for Approval" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end PrepareImpactAssessmentActionPlan_Buildintool
to handle SelectCC_Verify_CCFields

	SelectingQMSProcess
	Verify_CCFields
	
end SelectCC_Verify_CCFields

to handle Navigate_Add_Attachment

	navigateToAttachmentsSection
	Add_Attachment
	
end Navigate_Add_Attachment

to handle SearchRecord_VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval

	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput_withoutMandatoryFields
	PrepareImpactAssessmentActionPlan_withoutMandatoryFields
	VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_ImpactAssessmentActionPlanTask
	
end SearchRecord_VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval

to handle CreateIA

	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	
end CreateIA

to handle CreateAI

	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end CreateAI

to handle CreateCC_LoginToApplication_CC

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end CreateCC_LoginToApplication_CC

to handle Fill_Product_LocationInfo_VerifyErrorPromptToAssignFunctionApprover

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	VerifyErrorPromptToAssignFunctionApprover
	
end Fill_Product_LocationInfo_VerifyErrorPromptToAssignFunctionApprover

to handle CreateCC_ImplementTheChange_ChangeCoordinatorReview

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	ImplementTheChange
	
end CreateCC_ImplementTheChange_ChangeCoordinatorReview

to handle SearchRecord_PrepareImpactAssessmentActionPlan_PendingFunctionApproval

	SearchRecord
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end SearchRecord_PrepareImpactAssessmentActionPlan_PendingFunctionApproval

to handle QualityApprovalOfChangeControl_VerifyMandatoryFields

	SearchRecord
	(*QualityApprovalOfChangeControl_Verify_MandatoryFields*)
	try
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		
		click text:"Rejected",SearchRectangle:ScreenPart("Center")
		
		
		Put [] into NonMandatoryFields
		Put [] into MandatoryFields
		
		if ImageFound(text:"Comments")
			insert "Comments" into MandatoryFields
		else
			insert "Comments" into NonMandatoryFields
		end if
		
		if number of items of DisplayedFields is 1
			Put "Comments field is Mandatory" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog		
			
		else
			Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
		end if
		
		click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
		Typetext"TestingRejected"
		Click imageName:"complete", waitFor:120
		Put "QArejectedCC" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end QualityApprovalOfChangeControl_VerifyMandatoryFields

to handle ProgressTo_PendingQualityApproval_VerifyFields

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FAFinalApproval_second
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end ProgressTo_PendingQualityApproval_VerifyFields

to handle FAApproval_VerifyMandatoryFields

	SearchRecord
	(*FAApproval_Verify_MandatoryFields*)
	try
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		wait 3
		
		click text:"Rejected",SearchRectangle:ScreenPart("Center")
		
		
		Put [] into NonMandatoryFields
		Put [] into MandatoryFields
		
		if ImageFound(text:"Comments")
			insert "Comments" into MandatoryFields
		else
			insert "Comments" into NonMandatoryFields
		end if
		
		if number of items of DisplayedFields is 1
			Put "Comments field is Mandatory" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog		
			
		else
			Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
		end if
		
		click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
		Typetext"RejectByPFA"
		Click imageName:"Complete", waitFor:120
		Put "FAFinalapprovalRejected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
end FAApproval_VerifyMandatoryFields

to handle WithoutNextSteps_VerifyErrorMessage_ToFillNextSteps

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
	QualityPostApprovalOfChangeControl_withoutNextSteps
	wait 5
	VerifyErrorMessage_ToFillNextSteps
	wait 10
	
end WithoutNextSteps_VerifyErrorMessage_ToFillNextSteps

to handle ProgressTo_PendingQualityPostApprover

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	wait 10
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end ProgressTo_PendingQualityPostApprover

to handle ProgressTo_PendingFunctionPostApprover

	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	(*LogOut*)
	
end ProgressTo_PendingFunctionPostApprover

to handle FAApproval_VerifyMandatoryFields_CoordinatorReview

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
	(*FAApproval_Verify_MandatoryFields*)
	
	Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Verdict",Searchrectangle:ScreenPart("Center")
	click text:"Rejected",SearchRectangle:ScreenPart("Center")
	
	
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Comments")
		insert "Comments" into MandatoryFields
	else
		insert "Comments" into NonMandatoryFields
	end if
	
	if number of items of DisplayedFields is 1
		Put "Comments field is Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
	click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
	Typetext"RejectByPFA"
	Click imageName:"Complete", waitFor:120
	wait 10
	Put "FAFinalapprovalRejected" into global Vstep
	Log global Vstep
	CaptureAtLog
	
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end FAApproval_VerifyMandatoryFields_CoordinatorReview

to handle CreateCC_PendingFunctonPostApproval_Logout

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	if ImageFound(text:"Implement The Change", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant"))
		ImplementtheChange
		ReviewTheImplementationOfTheChange
	else
		ReviewTheImplementationOfTheChange
	end if
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	LogOut
	
end CreateCC_PendingFunctonPostApproval_Logout

to handle Navigate_and_CreateAffectedLocationInformation

	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	
end Navigate_and_CreateAffectedLocationInformation

to handle SelectCC_VerifyAffectedLocationFieldValues

	SelectingQMSProcess
	VerifyAffectedLocationFieldValues
	
end SelectCC_VerifyAffectedLocationFieldValues

to handle SearchRecord_CannotEdit_DateDueExtensionRequest
	NavigateToSectionFromLeftPane"Date Due Amendments"
		
	//if ImageFound(Image:"edit_img")
		//Put "Error message displayed" into global Vstep
		//Log global Vstep
		
		//CaptureAtLog
	//else
		//Put "Error message not displayed" into global Vstep
		//Log global Vstep
		
		//CaptureAtLog
	//end if
	
	CreateButtonAvailable
	
	
end SearchRecord_CannotEdit_DateDueExtensionRequest

to VerifyNotAbleToCreate_EditDateDueExtensionRequest

	VerifyNotAbleToCreate_DateDueExtensionRequest
	CannotEdit_DateDueExtensionRequest
	
end VerifyNotAbleToCreate_EditDateDueExtensionRequest

to handle VerifyAbleToCreate_and_CreateDateDueExtension

	VerifyAbleToCreate_DateDueExtensionRequest
	CM_DateDueExtension
	
end VerifyAbleToCreate_and_CreateDateDueExtension

to handle SearchRecord_AddSupplementaryInformation

	SearchRecord
	VerifyLifeCycleState_CLOSEDIMPLEMENTED
	AddSupplementaryInformation
	
end SearchRecord_AddSupplementaryInformation

to handle CreateCC_ClosedImplemented

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	ImplementTheChange
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	LogOut
	
	LoginToApplication_PFA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	QualityPostApprovalOfChangeControl
	VerifyLifeCycleState_CLOSEDIMPLEMENTED
	LogOut
	
end CreateCC_ClosedImplemented

//CreateRiskAssessment_Create
to handle CreateRiskAssessment_Create
	try
		NavigateToRiskAssessment
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Change Control Risk Item",searchrectangle:ScreenPart("Center")
		Put "Risk Assessment Create popup displayed successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreateRiskAssessment_Create

//CreateRiskAssessment_FillFields
to handle CreateRiskAssessment_FillFields
	try
		click ImageLocation(text:"Risk Description",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		Typetext tabKey
		//Click ImageLocation(text:"Risk Rating",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Medium"
		wait 1
		Typetext downArrow, return
		Click ImageLocation(text:"Risk Response",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext"Test"
		wait 1
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		
		Put "Risk Assessment Created successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		NavigateToSectionFromLeftPane "General Information"
		ScrollWheelUp 30
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end CreateRiskAssessment_FillFields


to handle CancelTask

	CancelTask_FromCogWheel_WorkFlowTimeLine
	
end CancelTask


to handle ProgressFrom_IAandAP_ToPendingFunctionApproval

	SearchRecord_CreateAI_and_IA
	//AddFunction_Location_PendingFunctionApproval
	AddFunction_Location_PendingFunctionApproval_CCPL
end ProgressFrom_IAandAP_ToPendingFunctionApproval

to handle ProgressFrom_IAandAP_ToPendingQualityApproval

	SearchRecord_CreateAI_and_IA
	ProgressTo_PendingQualityApproval_Hygiene
	
end ProgressFrom_IAandAP_ToPendingQualityApproval

to handle CM_DateDueExtension_WithoutJustificationAndReason
	
	try
		NavigateToSectionFromLeftPane"General Information"
		(*		put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		put ReadText(topRight of ImageRectangle(text:"Date Due"),ImageLocation(text:"Date Due")+[300,30]) into ExistingDateDue
		Log ExistingDateDue*)
		put global CCDateDue into ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendments"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext NewDateDue
		click ImageLocation(text:"Date Due Changed to")+[100,0]
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		click ImageLocation(text:"Date Due Changed to")
		(*if ImageFound(text:NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])*)
		put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		(*		else
			put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if*)
		ScrollWheelUp 50
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try	
end CM_DateDueExtension_WithoutJustificationAndReason

//Assign_ChangeCoordinator_second 
to handle Assign_ChangeCoordinator_second 
	UserRoleSetup global CC_second,"Change Coordinator" 
end Assign_ChangeCoordinator_second 

//PrepareImpactAssessmentActionPlan_InImplementation
to handle PrepareImpactAssessmentActionPlan_InImplementation

	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
end PrepareImpactAssessmentActionPlan_InImplementation

//OpenIA_Assign_QAAndActionOwner
to handle OpenIA_Assign_QAAndActionOwner

	OpenRecord_IA_Draft
	AssignUser_Teams_ActionOwner
	//AssignUser_Teams_QA
		
end OpenIA_Assign_QAAndActionOwner

to handle PrepareImpactAssessmentActionPlan_CLOSEDCHANGENOTPROGRESSED
	
	//PrepareImpactAssessmentActionPlan_Verdict
	PrepareImpactAssessmentActionPlan_Verdict_CCPL
	VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	
end PrepareImpactAssessmentActionPlan_CLOSEDCHANGENOTPROGRESSED

to handle LoginToApplication_CC_Create_2IA

	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	CreateImplementationAction
	
end LoginToApplication_CC_Create_2IA

to handle OpenRecord_ProgressIATo_PendingFunctionApproval
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//StartImplementation
	//VerifyLifeCycleState_Draft
	SubmitActionForPreApproval
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end OpenRecord_ProgressIATo_PendingFunctionApproval

to handle ProgressFrom_IAandAP_ToInImplementation

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
end ProgressFrom_IAandAP_ToInImplementation

to handle ProgressFrom_IAandAP_ToInImplementation_CCPL

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
end ProgressFrom_IAandAP_ToInImplementation_CCPL


to handle ProgressIATo_WorkInProgress_SearchRecord_CC

	SearchRecord 
	OpenRecord_IA_PENDINGQUALITYAPPROVAL
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfAction
	VerifyLifeCycleState_WORKINPROGRESS
	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	
end ProgressIATo_WorkInProgress_SearchRecord_CC

to handle OpenRecord_ProgressIATo_PendingQualityApproval

	SearchRecord
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	AssignUser_Teams_QA
	//StartImplementation
	//VerifyLifeCycleState_Draft
	SubmitActionForApproval_Hygiene
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end OpenRecord_ProgressIATo_PendingQualityApproval

to handle OpenRecord_ProgressIATo_PendingQualityApproval_CCPL
	//SearchRecord
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//StartImplementation
	//VerifyLifeCycleState_Draft
	SubmitActionForApproval_Hygiene
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
end OpenRecord_ProgressIATo_PendingQualityApproval_CCPL

to handle OpenRecord_ProgressIATo_PendingQualityApproval_CCPL_NoFA
	//SearchRecord
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	//AssignUser_Teams_FA
	AssignUser_Teams_QA
	//StartImplementation
	//VerifyLifeCycleState_Draft
	SubmitActionForApproval_Hygiene
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
end OpenRecord_ProgressIATo_PendingQualityApproval_CCPL_NoFA

to handle LoginToApplication_CC_ProgressIA_ToClosedComplete
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end LoginToApplication_CC_ProgressIA_ToClosedComplete

to handle SubmitActionForPreApproval_PENDINGQUALITYAPPROVAL
	//StartImplementation
	SubmitActionForApproval_Hygiene
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end SubmitActionForPreApproval_PENDINGQUALITYAPPROVAL

to handle SearchRecord_ProgressIATo_WorkInProgress

	SearchRecord 
	OpenRecord_IA_PENDINGQUALITYAPPROVAL
	QualityApprovalOfAction
	VerifyLifeCycleState_WORKINPROGRESS
	
end SearchRecord_ProgressIATo_WorkInProgress

to handle CreateCC_PendingQualityPostApproval_LogOut

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	wait 20
	Add_ImpactedProduct
	wait 20
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	wait 20
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	ImplementTheChange
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	LogOut
	
	LoginToApplication_PFA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	LogOut
	
end CreateCC_PendingQualityPostApproval_LogOut

to handle LoginToApplication_CC_CancelTask_CHANGECOORDINATORREVIEW

	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	CancelTask
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	
end LoginToApplication_CC_CancelTask_CHANGECOORDINATORREVIEW

to handle ProgressTo_ChangeNotProgressed_withoutFA

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	QualityApprovalOfCC_Closure_ChangeNotProgressed
	VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	
end ProgressTo_ChangeNotProgressed_withoutFA

to handle ProgressTo_ChangeNotProgressed_withoutFA_CCPL

	OpenDependentRecord1
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL
	VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
	
end ProgressTo_ChangeNotProgressed_withoutFA_CCPL
//to handle ProgressIATo_WorkInProgress_SearchRecord_CC

//SearchRecord 
//OpenRecord_IA_PENDINGQUALITYAPPROVAL
//VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
//QualityApprovalOfAction
//VerifyLifeCycleState_WORKINPROGRESS
//SearchRecord
//VerifyLifeCycleState_INIMPLEMENTATION

//end ProgressIATo_WorkInProgress_SearchRecord_CC

(*to handle Assign_3FunctionApprovers

	AssignUser_Teams_FA
	AssignUser_Teams_FA_Second
	AssignUser_Teams_FA_Third
	
end Assign_3FunctionApprovers*)

to handle LoginToApplication_CC_CreateIA

	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	
end LoginToApplication_CC_CreateIA

to handle AddFunction_Location_VerifyErrorPrompt

	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	if ImageFound(text:"This record requires at least one", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"user to be assigned to the Function Approver", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"team roles to enter", waitFor:120,Searchrectangle:ScreenPart("Center"))
		Put "Popup displayed as Expected" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Popup not displayed as Expected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end AddFunction_Location_VerifyErrorPrompt

//Activities
to handle LaunchAndLoginToApplication_Originator_IACT

	PreExecution
	ImplementationActivityUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_Originator
	
end LaunchAndLoginToApplication_Originator_IACT


to handle CreateCC_Health_InImplementation

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	// add change coordinator
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
end CreateCC_Health_InImplementation

to handle ImplementationAction_WorkinProgress
	LoginToApplication_ActionOwner
	SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.VerifyLifeCycleState_WORKINPROGRESS
	LogOut
end ImplementationAction_WorkinProgress

to handle Create_ImplementationActivity_from_search

	W_App_CommonHandlers.SearchRecord 
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.VerifyLifeCycleState_WORKINPROGRESS	
	W_App_CommonHandlers.CreateImplementationActivities_VerifyMandatoryFields
	W_App_CommonHandlers.OpenRecord_ACT_Draft
	(*W_App_CommonHandlers.VerifyLifeCycleState_Draft*)
	
end Create_ImplementationActivity_from_search

to handle AssignActivityOwner_WORKINPROGRESS

	W_App_CommonHandlers.ACT_StartActivity
	Wait 10
	W_App_CommonHandlers.VerifyLifeCycleState_WORKINPROGRESS
	LogOut
	
end AssignActivityOwner_WORKINPROGRESS

to handle AssignACTOwner_WORKINPROGRESS

	W_App_CommonHandlers.ACT_StartActivity
	wait 10
	W_App_CommonHandlers.VerifyLifeCycleState_WORKINPROGRESS
	
end AssignACTOwner_WORKINPROGRESS

to handle OpenIActivityWorkinProgress

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.OpenRecord_ACT_WORKINPROGRESS
	
end OpenIActivityWorkinProgress

to handle IActivity_VerifyAbletoAttach_UploadAttachements

	W_App_CommonHandlers.VerifyAbleToAddAttachments
	W_App_CommonHandlers.Add_Attachment
	
end IActivity_VerifyAbletoAttach_UploadAttachements

to handle IActivity_VerifyAbletoCreateDateDueExtension_Create

	W_App_CommonHandlers.VerifyAbleToCreate_DateDueExtensionRequest
	W_App_CommonHandlers.CM_DateDueExtension
	VerifyErrorMessage_IACTDateDueMoreThan_IA_DateDue
	
end IActivity_VerifyAbletoCreateDateDueExtension_Create

to handle VerifyErrorMessage_IACTDateDueMoreThan_IA_DateDue

if ImageFound(text:"Date Due needs to be before the Implementation Action Date Due",waitfor:20,searchrectangle:ScreenPart("TopHalf"))
			
			put "Error message displayed as expected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			put "Error message not displayed as expected" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Click text:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomRightQuadrant")

end VerifyErrorMessage_IACTDateDueMoreThan_IA_DateDue

to handle Activity_Progress_PendingInformation

	W_App_CommonHandlers.ImplementationActivityTobeCompleted
	W_App_CommonHandlers.VerifyLifeCycleState_PENDINGINFORMATION
	
end Activity_Progress_PendingInformation

to handle OpenIActivityPendingInformation

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.OpenRecord_ACT_PENDINGINFORMATION
	
end OpenIActivityPendingInformation


to handle Navigate_and_VerifyRecordDetailsSection

	NavigateToRecordDetailsSection
	VerifyRecordDetailsSection
	
end Navigate_and_VerifyRecordDetailsSection

to handle ErrorMessage_For_Updated_IActivity_DateDue_Earlierthan_IADateDue

	//ImplementationActivityUATFetchingData
	VerifyErrorMessage_IACTDateDueMoreThan_CC_DateDue
	VerifyErrorMessage_IACTDateDueLessThan_Current_Date_Due
	
end ErrorMessage_For_Updated_IActivity_DateDue_Earlierthan_IADateDue

to handle SearchRecord_VerifyAbletoCreateDateDueExtension_Create

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.OpenRecord_ACT_WORKINPROGRESS
	W_App_CommonHandlers.CancelTask_FromCogWheel_WorkFlowTimeLine
	W_App_CommonHandlers.VerifyAbleToCreate_DateDueExtensionRequest
	W_App_CommonHandlers.CM_DateDueExtension
	W_App_CommonHandlers.VerifyErrorMessage_IACTDateDueMoreThan_IA_DateDue
	W_App_CommonHandlers.DateDueExtension_Activity
	
end SearchRecord_VerifyAbletoCreateDateDueExtension_Create

to handle SearchRecord_VerifyAbletoCreateDateDueExtension_Create_CC

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.OpenRecord_ACT_WORKINPROGRESS
	W_App_CommonHandlers.VerifyAbleToCreate_DateDueExtensionRequest
	W_App_CommonHandlers.CM_DateDueExtension
	W_App_CommonHandlers.VerifyErrorMessage_IACTDateDueMoreThan_IA_DateDue
	W_App_CommonHandlers.DateDueExtension_Activity

end SearchRecord_VerifyAbletoCreateDateDueExtension_Create_CC

to handle DateDueExtension_Activity

try
		NavigateToSectionFromLeftPane"General Information"
		put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		put ReadText(topRight of ImageRectangle(text:"Date Due"),ImageLocation(text:"Date Due")+[300,30]) into ExistingDateDue
		Log ExistingDateDue
		//put global ACTDateDue into ExistingDateDue
		//Log ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into global NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendments"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext global NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",waitFor:120,searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		click ImageLocation(text:"Date Due Changed to")
		if ImageFound(text:global NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
			put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else
			put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
		
		NavigateToSectionFromLeftPane"General Information"
		ScrollWheelUp 50
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end DateDueExtension_Activity

to handle Activity_VerifyError_ClosedComplete

	W_App_CommonHandlers.ImplementationActivityTobeCompleted_VerifyMandatoryFields
	W_App_CommonHandlers.VerifyLifeCycleState_CLOSEDCOMPLETE
	
end Activity_VerifyError_ClosedComplete

to handle ActivityClosedInComplete_VerifyFields

ImplementationActivityTobeCompleted_VerifyMandatoryFields
VerifyLifeCycleState_CLOSEDINCOMPLETE

end ActivityClosedInComplete_VerifyFields

to handle OpenIActivityClosedComplete

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	W_App_CommonHandlers.NavigateToImplementationActivities
	W_App_CommonHandlers.OpenRecord_CLOSEDCOMPLETE
	
end OpenIActivityClosedComplete

to handle OpenIActivityClosedComplete_VerifyAbleToAddSupplementaryInformation

	//W_App_CommonHandlers.SearchRecord
	//W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	//W_App_CommonHandlers.NavigateToImplementationActivities
	//W_App_CommonHandlers.OpenRecord_CLOSEDCOMPLETE
	W_App_CommonHandlers.VerifyAbleToAddSupplementaryInformation
	
end OpenIActivityClosedComplete_VerifyAbleToAddSupplementaryInformation

to handle Add_Open_SupplementaryInformation_AttcahFile

	W_App_CommonHandlers.AddSupplementaryInformation
	OpenChildRecord_withSupplementary
	AttachFile_CommentsField
	
end Add_Open_SupplementaryInformation_AttcahFile

to handle OpenIAWorkinProgress

	W_App_CommonHandlers.SearchRecord
	W_App_CommonHandlers.OpenRecord_IA_WORKINPROGRESS
	
end OpenIAWorkinProgress

to handle ImplementationAction_Progress_InComplete

	W_App_CommonHandlers.ImplementationActionTobeCompleted
	W_App_CommonHandlers.VerifyLifeCycleState_CLOSEDINCOMPLETE
	
end ImplementationAction_Progress_InComplete

to handle OpenActivity_Incomplete_fromNaviagationActivity
	Wait 15
	W_App_CommonHandlers.NavigateToImplementationActivities
	Draft_InProgress_State_NotAvailable
	
end OpenActivity_Incomplete_fromNaviagationActivity

to handle ImplementationActivity_Start

	W_App_CommonHandlers.ACT_StartActivity
	W_App_CommonHandlers.VerifyLifeCycleState_WORKINPROGRESS
	
end ImplementationActivity_Start


to handle EditDueDate_IAAPState

	try
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		//waitfor 120,text:GivenFieldName,SearchRectangle:ScreenPart("Center")+[100,100]
		//Put "Affected Location Type" into GivenFieldName
		//Click ImageLocation(text:GivenFieldName,SearchRectangle:ScreenPart("Center"))+[100,0]
		Click ImageLocation(text:"Date Due")+[100,0]
		Typetext Controlkey,a
		Typetext Backspace
		wait 1
		Typetext "28 Dec 2021"
		wait 2
		Typetext return
		Click (text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		//if GivenFieldName is "Brand Related (but not product specific)" then verify Brand(s) field
		
		Put "Date Due updated successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		
		LogError theException
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	end try
	
end EditDueDate_IAAPState


to handle EditDueDate_IAAP

	SearchRecord
	EditDueDate_IAAPState
	
end EditDueDate_IAAP


to handle SearchRecord_CreateAI_and_IA_AssignFA

	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	
end SearchRecord_CreateAI_and_IA_AssignFA

to handle SearchRecord_ProgressIATo_ClosedComplete
	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end SearchRecord_ProgressIATo_ClosedComplete


to handle Logout_LoginToApplication_ChangeCoordinator

	LogOut
	LoginToApplication_CC
	
end Logout_LoginToApplication_ChangeCoordinator

to handle CreateCC_ProgressTo_InImplementation

	SelectingQMSProcess
	CreateCC
	VerifyLifeCycleState_Draft
	AssignUser_Teams_CC
	AssignUser_Teams_FA
	AssignUser_Teams_QA
	AssignUser_Teams_PFA
	//AssignToChangeCordinator
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	LogOut
	
end CreateCC_ProgressTo_InImplementation

to handle LoginToApplication_CC_ImplementTheChange_VerifyError

LoginToApplication_CC
SearchRecord
Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
		
			Click text:"Change Not Implemented", waitFor:120,SearchRectangle:ScreenPart("Center")
			//Typetext tabkey
			//Typetext"Testing"
			//Typetext tabkey
			//wait 1
			//Typetext"Change no longer required"
			//wait 1
			//Typetext downArrow
			//typetext return
			(*put "No" into global PFArequired*)
			Set the searchrectangle to [bottomLeft of ImageRectangle(text:"Function Post",SearchRectangle:ScreenPart("BottomHalf")),RemoteScreenSize()]
			If global PFArequired is "Yes"
				Click text:"Yes", waitFor:120
			else
				Click text:"No", waitFor:120
			End If
			Set the searchrectangle to []
			
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
			wait 8
			Put "Compelted Task without Justification and ReasonForCancel" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	VerifyErrorMessage_ToFillReasonAndJustification

end LoginToApplication_CC_ImplementTheChange_VerifyError

to handle SearchRecord_InImplementation_PQA

	ImplementTheChange -- NEED TO CHANGE TEST DATA
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end SearchRecord_InImplementation_PQA

to handle SearchRecord_InImplementation_PendingFunctionClosureApproval

	SearchRecord
	VerifyLifeCycleState_INIMPLEMENTATION
	ImplementTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end SearchRecord_InImplementation_PendingFunctionClosureApproval

to handle OpenIA_ClosedInComplete

	NavigateToImplementationAction
	Draft_InProgress_State_NotAvailable
	(*	OpenRecord_CLOSEDINCOMPLETE
	VerifyLifeCycleState_CLOSEDINCOMPLETE*)
	
end OpenIA_ClosedInComplete

to handle CC_Function_titles_status



end CC_Function_titles_status


to handle Draft_InProgress_State_NotAvailable
	
	wait 300
	TypeText F5
	Set the searchRectangle to [imagelocation(text:"Lifecycle State")+[-90,4],imagelocation(text:"Lifecycle State")+[140,400]]
	if ImageFound(text:"Draft", waitFor:10) or if ImageFound(text:"Pending Information", waitFor:10) or if ImageFound(text:"Pending Assessment", waitFor:10) or if ImageFound(text:"In progress", waitFor:10)
		Put "AllChildRecordsLifeCycleStateAreNotChangedToCLOSEDCANCELLED" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog	
	else
		//waitFor 50,image:"PendingCancellation"
		Put "All Non closed Records are move to Closed cancelled" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if 
	Set the SearchRectangle to []
	
	
	
	
end Draft_InProgress_State_NotAvailable


to handle QualityPostApprovalOfChangeControl_ClosedImplemented
	
	QualityPostApprovalOfChangeControl
	VerifyLifeCycleState_CLOSEDIMPLEMENTED
	
end QualityPostApprovalOfChangeControl_ClosedImplemented

to handle EditImpactAssessment_VerifyErrorMessage_ToFillJustification
	
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput_withoutJustification
	VerifyErrorMessage_ToFillJustification
	
end EditImpactAssessment_VerifyErrorMessage_ToFillJustification

to handle ImplementTheChange_PendingFunctionPostApproval

	ImplementTheChange
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	
end ImplementTheChange_PendingFunctionPostApproval

to handle CC_PostFunction_Titles_status

		NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	
	if ImageFound(text:"Nutrition CC 2 Function", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"Nutrition CC 2 Function",SearchRectangle:ScreenPart("LeftHalf"))
	else if ImageFound(text:"CC 2 Function", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"CC 2 Function",SearchRectangle:ScreenPart("LeftHalf"))
	end if
	waitfor 60,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for FA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for FA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"R & D", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	Put "Function name displayed for FA" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
else
	Put "Function name not displayed for FA" into global Vstep
	LogError global Vstep
	W_App_CommonHandlers.CaptureAtLog
end if
if ImageFound(text:"Testing title", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end CC_PostFunction_Titles_status

to handle FAFinal_PendingQualityPostApproval

	FAFinalApproval_second
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	
end FAFinal_PendingQualityPostApproval

//Dev step handlers
to handle OpenRecord_CI_WORKINPROGRESS

	SearchRecords_With_State_WorkInProgress
	
end OpenRecord_CI_WORKINPROGRESS

to handle NavigateToCapaItems
	NavigateToSectionFromLeftPane "CAPA Items"
end NavigateToCapaItems


to handle CompleteTheAction_CapaItem_WithoutJustificationReason

	try
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		
		Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
		if global CompleteTheActionVerdict Contains "Review"
			
			Click text:"Complete"
			wait 1
			Typetext tabKey
			Typetext"Testing"
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put "CompleteTheAction_TaskWithVerdictCompleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteTheActionVerdict Contains "Incomplete"
			
			Click text:"Incomplete (Closes as Incomplete)"
			wait 1
			//Typetext tabkey
			//Typetext "Test"
			//Typetext tabkey
			//Typetext "No Longer required"
			//wait 2
			//Typetext downArrow
			//Typetext return
			//wait 1
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"Submitted CAPA without Justification and Reason" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteTheActionVerdict Contains "Cancel"
			
			Click text:"Cancel Proposed Action"
			wait 1
			Typetext tabkey
			Typetext "Test"
			Typetext tabkey
			Typetext "Raised in error"
			wait 2
			Typetext downArrow
			Typetext return
			//click text :"No"
			click text:global CompleteTheAction_Function_Approver_Required
			Set the searchrectangle to []
			Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"CompleteTheAction_TaskWithVerdictCancel" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if 
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CompleteTheAction_CapaItem_WithoutJustificationReason


to handle ErrorMessageFor_WithoutJustificationReason

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	
end ErrorMessageFor_WithoutJustificationReason

to handle FillMandatoryFields_InComplete_FromWorkInProgress

	try
		
		Click text:"Incomplete (Closes as Incomplete)"
		wait 1
		Typetext tabkey
		Typetext "Test"
		Typetext tabkey
		Typetext "No Longer required"
		wait 2
		Typetext downArrow
		Typetext return
		wait 1
		(*Set the searchrectangle to []*)
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		wait 2
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		VerifyLifeCycleState_CLOSEDINCOMPLETE
		Put"Submitted CAPA with Justification and Reason" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end FillMandatoryFields_InComplete_FromWorkInProgress

to handle LaunchAndLoginToApplication_ActionOwner

	PreExecution
	
	DevFetchingDataForUAT
	
	ConnectToSUT
	
	LaunchApplication
	
	LoginToApplication_ActionOwner
	
end LaunchAndLoginToApplication_ActionOwner

to handle Pr_dev_ClosedApproved

	Put "RecordId fetching from testdate file"  into global Vstep
	Log global Vstep
	
end Pr_dev_ClosedApproved

to handle OpenCAPAItem_WorkInProgress

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
end OpenCAPAItem_WorkInProgress

to handle CAPAItem_WorkInProgress_InComplete_ErrorToFillMandatory

	CompleteTheAction_CapaItem_WithoutJustificationReason
	ErrorMessageFor_WithoutJustificationReason
	
end CAPAItem_WorkInProgress_InComplete_ErrorToFillMandatory

to handle LaunchAndLoginToApplication_Originator_DV

	PreExecution
	
	DevFetchingDataForUAT
	
	ConnectToSUT
	
	LaunchApplication
	LoginToApplication_Originator
	
end LaunchAndLoginToApplication_Originator_DV

to handle OpenCreateDeviationPage
	try
		SelectingQMSProcess
		wait 15
		Click text:"+ Create", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		waitfor 120,text:"Title",searchRectangle:ScreenPart("HorizontalMiddle")
		Put "Create Deviation Page displayed" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end OpenCreateDeviationPage

to handle FillDetailsInDeviationPage
	try
		
		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		
		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Country"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
		(*	Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationImpactedLocation
		Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[240,50]
		
		//regulatory classification class required Regulatory Classification
		Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationRegulatoryClassification
		Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[240,28]*)
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global BrandSpecific
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]
		
		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		NavigateToSectionFromLeftPane"General Information"
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		VerifyLifeCycleState_Draft
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	end try
end FillDetailsInDeviationPage

//AssignDeviationCoordinator
to handle AssignDeviationCoordinator
	try
		wait 4
		
		(*		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Assign Deviation Coordinator",searchRectangle:ScreenPart("Center")*)
		
		if global AssignDeviationCoordinatorVerdict is "Coordinator Assigned"
			Click text:"Deviation Coordinator Assigned", waitFor:120,searchRectangle:ScreenPart("Center")
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			Put "OriginatorAssignedToDeviationCoordinatorSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global AssignDeviationCoordinatorVerdict is "Cancel"
			
			//Click text:"Cancel Deviation", waitFor:120,searchRectangle:ScreenPart("Center")
			
			//Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Click imageName:"CancelImpactAssessment", waitFor:120
			
			Put "Cancelled the Deviation by Originator successfully " into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			VerifyLifeCycleState_CLOSEDCANCELLED
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end AssignDeviationCoordinator

to handle LaunchAndLoginToApplication_DC_DV

	PreExecution
	
	DevFetchingDataForUAT
	
	ConnectToSUT
	
	LaunchApplication
	LoginToApplication_DC
	
end LaunchAndLoginToApplication_DC_DV


to handle NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning

	NavigateHomePage_VerifyTask "Investigation, RCA & Action Planning"
	
end NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning

to handle NavigateHomePage_VerifyTask TaskName
	try
		
		Click text:"Home",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		Click text:"My Tasks",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 2
		Click imagelocation(text:"Due Date",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant"))+(100,0)
		Click text:"Date Received",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 5
		if imagefound(imageName:"DueDateOnHome",SearchRectangle:ScreenPart("TopHalf"),waitFor:120)
			click FoundImageLocation()
		end if
		wait 2
		
		put TaskName into global TaskName
		if imagefound(text:TaskName,contrastColor:"AutoDetect", contrast:"On", WaitFor:8, contrastTolerance:"45")
			
			Put TaskName&" available in the Tasks page" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put TaskName&" not available in the Tasks page" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end NavigateHomePage_VerifyTask

to handle ClickRecordIdHyperLinkfromTaskPage
	try
		click text:the suitevariables.RecordId,Searchrectangle:ScreenPart("TopHalf")
		wait 5
		waitfor 120,text:global TaskName,Searchrectangle:ScreenPart("TopLeftQuadrant")
		put "The Record Id page displayed and the Task available to Complete" into global Vstep
		
		log global Vstep
		CaptureAtLog	
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
end ClickRecordIdHyperLinkfromTaskPage

to handle ClickHyperlink_HomePage

	ClickRecordIdHyperLinkfromTaskPage
	AssignUser_Teams_QA
	
end ClickHyperlink_HomePage

to handle CompleteInvestigationRCAActionPlan_TaskOpen
	try
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		Put "InvestigationRCAActionPlan Task Popupdisplayed" into global Vstep
		Log global Vstep
		CaptureAtLog
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
	
end CompleteInvestigationRCAActionPlan_TaskOpen

to handle CompleteInvestigationRCA_verdict
	try
		if global CompleteInvestigationRCAVerdict is "Submit for approval"
			Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")
			// FA required or not
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else if global CompleteInvestigationRCA_FArequired is "No"
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
				
			end if
			
			
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 10
		else if global CompleteInvestigationRCAVerdict is "Cancel"
			
			Click imageName:"CancelMA", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else if global CompleteInvestigationRCA_FArequired is "No"
				click imageName:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Cancelled" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end CompleteInvestigationRCA_verdict

to handle CompleteInvestigationRCAActionPlan_Verdict

	CompleteInvestigationRCA_verdict
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	LogOut
	
end CompleteInvestigationRCAActionPlan_Verdict

to handle LoginAs_QA_OpenDev

	LoginToApplication_QA
	SearchRecord
	Dev_PendingCancellationQualityApproval_TaskOpen
	
end LoginAs_QA_OpenDev

to handle Dev_PendingCancellationQualityApproval_TaskOpen

	try
		Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
		waitfor 120,text:"Pending Quality Approval of Cancellation",SearchRectangle:ScreenPart("Center")
		Put "Pending Quality Approval of Cancellation Task pop up displayed"
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
	end try
end Dev_PendingCancellationQualityApproval_TaskOpen

to handle Dev_PendingCancellationQualityApproval

	Dev_PendingCancellationQualityApproval_TaskVerdict
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	
end Dev_PendingCancellationQualityApproval

//Dev_PendingCancellationQualityApproval_TaskVerdict
to handle Dev_PendingCancellationQualityApproval_TaskVerdict
	try
		if global PendingCancellationQualityApprovalVerdict contains "Approved"
			Click text:"Cancellation Quality Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingApproved"
			Typetext tabkey
			Typetext global  QAusername
			Typetext tabkey
			Typetext global QApassword
			
			wait 3
			Put "PendingCancellationQualityApprovalTaskCompletedWithApproved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomRightQuadrant")
			wait 10
			
		else if global PendingCancellationQualityApprovalVerdict contains "Rejected"
			Click text:"Cancellation Quality Rejected", waitFor:120,SearchRectangle:ScreenPart("Center")
			Typetext tabkey
			Typetext"TestingRejected"
			Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomRightQuadrant")
			Put "PendingCancellationQualityApprovalTaskCompletedWithRejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		else
			Put "AllverdictOptionsAreNotAvailableInPendingCancellationQualityApprovalTask" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
	End try
	
end Dev_PendingCancellationQualityApproval_TaskVerdict

to handle LaunchAndLoginToApplication_QA_DV

	PreExecution
	
	DevFetchingDataForUAT
	
	ConnectToSUT
	
	LaunchApplication
	LoginToApplication_QA
	
end LaunchAndLoginToApplication_QA_DV

to handle OpenCAPAProgram_PostApproval

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//NavigateToCapaRequirements
	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CP_PendingPostApproval
	VerifyLifeCycleState_PendingCapaPostApproval
	
end OpenCAPAProgram_PostApproval

to handle OpenCAPAItem_ClosedCompleted

	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end OpenCAPAItem_ClosedCompleted

to handle ReOpen_ClosedCompleted_CAPAItem

	ReopenCapaItem
	wait 300
	(*VerifyLifeCycleState_ReopenedCapaItem*)  //need to take image
	
end ReOpen_ClosedCompleted_CAPAItem

to handle VerifyLifeCycleState_ReopenedCapaItem

	VerifyLifeCycleState "Re-Opened CAPA Item"
	
end VerifyLifeCycleState_ReopenedCapaItem

to handle Verify_CAPAProgram_State

	(*	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CP_InExecution*)
	wait 5
	SearchRecord
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	VerifyLifeCycleState_INEXECUTION
	wait 5
	VerifyLifeCycleState_INEXECUTION
	
end Verify_CAPAProgram_State

to handle ReopenCapaItem

	try
		Click imageName:"CancelImpactAssessment", waitFor:120
		
		
		(*		WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Justification",searchRectangle:ScreenPart("Center"))+[0,25]
		typetext "Test"
		wait 1
		click item 2 of everyimagelocation( text:"Start",SearchRectangle:ScreenPart("Center"))*)
		Put "ActionReopenedSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		//W_App_CommonHandlers.VerifyLifeCycleState_ReopenedAction
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end ReopenCapaItem


to handle CaptureScreen_Attachment
	Put "Screen captured successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
end CaptureScreen_Attachment


to handle OpenCAPAProgramInExecution_ItemWorkInProgress

	SearchRecord
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	
end OpenCAPAProgramInExecution_ItemWorkInProgress

to handle CompletetheAction_NoFA_PendingQualityClosureApproval

	CompleteTheAction_CapaItem
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end CompletetheAction_NoFA_PendingQualityClosureApproval

to handle LoginQA_ApproveCancellation

	Logout
	LoginToApplication_QA
	SearchRecord
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaItems
	SearchRecords_With_State "PENDING QUALITY CLOSURE APPROVAL"
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	QualityClosureApproval_CapaItem
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end LoginQA_ApproveCancellation

to handle VerifyCAPAProgram_inExecution

	try
		if ImageFound(text:"CAPA Program ID", waitFor:120)
			put ReadText([imageLocation(text:"CAPA Program ID")+[32,-10], imageLocation(text:"CAPA Program ID")+[166,15]],validpattern:"[A-Z][A-Z]*-[0-9][0-9][0-9]*")  into existingId
			click ImageLocation(text:"CAPA Program")+[70,0]
			Put "CAPA Program screen is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "CAPA Program screen is not displayed" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	VerifyLifeCycleState_INEXECUTION
	
end VerifyCAPAProgram_inExecution

to handle LoginAO_cancelsecondCAPAItem_NoFA_PendingQualityClosureApproval

	Logout
	LoginToApplication_ActionOwner
	SearchRecord
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	CompleteTheAction_CapaItem
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
	
end LoginAO_cancelsecondCAPAItem_NoFA_PendingQualityClosureApproval

to handle OpenCAPAProgram_Closed_Cancelled

	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CLOSEDCANCELLED
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end OpenCAPAProgram_Closed_Cancelled

to handle LoginQA_ApproveCancellation_Second
	LoginQA_ApproveCancellation
end LoginQA_ApproveCancellation_Second

to handle SearchRecord_InProgress

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	
end SearchRecord_InProgress

to handle Navigate_and_ClickCreateButton_MitigationAction

	NavigateToMitigationAction
	CreateMitigationAction_Create--------Split
	
end Navigate_and_ClickCreateButton_MitigationAction

to handle SearchRecord_ClickCreateButton_MitigationAction

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	NavigateToMitigationAction
	CreateMitigationAction_Create--------Split
	
end SearchRecord_ClickCreateButton_MitigationAction

to handle OpenRecord_DraftMitigation

	OpenRecord_Draft 
	VerifyLifeCycleState_Draft
	
end OpenRecord_DraftMitigation

to handle Draft_WorkinProgress_AssignActionOwner
	(*DevFetchingDataForUAT*)
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner
	(*VerifyLifeCycleState_INPROGRESS*)
	
end Draft_WorkinProgress_AssignActionOwner

to handle LogOut_LoginToApplication_ActionOwner_VerifyTask_Homepage

	LogOut
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_INPROGRESS
	CompleteMitigationAction_Complete
	
end LogOut_LoginToApplication_ActionOwner_VerifyTask_Homepage

to handle CreateMitigationAction_Create

	try
		W_App_CommonHandlers.NavigateToMitigationAction
		
		(*Put "12 April 2021" into global MitigationDateDue*)
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 30, text:"Create Mitigation Action",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Create Mitigation Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		Put "Create Mitigation Action popup is displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	
end CreateMitigationAction_Create


To handle CreateMitigationAction
	try
		
		click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext "testsd"
		Typetext tabkey
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global MitigationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,100]
		wait 2
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		wait 2
		Put "Mitigation Deatails Entered and Saved in Create Mitigation Page" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
End CreateMitigationAction


to handle CompleteMitigationAction_Complete

	try
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
		Put "Complete Mitigation Action popup is displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end CompleteMitigationAction_Complete

to handle WorkInProgress_Cancel_Mitigation
	try
		if global CompleteMitigationActionVerdict is "Complete Action"
			Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Action Completion Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			wait 2
			Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteMitigationActionVerdict is "Cancel"
			
			Click imageName:"CancelMA", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Typetext tabKey
			Typetext "Raised in"
			Typetext downArrow,return
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 5
			Put "Action Owner Cancel Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global CompleteMitigationActionVerdict is "More Information Required"
			Click text:"More Information Required", waitFor:120,searchRectangle:ScreenPart("Center")
			Typetext tabKey
			TypeText "test"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			Put "Action Owner More Info required for Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end WorkInProgress_Cancel_Mitigation

to handle SearchRecord_QualityApprovalState

	SearchRecord_One
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	NavigateToMitigationAction
	try
		Put "MA-0029" into State
		Click text:"Record Last modified on",waitFor:120,SearchRectangle:ScreenPart("Center")
		wait 4
		
		if ImageFound(imageName:"RecordLastModifiedOn_down",SearchRectangle:ScreenPart("Center"),waitFor:120)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_up", waitFor:120,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 4
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step
log step*)
			Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			//click ImageLocation(text:"Record ID")+[0,38]
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			//put "CLOSED COMPLETE" into State
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:120,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"RecordIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	VerifyLifeCycleState_CLOSEDCOMPLETE
	SearchRecord_One
	NavigateToMitigationAction
	try
		Put "MA-0028" into State
		Click text:"Record Last modified on",waitFor:30,SearchRectangle:ScreenPart("Center")
		wait 5
		
		if ImageFound(imageName:"RecordLastModifiedOn_down",SearchRectangle:ScreenPart("Center"),waitFor:120)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_up", waitFor:120,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 4
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step
log step*)
			Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			//click ImageLocation(text:"Record ID")+[0,38]
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			//put "CLOSED COMPLETE" into State
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:120,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"RecordIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end SearchRecord_QualityApprovalState

to handle Verify_ReOpenOption_Mitigation

	SearchRecord_One
	NavigateToMitigationAction
	try
		Put "MA-0025" into State
		Click text:"Record Last modified on",waitFor:120,SearchRectangle:ScreenPart("Center")
		wait 4
		
		if ImageFound(imageName:"RecordLastModifiedOn_down",SearchRectangle:ScreenPart("Center"),waitFor:120)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_up", waitFor:120,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 4
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step
log step*)
			Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			//click ImageLocation(text:"Record ID")+[0,38]
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			//put "CLOSED COMPLETE" into State
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:120,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"RecordIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	VerifyLifeCycleState_CLOSEDCOMPLETE
	ReopenActionButtonAvailable_InCogWheelDD
	SearchRecord_One
	NavigateToMitigationAction
	try
		Put "MA-0028" into State
		Click text:"Record Last modified on",waitFor:120,SearchRectangle:ScreenPart("Center")
		wait 4
		
		if ImageFound(imageName:"RecordLastModifiedOn_down",SearchRectangle:ScreenPart("Center"),waitFor:120)
			
		else if ImageFound(imageName:"RecordLastModifiedOn_up", waitFor:120,SearchRectangle:ScreenPart("Center"))
			click FoundImageLocation()
			wait 3
		else
			put "RecordLastModifiedOnColumnIsNotDisplayingInTheTable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
		click ImageLocation(text:"Show in tab")+[-200,0]
		Typetext State, return
		wait 4
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step
log step*)
			Put State&"RecordIsAvailable" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			//click ImageLocation(text:"Record ID")+[0,38]
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			//put "CLOSED COMPLETE" into State
			if ImageFound(text:State,ignoreSpaces:Yes, waitFor:120,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
				Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"RecordIsNotAvailable" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	VerifyLifeCycleState_CLOSEDCANCELLED
	ReopenActionButtonAvailable_InCogWheelDD
	SearchRecord_One
	
end Verify_ReOpenOption_Mitigation

to handle ProgressDev_QA_ToClosedApproved

	(*SearchRecord*)
	(*DevFetchingDataForUAT*)
	Dev_PendingQualityApproval_Task
	VerifyLifeCycleState_ClosedApproved
	
end ProgressDev_QA_ToClosedApproved

to handle SearchRecord_QualityApprovalState_second

	SearchRecord_Second
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end SearchRecord_QualityApprovalState_second

to handle SearchRecord_One

	try
		wait 4
		Put "DV210622-028" into RecordIdOne
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50
		wait 4
		click text:"All",waitfor:120,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:120,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText RecordIdOne
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		
		
		if imagefound(text:RecordIdOne, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:120)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
	
	
end SearchRecord_One

to handle SearchRecord_Second

	try
		wait 4
		Put "DV210622-027" into RecordIdTwo
		Click text:"QMS Processes", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50
		wait 4
		click text:"All",waitfor:120,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:120,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText  RecordIdTwo
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Record ID"
		
		
		if imagefound(text:RecordIdTwo, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:120)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end SearchRecord_Second

to handle ProgressDev_QA_ToClosedApproved_second

	ProgressDev_QA_ToClosedApproved
	
end ProgressDev_QA_ToClosedApproved_second

to handle LaunchAndLoginToApplication_CAPACoordinator

	PreExecution
	
	DevFetchingDataForUAT
	
	ConnectToSUT
	
	LaunchApplication
	LoginToApplication_CapaProgramCoordinator
	
end LaunchAndLoginToApplication_CAPACoordinator

to handle OpenRecord_InExecution

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	VerifyLifeCycleState_INEXECUTION
	
end OpenRecord_InExecution

(*to handle CreateCAPAItem_ProposedAction

	NavigateToCapaItems
	DevFetchingDataForUAT
	CreateCapaItem
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	
end CreateCAPAItem_ProposedAction*)

to handle Assign_QA_ActionOwner

	
	AssignUser_Teams_ActionOwner
	AssignUser_Teams_QA
end Assign_QA_ActionOwner

to handle CAPAItem_ProgressTo_QA_withoutFA
	
	ProgressActionForPreApproval
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end CAPAItem_ProgressTo_QA_withoutFA

to handle OpenRecord_ProgressCAPAItem_WorkInProgress

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	(*	navigateToCAPARequirementsSection
	OpenCapaProgramRecord
	VerifyLifeCycleState_INEXECUTION*)
	NavigateToCapaItems
	OpenRecord_PendingQualityApproval
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
	PendingQualityPreApproval
	VerifyLifeCycleState_WORKINPROGRESS
	
end OpenRecord_ProgressCAPAItem_WorkInProgress

to handle OpenRecord_PendingQualityApproval

	W_App_CommonHandlers.SearchRecords_With_State "PENDING QUALITY APPROVAL"
end OpenRecord_PendingQualityApproval

to handle PendingQualityPreApproval
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Pending Quality Pre-Approval",searchrectangle:ScreenPart("Center")
		
		if global PendingQualityPreApprovalVerdict is "Approved"
			Click text:"Quality Pre-Approved", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			typetext "test"
			typetext tabKey
			TypeText global QAusername
			typetext tabKey
			TypeText global QApassword
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 8
			Put "PendingQualityPreApproval Task completed as Quality Pre Approved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global PendingQualityPreApprovalVerdict is "Rejected"
			
			Click text:"Quality Reject", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			Typetext"Test"
			
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "PendingQualityPreApproval Task completed as Quality Rejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
end PendingQualityPreApproval

to handle ProgressActionForPreApproval

	try
	(*		Put "Yes" into global CompleteInvestigationRCA_FArequired
		Put "Cancel" into global CompleteInvestigationRCAVerdict*)
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Progress action for pre-approval",searchrectangle:ScreenPart("Center")
		
		if global ProgressActionForPreApprovalVerdict is "Submit for Approval"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			// FA required or not
			if global ProgressActionForPreApproval_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("Center")
			else
				click imageName:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 8
			Put "ProgressActionForPreApproval Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global ProgressActionForPreApprovalVerdict is "Cancel"
			
			Click text:"Cancel Proposed Action", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "ProgressActionForPreApproval Task completed as Cancelled" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
end ProgressActionForPreApproval

to handle CreateCapaItem

	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		(*	WaitFor 120, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	
		
		click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]
		
		//CreateCapaProgram Handlers
		CreateCapaProgram*)
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		//Typetext "20 May 2021"
		(*Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]*)
		wait 1
		Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		(*Typetext "TestCapaDc"*)
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		//Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		Click text:"Corrective Action",SearchRectangle:ScreenPart("center")
		Click ImageLocation(text:"Description",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Testing"
		
		click item 2 of EveryImageLocation(text:"Save",searchRectangle:ScreenPart("center"))
		wait 5
		if ImageFound(text:"Proposed Action", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Item Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Item Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		ScrollWheelUp 50
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CreateCapaItem

to handle StartCapaItemImplementation

	try
		
		Click imageName:"CogWheelNew", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Click text:"Start Implementation", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Put "SuccessfullStartCAPAItemImplementation" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	
end StartCapaItemImplementation

to handle Navigate_and_CreateMitigationAction

	NavigateToMitigationAction
	CreateMitigationActions
	
end Navigate_and_CreateMitigationAction

to handle AssignActionOwner_InProgress

	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitMitigationAction
	
	AssignUser_Teams_MAActionOwner
	VerifyLifeCycleState_INPROGRESS
	
end AssignActionOwner_InProgress

to handle LogOut_LoginToApplication_ActionOwner

	LogOut
	LoginToApplication_ActionOwner
	
end LogOut_LoginToApplication_ActionOwner

to handle SearchRecord_OpenRecord_MA

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_INPROGRESS
	
end SearchRecord_OpenRecord_MA

DevFetchingDataForUAT
CreateDateDueExtension_VerifyError_ToFillMandatoryFields
to handle CreateDateDueExtension_VerifyError_ToFillMandatoryFields

	try
		NavigateToSectionFromLeftPane"General Information"
		(*put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		Log ExistingDateDue*)
		put global DeviationDateDue into ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendment"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext NewDateDue
		typetext tabkey
		//typetext "delivery timing"
		wait 1
		//typetext downArrow
		//typetext return
		typetext tabkey
		
		typetext"Test"
		
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		
		(*if ImageFound(text:NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])*)
		put "DateDueExtensionUpdatedwithoutReason" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		(*	else
			put "DateDueExtensionNotUpdatedwithoutReason" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if*)
		ScrollWheelUp 50
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
	
end CreateDateDueExtension_VerifyError_ToFillMandatoryFields

DevFetchingDataForUAT
CreateDateDueExtension_FillMandatoryFields
to handle CreateDateDueExtension_FillMandatoryFields

	//CM_DateDueExtension
	try
		NavigateToSectionFromLeftPane"General Information"
		//put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		//Log ExistingDateDue
		put global MitigationDateDue into ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into global NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendment"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext global NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		click ImageLocation(text:"Date Due Changed to")
		if ImageFound(text:global NewDateDue, waitFor:120,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
			put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else
			put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
		
		NavigateToSectionFromLeftPane"General Information"
		ScrollWheelUp 50
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end CreateDateDueExtension_FillMandatoryFields

to handle Verify_OldDateDue_NewDateDue

	VerifyDateDutChanged_From_and_To
	
end Verify_OldDateDue_NewDateDue

to handle LogOut_LoginToApplication_DC

	LogOut
	LoginToApplication_DC
	
end LogOut_LoginToApplication_DC

to handle SearchRecord_InProgress_DC

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	
end SearchRecord_InProgress_DC

to handle Dev_InProgress_ToQualityClosure_WithoutFA

	(*AssignUser_Teams_QA*)
	
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end Dev_InProgress_ToQualityClosure_WithoutFA

to handle LogOut_LoginToApplication_QA

	Logout
	LoginToApplication_QA
	
end LogOut_LoginToApplication_QA

to handle SearchRecord_PendingQualityClosureApproval

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end SearchRecord_PendingQualityClosureApproval

to handle Dev_QualityClosure_ClosedCancelled
	
	Dev_PendingCancellationQualityApproval_TaskOpen
	Dev_PendingCancellationQualityApproval_TaskVerdict
	
	
end Dev_QualityClosure_ClosedCancelled

to handle OpenMA_VerifyState_ClosedCancelled

	NavigateToMitigationAction
	Draft_InProgress_State_NotAvailable
	
end OpenMA_VerifyState_ClosedCancelled

to handle Pr_dev_InProgress

	Put "RecordId fetching from testdate file"  into global Vstep
	Log global Vstep
	
end Pr_dev_InProgress

to handle Navigate_SupplementaryInfo_Create

	wait 2
	//click text:"Supplementary Information",waitfor:120
	NavigateToSectionFromLeftPane "Supplementary Information"
	WaitFor 120, text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
	
	click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Supplementary Information",SearchRectangle:ScreenPart("Center")
	
	Put "Create Supplementary Information Popup should be displayed" into global Vstep
	log global Vstep
	CaptureAtLog
	
end Navigate_SupplementaryInfo_Create

to handle SupplementaryInfo_FillFields

	click imagelocation(text:"Comments",SearchRectangle:ScreenPart("Center"))+[100,0]
	Typetext controlKey,a
	Typetext backspace
	Typetext"Test"
	click item 2 of EveryImageLocation(text:"Save",SearchRectangle:ScreenPart("Center"))
	wait 2
	if ImageFound(text:"comments", waitFor:120,SearchRectangle:ScreenPart("TopHalf"))
		Put "Supplementary Information should be created in Supplementary Information section" into global Vstep
		log global Vstep
		CaptureAtLog
	else
		Put "Supplementary Information not created in Supplementary Information section" into global Vstep
		logerror global Vstep
		CaptureAtLog
	end if
	
end SupplementaryInfo_FillFields

to handle OpenSI

	OpenChildRecord_withSupplementary
	
end OpenSI

to handle NavigateToAttachments_ClickUpload

	navigateToAttachmentsSection
	
	try
		click text:"Upload",waitfor:120,searchrectangle:ScreenPart("LeftHalf")
		WaitFor 120, text:"File name"
		click ImageLocation(text:"File name")+[200,0]


	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try	
	
end NavigateToAttachments_ClickUpload

to handle UploadAttachment_VerifyDownloadButton

	typetext "C:\Users\ngujjula\Desktop\CCTestData.xlsx"
	wait 1
	Click text:"Open", waitFor:120,searchrectangle:ScreenPart("Center")
	//WaitFor 120, text:"Download",searchrectangle:ScreenPart("Center")
	if ImageFound(text:"Download",waitfor:120,searchrectangle:ScreenPart("LeftHalf"))
		
		put "UploadAttachmentSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else
		put "UploadAttachmentUnSuccessfully" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end UploadAttachment_VerifyDownloadButton

to handle Click_DownloadAll

	click text:"Download",waitfor:120,searchrectangle:ScreenPart("LeftHalf")
	ScrollWheelUp 14
	
end Click_DownloadAll

to handle SupplementaryInfoTask_ClickComplete

	Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
	
end SupplementaryInfoTask_ClickComplete

to handle SupplementaryInfoTask_ClickCompleteInPopUp

	Click imageName:"Complete", waitFor:120
	
end SupplementaryInfoTask_ClickCompleteInPopUp

to handle SearchRecord_CannotEdit_AnyInfo

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	EditButtonNotAvailable
	
end SearchRecord_CannotEdit_AnyInfo

to handle NavigateToSupplementary_VerifyCreateButton

	NavigateToSectionFromLeftPane "Supplementary Information"
	CreateButtonNotAvailable
	
end NavigateToSupplementary_VerifyCreateButton

to handle SearchRecord_ClosedCancelled


	try
		wait 4
		Put "DV210624-003" into RecordIdOne
		Click text:"QMS Processes", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50
		wait 4
		click text:"All",waitfor:120,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:120,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText RecordIdOne
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Record ID"
		
		
		if imagefound(text:RecordIdOne, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:120)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end SearchRecord_ClosedCancelled

to handle SearchRecord_CannotEdit_AnyInfo_ClosedCancelled

	wait 4
	Put "DV210624-003" into RecordIdOne
	Click text:"QMS Processes", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
	
	
	click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:120
	wait 4
	click text:"All",waitfor:120,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
	wait 2
	(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
	
	Click imageName:"SearchboxNew", waitFor:120,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	//TypeText global RecordId
	TypeText RecordIdOne
	TypeText return
	// open the record
	wait 4
	
	Set the searchrectangle to ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Record ID"
	
	
	if imagefound(text:RecordIdOne, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
		
		put "Corresponding "&global RecordType&" should be filtered" into global Vstep
		Log global Vstep
		CaptureAtLog
		Click FoundImageLocation()
	else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
		put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
		put "Corresponding "&global RecordType&" should be filtered" into global Vstep
		Log global Vstep
		CaptureAtLog
		click text:DRID, waitFor:120,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
		
	end if
	
	
	if ImageFound(text:"General Information", waitFor:120)
		Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	Set the searchrectangle to []
	VerifyLifeCycleState_CLOSEDCANCELLED
	EditButtonNotAvailable
	
end SearchRecord_CannotEdit_AnyInfo_ClosedCancelled

to handle Verify_and_CreateSupplementary_ProgressTo_Closed

	EditButtonNotAvailable
	Navigate_SupplementaryInfo_Create 
	SupplementaryInfo_FillFields
	OpenSI
	NavigateToAttachments_ClickUpload
	UploadAttachment_VerifyDownloadButton
	Click_DownloadAll
	SupplementaryInfoTask_ClickComplete
	SupplementaryInfoTask_ClickCompleteInPopUp
	LogOut
	LoginToApplication_DC
	SearchRecord_CannotEdit_AnyInfo_ClosedCancelled
	NavigateToSupplementary_VerifyCreateButton
	
end Verify_and_CreateSupplementary_ProgressTo_Closed

to handle SearchRecord_ClosedApproved

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	
end SearchRecord_ClosedApproved

to handle Pr_dev_ClosedApproved_IteminProgress_programinInExecution

	Put "RecordId fetching from testdate file"  into global Vstep
	Log global Vstep
	
end Pr_dev_ClosedApproved_IteminProgress_programinInExecution

to handle OpenCAPAItem_WorkInProgress

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	
	
end OpenCAPAItem_WorkInProgress

to handle CAPAItem_WorkInProgress_Complete_ErrorToActionCompletionSummary


	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
	
	Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
	
	put dragLocation+[0,-120] into dropLocation
	Drag dragLocation
	Drop dropLocation
	
	
	Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
	if global CompleteTheActionVerdict Contains "Review"
		
		Click text:"(Sends for Review)"
		wait 1
		//Typetext tabKey
		//Typetext"Testing"
		Set the searchrectangle to []
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		Put "CompleteTheAction_TaskWithoutSummaryCompleted" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Action Completion Summary"),topleft of imageRectangle(text:"Action Completion Summary")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Action Completion Summary" into ErrorMessagesDisplayForFields
	else
		insert "Action Completion Summary" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	(*Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")*)		
	click item 2 of EveryImageLocation(text:"Cancel",SearchRectangle:ScreenPart("BottomHalf"))
	
end CAPAItem_WorkInProgress_Complete_ErrorToActionCompletionSummary

to handle FillMandatoryFields_Complete_progresstoPendingReview

	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
	
	Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
	
	put dragLocation+[0,-120] into dropLocation
	Drag dragLocation
	Drop dropLocation
	
	
	Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
	if global CompleteTheActionVerdict Contains "Review"
		
		Click text:"(Sends for Review)"
		wait 1
		Typetext tabKey
		Typetext"Testing"
		Set the searchrectangle to []
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		Put "CompleteTheAction_TaskWithVerdictCompleted" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end FillMandatoryFields_Complete_progresstoPendingReview

to handle LogOut_LoginToApplication_CAPACoordinator

	LogOut
	LoginToApplication_CapaProgramCoordinator
	
end LogOut_LoginToApplication_CAPACoordinator

to handle OpenCAPAItem_PendingReview

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_PendingReview
	VerifyLifeCycleState_PENDINGREVIEW
	
end OpenCAPAItem_PendingReview

to handle CompleteReview_CompleteAction_withoutEffectiveness_errorMessage

	//Put "Yes" into global DemonstratesEffectiveness
	Put "Review Complete" into global ReviewTheCompletedActionVerdict
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Review The Completed Action",searchrectangle:ScreenPart("Center")
	
	Put Imagelocation(text:"Review The Completed Action",SearchRectangle:ScreenPart("Center")) into dragLocation
	
	put dragLocation+[0,-120] into dropLocation
	Drag dragLocation
	Drop dropLocation
	
	//Put "Yes" into global DemonstratesEffectiveness
	//click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]
	
	//Typetext tabkey
	//Typetext "TestNextStep"
	//global ReviewTheCompletedActionVerdict
	(*click text:"Review Complete",SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]*)
	(*Put "Review Complete" into global ReviewTheCompletedActionVerdict*)
	click {text:global ReviewTheCompletedActionVerdict,SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]}
	wait 1
	Typetext tabkey
	Typetext "Test"
	
	Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
	if global ReviewTheCompletedActionVerdict contains "Review Complete"
		Put "ReviewTheCompletedAction_TaskWithout EffectivenessCompleted" into global Vstep
	else if global ReviewTheCompletedActionVerdict contains "Further Action Required"
		Put "ReviewTheCompletedAction_TaskWithVerdictFurthereActionRequired" into global Vstep
	end if 
	wait 8
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Demonstrates Effectiveness"),topleft of imageRectangle(text:"Demonstrates Effectiveness")+[500,310]]
	if ImageFound(text:"field is required")
		insert "Effectiveness" into ErrorMessagesDisplayForFields
	else
		insert "Effectiveness" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")	
	wait 8
end CompleteReview_CompleteAction_withoutEffectiveness_errorMessage

to handle CompleteReview_progresstoClosedComplete

	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 60, text:"Review The Completed Action",searchrectangle:ScreenPart("Center")
	
	Put Imagelocation(text:"Review The Completed Action",SearchRectangle:ScreenPart("Center")) into dragLocation
	
	put dragLocation+[0,-120] into dropLocation
	Drag dragLocation
	Drop dropLocation
	
	Put "Yes" into global DemonstratesEffectiveness
	click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]
	
	Typetext tabkey
	Typetext "TestNextStep"
	//global ReviewTheCompletedActionVerdict
	(*click text:"Review Complete",SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]*)
	Put "Review Complete" into global ReviewTheCompletedActionVerdict
	click {text:global ReviewTheCompletedActionVerdict,SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]}
	wait 1
	Typetext tabkey
	Typetext "Test"
	
	Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
	if global ReviewTheCompletedActionVerdict contains "Review Complete"
		Put "ReviewTheCompletedAction_TaskWith EffectivenessCompleted" into global Vstep
	else if global ReviewTheCompletedActionVerdict contains "Further Action Required"
		Put "ReviewTheCompletedAction_TaskWithVerdictFurthereActionRequired" into global Vstep
	end if 
	wait 8
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
end CompleteReview_progresstoClosedComplete

to handle Verify_ReopenCAPAItem_Reopen

	//Click imageName:"CogWheelNew", waitFor:120
	if ImageFound(imageName:"CancelImpactAssessment", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "ReOpenCAPAOptionIsDisplaying" into global Vstep
		Log global Vstep
		click FoundImageLocation()
		wait 8
		Put "ActionReopenedSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "ReOpenCAPAOptionIsNotDisplaying" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
	
end Verify_ReopenCAPAItem_Reopen

to handle OpenRecord_CI_PendingReview

	SearchRecords_With_State "Pending Review"
	
end OpenRecord_CI_PendingReview

to handle CAPArequirementSectionCreateProgram_ExistingCAPAProgram_No_and_CAPARequired_Yes

	NavigateToCapaRequirements
	try
	(*Put "Yes" into global Capa_Required
		Put "No" into global ExistingCapaProgramRequired
		Put "10 April 2021" into global CapaProgramDateDue*)
		click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
		put "Yes" into global Capa_Required
		click text:global Capa_Required,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[150,50]]
		if global Capa_Required is "No"
			click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
			Typetext "Test"
			click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
			Put "CAPA Program Not Required Selected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else if global Capa_Required is "Yes"
			put "No" into global ExistingCapaProgramRequired
			click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
			
			
			
			(*			set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
			if global ExistingCapaProgramRequired is "Yes"
				click ImageLocation(text:"CAPA Program")+[120,0]
				Typetext global ExistingCapaProgram
				wait 1
				Typetext return
				set the searchrectangle to []
				Put "Existing CAPA Program added" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				//TypeText "Create"
				click ImageLocation(text:"CAPA Program")+[120,0]
				wait 1
				Typetext controlKey,a
				Typetext backspace
				// create New capa program
				Typetext "Create capa"
				wait 1
				Typetext return
				Set the searchrectangle to []
				WaitFor 120, text:"Create Capa program",searchrectangle:ScreenPart("Center")
				
				
				
				Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext global CapaProgramDateDue
				Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
				wait 1
				Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
				typetext "TestSD"
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext "Health"
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
				click ImageLocation(text:"Deviation ID",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext global GivenRecordId
				Typetext downArrow
				Typetext return
				
				//   global CAPEX Required
				click text:"No",searchrectangle:[topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[150,50]]
				Click text:"Save",searchrectangle:ScreenPart("BottomRightQuadrant")
				
				Put "New CAPA Program Created" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if*)
			
			Click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
			wait 7
			Put "CAPA Program added in Capa Requirement section" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		ScrollWheelUp 30
		wait 3
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CAPArequirementSectionCreateProgram_ExistingCAPAProgram_No_and_CAPARequired_Yes

to handle VerifyCAPAItemSection_CreateCAPAItem

	NavigateToCapaItems
	
	CreateCapaItem
	
end VerifyCAPAItemSection_CreateCAPAItem

to handle OpenCAPAItem_AssingActionOwner
	NavigateToCapaItems
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	wait 3
	
	AssignUser_Teams_ActionOwner
	
end OpenCAPAItem_AssingActionOwner

to handle CancelDeviation_progresstoQualityClosureApproval_noFA
	SearchRecord
	
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end CancelDeviation_progresstoQualityClosureApproval_noFA

to handle LogOut_LoginQA_progresstoClosedCancelled

	LogOut
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
	Dev_PendingCancellationQualityApproval_TaskOpen
	Dev_PendingCancellationQualityApproval_TaskVerdict
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end LogOut_LoginQA_progresstoClosedCancelled

to handle VerifyCAPAItemClosedCancelled_Automatic

	NavigateToCapaItems
	Draft_InProgress_State_NotAvailable
	
end VerifyCAPAItemClosedCancelled_Automatic

to handle SearchRecord_QualityApprovalState_QA

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end SearchRecord_QualityApprovalState_QA

to handle Dev_PendingQualityApproval_Complete

	Click text:"Complete",waitfpr:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
	Put "QualityApprover Popup is displayed" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
end Dev_PendingQualityApproval_Complete

to handle PendingQualityApproval_Verdict_Dev

	if global DV_QAverdict is "Approved"
		Click text:"Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingApproved"
		TypeText tabkey
		typetext global QAusername
		TypeText tabkey
		typetext global QApassword
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApprover approvedDeviation without FA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	else if global DV_QAverdict is "Rejected"
		Click text:"Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingRejected"
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApproverCancelledDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else if global DV_QAverdict is "include Function Approvers"
		
		Click text:"Include Function Approvers", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingIncludeFunctionApprovers"
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApproverIncludeFunctionApproversForDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	else
		Put "AllverdictOptionsAreNotAvailable" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	
end PendingQualityApproval_Verdict_Dev

to handle Dev_PendingQualityApproval_Verdict

	if global DV_QAverdict is "Approved"
		Click text:"Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingApproved"
		TypeText tabkey
		typetext global QAusername
		TypeText tabkey
		typetext global QApassword
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApprover approvedDeviation without FA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	else if global DV_QAverdict is "Rejected"
		Click text:"Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingRejected"
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApproverCancelledDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else if global DV_QAverdict is "include Function Approvers"
		
		Click text:"Include Function Approvers", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingIncludeFunctionApprovers"
		Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Put "QualityApproverIncludeFunctionApproversForDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	else
		Put "AllverdictOptionsAreNotAvailable" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	(*VerifyErrorPromptToAssignFunctionPostApprover*)
	
	if ImageFound(text:"Workflow task assignee group", waitFor:120,Searchrectangle:ScreenPart("Center")) and  if ImageFound(text:"must contain user", waitFor:120,Searchrectangle:ScreenPart("Center"))
		Put "Popup displayed as Expected" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Popup not displayed as Expected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:120
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
end Dev_PendingQualityApproval_Verdict

to handle Assign_2FA
	
	AssignUser_Teams_FA
	(*AssignUser_Teams_FA_second*)     //FA_second,PFAUsername,PFAPassword
	
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Nutrition DEV 2 UAT Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
	Dev_PendingQualityApproval_Task
	
end Assign_2FA

to handle LoginToApplication_FA_VerifyTask_Homepage

	LoginToApplication_FA
	SearchRecord
	
end LoginToApplication_FA_VerifyTask_Homepage

to handle Dev_PendingFunctionApproval_Complete

	Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
	Put "FunctionApprover Popup is displayed" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
end Dev_PendingFunctionApproval_Complete

to handle Dev_PendingFunctionApproval_Verdict

	if global Dev_FAverdict is "Function Approved"
		Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingApproved"
		Typetext tabkey
		Typetext global FAusername
		Typetext tabkey
		Typetext global FApassword
		//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
		wait 10
		Put "FunctionApprover approvedDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else if global Dev_FAverdict is "Function Rejected"
		Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingRejected"
		//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		click imagelocation(text:"Complete",waitfor:50,searchrectangle:ScreenPart("BottomRightQuadrant"))
		wait 10
		Put "FunctionApproverRejectedDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "FunctionApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end Dev_PendingFunctionApproval_Verdict

to handle Dev_PendingFunctionApproval_Complete_FA
	SearchRecord
	Dev_PendingFunctionApproval_Complete
	
end Dev_PendingFunctionApproval_Complete_FA

to handle Dev_PendingFunctionApproval_Verdict_FA

	if global Dev_FAverdict is "Function Approved"
		Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingApproved"
		Typetext tabkey
		Typetext global PFAusername
		Typetext tabkey
		Typetext global PFApassword
		//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
		wait 10
		Put "FunctionApprover approvedDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	else if global Dev_FAverdict is "Function Rejected"
		Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		Typetext tabkey
		Typetext"TestingRejected"
		//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
		click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
		wait 10
		Put "FunctionApproverRejectedDeviation" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "FunctionApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end Dev_PendingFunctionApproval_Verdict_FA

to handle LoginToApplication_QA_VerifyTask_Homepage

	LoginToApplication_QA
	SearchRecord
	
end LoginToApplication_QA_VerifyTask_Homepage

to handle CreateRouteCauseIdentified

	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Root Causes Identified"
	CreateRootCausesIdentified
	
	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord
	
end CreateRouteCauseIdentified

to handle CreateRootCausesIdentified
	try
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 30, text:"Create Root Cause",searchrectangle:ScreenPart("Center")
		// if later required we will uncomment below code and update
		
		click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		wait 2
		Typetext "Root Cause"
		click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[120,20]

		
		wait 2
		Typetext tabKey
		wait 1
		Typetext "1"
		TypeText downArrow, return
		(*click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("BottomHalf"))+[120,22]
		wait 2*)
		click ImageLocation(text:"Category",searchrectangle:ScreenPart("BottomHalf"))+[100,0]
		Typetext "Environment"
		wait 1
		click ImageLocation(text:"Category",searchrectangle:ScreenPart("BottomHalf"))+[120,45]
		wait 1
		Typetext tabKey
		wait 1
		Typetext "Environment", return
		
		wait 1
		(*click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[100,0]
		Typetext "1"
		wait 1
		click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[120,45]*)
		
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:"Root Cause", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Root Cause Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Root Cause Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
	
	
end CreateRootCausesIdentified

to handle CreateCAPAProgramCAPARequired_ExistingCAPAProgramasNo

	CAPArequirementSectionCreateProgram_ExistingCAPAProgram_No_and_CAPARequired_Yes
	
end CreateCAPAProgramCAPARequired_ExistingCAPAProgramasNo

to handle CreateCAPAItem_UseRCI

	NavigateToCapaItems
	
	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		(*	WaitFor 120, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	
		
		click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]
		
		//CreateCapaProgram Handlers
		CreateCapaProgram*)
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		//Typetext "20 May 2021"
		(*Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]*)
		wait 1
		Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		(*Typetext "TestCapaDc"*)
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		//Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		Click text:"Corrective Action",SearchRectangle:ScreenPart("HorizontalMiddle")
		Click ImageLocation(text:"Description",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Testing"
		
		Click ImageLocation(text:"Associated Root Cause",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext downArrow,return
		
		//if ImageFound(text:"Cause Detail", waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		click item 2 of EveryImageLocation(text:"Save",searchRectangle:ScreenPart("center"))
		wait 5
		if ImageFound(text:"Proposed Action", waitFor:1200,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Item Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Item Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CreateCAPAItem_UseRCI

to handle OpenCAPAItem_linkwithCAPAprogram

	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	try
		
		if imagefound(text:"CAPA Program ID")
			wait 2
			(*waitfor 120,text:"CAPA Program",searchrectangle:ScreenPart("Center")*)
			put "CAPA Program Link is present" into global Vstep	
			Log global Vstep	
			CaptureAtLog
		end if	
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end OpenCAPAItem_linkwithCAPAprogram

to handle Edit_dateDuewithoutjustification

	//EditDateDue //need to check
	try	
		click Image:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		NavigateToSectionFromLeftPane "General Information"
		WaitFor 50, text:"Date Due",SearchRectangle:ScreenPart("Center")
		Click imagelocation( text:"Date Due",SearchRectangle:ScreenPart("Center"))+[75,0]
		
		wait 1
		Typetext controlKey,a
		TypeText backspace
		wait 2
		typetext "28 July 2021"
		Typetext tabKey
		Click text:"Save", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		wait 5
		if ImageFound(Image:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "DateDueEditedAndUpdated Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else
			Put "DateDueEditedAndUpdatedUnSuccessfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog	
			
		end if
		
		
		//Exit handler
		
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end Edit_dateDuewithoutjustification

to handle Edit_CAPAItemdetails_inProposedAction

	click Image:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	NavigateToSectionFromLeftPane "General Information"
	
	Put "Fields are editable" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	Click text:"Cancel", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
end Edit_CAPAItemdetails_inProposedAction

to handle VerifyNoTasktoClosed_Complete

	if ImageFound(image:"Complete",searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "TaskIsAvailable" into global Vstep
		LogError global Vstep
		CaptureAtLog
	else
		Put "TaskIsNotAvailable" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	
end VerifyNoTasktoClosed_Complete

to handle CreateDeviation_FillFields

	try
		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		
		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		(*		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvRelatedQMSElement
		wait 2
		Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]*)
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Country"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
		(*	Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationImpactedLocation
		Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[240,50]
		
		//regulatory classification class required Regulatory Classification
		Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationRegulatoryClassification
		Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[240,28]*)
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "Not Product"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]
		
		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	end try
	
end CreateDeviation_FillFields


to handle Assign_DeviationCoordinator_InProgress

	AssignUser_Teams_DeviationCoordinator
	//AssignDeviationCoordinator
	VerifyLifeCycleState_INPROGRESS
	
end Assign_DeviationCoordinator_InProgress


to handle Assign_2FA_QA

	AssignUser_Teams_QA
	
	AssignUser_Teams_FA
	(*AssignUser_Teams_FA_second*) 
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Nutrition DEV 2 UAT Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 15
	ScrollWheelUp 50
end Assign_2FA_QA

to handle EditInvestigationSummary_Attachments

	LogOut
	LoginToApplication_DC
	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	NavigateToInvestigationSummary
	
	EditInvestigationSummary
	
end EditInvestigationSummary_Attachments

to handle CAPARequirements_NoCAPA

	(*CAPArequirementSectionCreateProgram_ExistingCAPAProgram_No_and_CAPARequired_Yes*)
	NavigateToCapaRequirements
	try
	(*Put "Yes" into global Capa_Required
		Put "No" into global ExistingCapaProgramRequired
		Put "10 April 2021" into global CapaProgramDateDue*)
		click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
		put "No" into global Capa_Required
		click text:global Capa_Required,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[150,50]]
		if global Capa_Required is "No"
			click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("LeftHalf"))+[150,0]
			Typetext "Test"
			click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
			Put "CAPA Program Not Required Selected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else if global Capa_Required is "Yes"
			put "No" into global ExistingCapaProgramRequired
			click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
			
			
			
			(*			set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
			if global ExistingCapaProgramRequired is "Yes"
				click ImageLocation(text:"CAPA Program")+[120,0]
				Typetext global ExistingCapaProgram
				wait 1
				Typetext return
				set the searchrectangle to []
				Put "Existing CAPA Program added" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			else
				//TypeText "Create"
				click ImageLocation(text:"CAPA Program")+[120,0]
				wait 1
				Typetext controlKey,a
				Typetext backspace
				// create New capa program
				Typetext "Create capa"
				wait 1
				Typetext return
				Set the searchrectangle to []
				WaitFor 120, text:"Create Capa program",searchrectangle:ScreenPart("Center")
				
				
				
				Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext global CapaProgramDateDue
				Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
				wait 1
				Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
				typetext "TestSD"
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext "Health"
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[100,32]
				Click ImageLocation(text:"Global business Unit",SearchRectangle:ScreenPart("Center"))+[0,32]
				click ImageLocation(text:"Deviation ID",SearchRectangle:ScreenPart("Center"))+[100,0]
				Typetext global GivenRecordId
				Typetext downArrow
				Typetext return
				
				//   global CAPEX Required
				click text:"No",searchrectangle:[topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"CAPEX Required",searchrectangle:ScreenPart("Center"))+[150,50]]
				Click text:"Save",searchrectangle:ScreenPart("BottomRightQuadrant")
				
				Put "New CAPA Program Created" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if*)
			
			(*Click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")*)
			wait 5
			Put "CAPA Program added in Capa Requirement section" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		ScrollWheelUp 30
		wait 3
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CAPARequirements_NoCAPA

to handle Navigate_CreateRootCausesIdentified

	NavigateToRootCauseIdentified
	CreateRootCausesIdentified
	
	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord
	
end Navigate_CreateRootCausesIdentified

to handle Navigate_and_CreateAffectedLocationInformation

	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	
end Navigate_and_CreateAffectedLocationInformation

to handle Verify_ProductMaterialBrandField_GeneralInformation

	NavigateToSectionFromLeftPane"General Information" 
	//Edit_ProductBrand_As_NotProductSpecific------need to implement
	if imagefound(text:"Not Product",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "Brand specific field is as expected"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Brand specific field is not as expected"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	ScrollWheelUp 14
	
	
end Verify_ProductMaterialBrandField_GeneralInformation

to handle CompleteInvestigationRCAActionPlan_PendingFunctionApproval
	
	CompleteInvestigationRCAActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end CompleteInvestigationRCAActionPlan_PendingFunctionApproval

to handle LogOut_LoginToApplication_FA
	
	LogOut
	
	LoginToApplication_FA
	
end LogOut_LoginToApplication_FA

to handle VerifyTask_HomePage_CompleteTask_VerifyComments_FA
	
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	//VerifyTask_HomePage
	
	if imagefound(text:"Pending Function Approval",waitfor:50,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Task displayed for FA"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Task not displayed for FA"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
	
	//Dev_PendingFunctionApproval_Task---------Split
	Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Verdict",SearchRectangle:ScreenPart("Center")
	Click text:"Function Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	if ImageFound(text:"Comment", waitFor:120,searchrectangle:ScreenPart("BottomHalf"))
		Put "Comments field is Not mandatory" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	(*Dev_PendingFunctionApproval*)
	
end VerifyTask_HomePage_CompleteTask_VerifyComments_FA

to handle Dev_PendingFunctionApproval_InProgress

	Click text:"Function Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	Typetext tabkey
	Typetext"TestingRejected"
	//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
	wait 10
	Put "FunctionApproverRejectedDeviation" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_INPROGRESS
	
end Dev_PendingFunctionApproval_InProgress

to handle LogOut_LoginToApplication_DC

	LogOut
	LoginToApplication_DC
	
end LogOut_LoginToApplication_DC


to handle SearchRecord_VerifyTask

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	//VerifyTask_HomePage_CompleteInvestigationRCAActionPlan
	if imagefound(text:"Investigation, RCA & Action Planning", waitFor:10,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Task displayed for Deviation Coordinator"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Task not displayed for Deviation Coordinator"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end SearchRecord_VerifyTask

to handle VerifyComments_ProvidedByFA

	//NavigateToWorkFlowTimeline--------need to implement
	NavigateToSectionFromLeftPane "Workflow Timeline"
	
	//VerifyComments_ProvidedByFA--------Need to implement
	wait 4
	if imagefound(text:"Verdict Comment: TestingRejected", waitFor:10,searchrectangle:ScreenPart("Center"))
		Put "Verified comments provided by FA"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Not Verified comments provided by FA"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end VerifyComments_ProvidedByFA

to handle VerifyTask_HomePage_CompleteTask_PendingQualityApproval

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	//VerifyTask_HomePage // need to check
	if imagefound(text:"Pending Function Approval",waitfor:50,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Task displayed for FA"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Task not displayed for FA"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
	Dev_PendingFunctionApproval_Complete
	Dev_PendingFunctionApproval_Verdict
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end VerifyTask_HomePage_CompleteTask_PendingQualityApproval

to handle Assign_FA_QA

	AssignUser_Teams_QA
	AssignUser_Teams_FA
	
end Assign_FA_QA

to handle LogOut_LoginToApplication_QA

	Logout
	LoginToApplication_QA
	
end LogOut_LoginToApplication_QA

to handle VerifyTask_HomePage_CompleteTask_VerifyComments_QA

	SearchRecord
	(*VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL*)
	//VerifyTask_HomePage
	if imagefound(text:"Pending Quality Approval",waitfor:50,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Task displayed for QA"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Task not displayed for FA"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	//Dev_PendingQualityApproval_Task--------Split
	Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Pending Quality Approval",SearchRectangle:ScreenPart("Center")
	Click text:"Approved", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	if ImageFound(text:"Comment", waitFor:120,searchrectangle:ScreenPart("BottomHalf"))
		Put "Comments field is Not mandatory" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	
end VerifyTask_HomePage_CompleteTask_VerifyComments_QA

to handle Dev_PendingQualityApproval_InProgress

	//Dev_PendingQualityApproval_Task----------Split
	Click text:"Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	Typetext tabkey
	Typetext"TestingRejected"
	//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
	Put "QualityApproverCancelledDeviation" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 3
	
	VerifyLifeCycleState_INPROGRESS
	
end Dev_PendingQualityApproval_InProgress

to handle SearchRecord_VerifyTask

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	//VerifyTask_HomePage_CompleteInvestigationRCAActionPlan
	if imagefound(text:"Investigation, RCA & Action Planning", waitFor:120,searchrectangle:ScreenPart("TopLeftQuadrant"))
		Put "Task displayed for Deviation Coordinator"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Task not displayed for Deviation Coordinator"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end SearchRecord_VerifyTask

to handle VerifyComments_ProvidedByFA

	//NavigateToWorkFlowTimeline-------- (In this only expanding has to covered)need to implement
	NavigateToSectionFromLeftPane "Workflow Timeline"
	//VerifyComments_ProvidedByFA--------Need to implement
	
	if imagefound(text:"Verdict Comment: TestingRejected", waitFor:120,searchrectangle:ScreenPart("Center"))
		Put "Verified comments provided by QA"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Not Verified comments provided by QA"& global VRecordId into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	ScrollWheelUp 15
	
end VerifyComments_ProvidedByFA

to handle CompleteInvestigationRCA_PendingQualityApproval_withoutFA

	//CompleteInvestigationRCAActionPlan_withoutFA-----//Need to check
	try
		Put "No" into global CompleteInvestigationRCA_FArequired
		Put "Submit for approval" into global CompleteInvestigationRCAVerdict
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
		if global CompleteInvestigationRCAVerdict is "Submit for approval"
			Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")
			// FA required or not
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("Center")
			else if global CompleteInvestigationRCA_FArequired is "No"
				click text:"No",searchRectangle:ScreenPart("Center")
				
			end if
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 10
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global CompleteInvestigationRCAVerdict is "Cancel"
			
			Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else if global CompleteInvestigationRCA_FArequired is "No"
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Cancelled" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end CompleteInvestigationRCA_PendingQualityApproval_withoutFA

to handle LogOut_LoginAs_QA

	Logout
	LoginToApplication_QA
	
end LogOut_LoginAs_QA

to handle LoginToApplication_QA_VerifyTask_Homepage

	SearchRecord
	
	Click text:"Complete",waitfpr:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Pending Quality Approval",SearchRectangle:ScreenPart("Center")
	Click text:"Rejected", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	Typetext tabkey
	Typetext"TestingRejected"
	//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
	Put "QualityApproverCancelledDeviation" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_INPROGRESS
	
end LoginToApplication_QA_VerifyTask_Homepage

to handle CreateInvestigationAction_Draft

	CreateInvestigationAction
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	
end CreateInvestigationAction_Draft

to handle CancelInvestigationActionprogresstoClosedCancelled

	CancelInvestigationAction
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end CancelInvestigationActionprogresstoClosedCancelled

to handle CreatesecondInvestigationAction_ProgresstoWorkinProgress_Logout

	SearchRecord 
	CreateInvestigationAction
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitInvestigationAction
	AssignUser_Teams_INVActionOwner //assignActionowner
	VerifyLifeCycleState_INPROGRESS
	LogOut
	
end CreatesecondInvestigationAction_ProgresstoWorkinProgress_Logout

to handle LoginAO_OpenSecondInvestigationAction

	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToInvestigationAction
	OpenRecord_Inprogress
	VerifyLifeCycleState_INPROGRESS
	
end LoginAO_OpenSecondInvestigationAction

to handle CompletetheAction_PendingMoreInfo_logout

	CompleteInvestigationAction
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	LogOut
	
end CompletetheAction_PendingMoreInfo_logout

to handle LogInDC_OpensecondInvestigationAction

	LoginToApplication_DC
	SearchRecord
	NavigateToInvestigationAction
	OpenRecord_PENDINGMOREINFORMATION
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	
end LogInDC_OpensecondInvestigationAction

to handle CancelInvestigationAction_withoutJustificationandReason

	//UpdateTheActionDetailsReSubmit_VerifyErrorMessage_withoutJustificationReason---------------Need To Implement
	
	wait 2
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Update the Action details",searchrectangle:ScreenPart("Center")
	
	click  text:"Cancel",searchrectangle:ScreenPart("HorizontalMiddle")
	//Typetext tabkey
	//Typetext "Testing Justification for cancel"
	//Typetext tabkey
	//Typetext "Raised in"
	//wait 1
	//Typetext downArrow,return
	click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
	
	wait 10
	Put "Cancel the Action in Update and Resubmit page successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	(*click item 2 of everyimagelocation( text:"Cancel",SearchRectangle:ScreenPart("BottomHalf"))*)	
	
end CancelInvestigationAction_withoutJustificationandReason

to handle UpdateInvestigationAction_withMandatoryFields_workinProgress_Logout

	//UpdateTheActionDetailsReSubmit_Investigation----------Split
	
	wait 2
	(*Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Update the Action details",searchrectangle:ScreenPart("Center")*)
	
	click  text:"Updated",searchrectangle:ScreenPart("Center")
	Typetext tabkey
	Typetext "Testing Comment"
	click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
	wait 10
	Put "Updated and ReSubmitted the Action successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	(*VerifyLifeCycleState_INPROGRESS*)
	LogOut
	
end UpdateInvestigationAction_withMandatoryFields_workinProgress_Logout

to handle LoginAO_OpenSecondInvestigationAction_secondtime

	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToInvestigationAction
	OpenRecord_Inprogress
	VerifyLifeCycleState_INPROGRESS
	
end LoginAO_OpenSecondInvestigationAction_secondtime

to handle CancelInvestigationAction_withoutJustificationandReasonSecondtime

	//CompleteInvestigationAction_VerifyErrorMessage_withoutJustificationReason---------------Need To Implement
	
	wait 2
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Complete Investigation Action",searchrectangle:ScreenPart("Center")
	
	Click imageName:"CancelMA", waitFor:120,searchRectangle:ScreenPart("Center")
	//Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	//Typetext"Test"
	//Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
	//Typetext "Raised in"
	//Typetext downArrow,return
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 10
	Put "Action Owner Cancels Investigation Action without Mandatory fields" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	(*Click imageName:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")*)	
	
end CancelInvestigationAction_withoutJustificationandReasonSecondtime

to handle CancelSecondInvestigationActionProgresstoClosedCancelled_Logout

	//CompleteInvestigationAction--------Split
	
	wait 2
	(*Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")*)
	(*WaitFor 120, text:"Complete Investigation Action",searchrectangle:ScreenPart("Center")*)
	
	Click imageName:"CancelMA", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	Typetext"Test"
	//Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
	Typetext tabKey
	Typetext "Raised in"
	Typetext downArrow,return
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 10
	Put "Action Owner Cancels Investigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	LogOut
	
end CancelSecondInvestigationActionProgresstoClosedCancelled_Logout

to handle LogIn_DC_OpenDeviationRecord

	LoginToApplication_DC
	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	
end LogIn_DC_OpenDeviationRecord

to handle CreateThirdInvestigationActionprogresstoWorkinProgress

	CreateInvestigationAction
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitInvestigationAction
	AssignUser_Teams_INVActionOwner
	VerifyLifeCycleState_INPROGRESS
	
end CreateThirdInvestigationActionprogresstoWorkinProgress

to handle CancelDeviation_progresstoQualityClosureApproval_Investigation_NoFA_Logout

	SearchRecord
	
	CompleteInvestigationRCAActionPlan  //Cancel ,NoFA
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	NavigateToInvestigationAction
	OpenRecord_INPROGRESS
	VerifyLifeCycleState_INPROGRESS
	LogOut
	
end CancelDeviation_progresstoQualityClosureApproval_Investigation_NoFA_Logout

to handle LoginQA_OpendeviationRecord

	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end LoginQA_OpendeviationRecord

to handle ProgresstoClosedCancelledDeviation
	
	Dev_PendingCancellationQualityApproval_TaskOpen
	Dev_PendingCancellationQualityApproval_TaskVerdict
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	
end ProgresstoClosedCancelledDeviation

to handle VerifyInvestigationActionClosedCancelled_Automatic_Logout

	NavigateToInvestigationAction
	//OpenRecord_CLOSEDCANCELLED
	//VerifyLifeCycleState_CLOSEDCANCELLED
	Draft_InProgress_State_NotAvailable
	
end VerifyInvestigationActionClosedCancelled_Automatic_Logout




//to handle CreateInvestigationActionPopup
to handle CreateInvestigationAction_VerifyPopup
	try 
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Investigation Action",searchrectangle:ScreenPart("Center")
		
		Put "Create Investigation Action popup displayed" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
		
	end try
end CreateInvestigationAction_VerifyPopup

to handle CreateInvestigationAction_Complete

	try
	(*W_App_CommonHandlers.NavigateToInvestigationAction
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"Create Investigation Action",searchrectangle:ScreenPart("Center")
		*)
		click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext "testsd"
		Typetext tabkey
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global InvestigationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		
		Put "Investigation Deatails Entered and Saved in Create Investigation Page" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CreateInvestigationAction_Complete

//SubmitInvestigation
to handle SubmitInvestigationAction
	try
		Put "ActionOwner.dev.1.N.UAT@sb-rb.com" into global InvstigationActionOwnerUsername
		Click imageName:"CogWheelNew", waitFor:120
		wait 2
		Click text:"Submit Investigation", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,25]
		
		Typetext global InvstigationActionOwnerUsername
		wait 5
		Typetext downArrow, return
		wait 2
		click ImageLocation(text:"Action Owner",searchRectangle:ScreenPart("Center"))+[0,10]
		click item 2 of everyImageLocation(text:"Start",searchRectangle:ScreenPart("Center"))
		
		Put "Submitting Investigation Action" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
end SubmitInvestigationAction

to handle OpenCAPAItem_PendingReview

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_PendingReview
	VerifyLifeCycleState_PENDINGREVIEW
	
end OpenCAPAItem_PendingReview

to handle CAPAItem_progresstoClosedComplete

	ReviewTheCompletedAction_CapaItem
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end CAPAItem_progresstoClosedComplete

to handle ReopenCAPAItem_withoutJustification_errorMessage
	try
		//ReopenCapaItem_VerifyErrormessageWithoutJustification----------NeedToImplement
		Click imageName:"CogWheelNew", waitFor:120
		
		if ImageFound(text:"Re-open", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "ReOpenActionOptionIsDisplaying" into global Vstep
			Log global Vstep
			
			
			W_App_CommonHandlers.CaptureAtLog
			click FoundImageLocation()
			if ImageFound(text:"Justification for re-opening",searchrectangle:ScreenPart("Center"))
				click imagelocation(text:"Justification for re-opening",searchrectangle:ScreenPart("Center"))+[0,50]
				
				Click imagelocation (image:"StartButton",searchrectangle:ScreenPart("Center"))
				Put "Click Start Button without entering ustification for re-opening " into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
		else
			Put "ReOpen Action Option Is Not Displaying" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end ReopenCAPAItem_withoutJustification_errorMessage

to handle ReopenCAPAItem_Opened_CAPACoordinator

	ReopenCapaItem---------------split
	VerifyLifeCycleState_ReopenedCapaItem
	
end ReopenCAPAItem_Opened_CAPACoordinator

to handle LoginAO_ProgresstopendingReview_ClosedCompletebyProgramCoordinator_Logout

	LoginToApplication_ActionOwner
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	CompleteTheAction_CapaItem
	VerifyLifeCycleState_PENDINGREVIEW
	LogOut
	
	LoginToApplication_CapaProgramCoordinator
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_PendingReview
	VerifyLifeCycleState_PENDINGREVIEW
	ReviewTheCompletedAction_CapaItem
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end LoginAO_ProgresstopendingReview_ClosedCompletebyProgramCoordinator_Logout

to handle LoginAO_OpenCAPAProgram_InExecution

	LoginToApplication_ActionOwner
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	
end LoginAO_OpenCAPAProgram_InExecution

to handle OpenCAPAItemClosedComplete_ReOpenwithoutJustificationErrorMessage

	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	ReviewTheCompletedAction_VerifyErrorMessageWithoutJustification----------Need to implement
	
end OpenCAPAItemClosedComplete_ReOpenwithoutJustificationErrorMessage

to handle ReopenCAPAItem_Opened_AO

	ReviewTheCompletedAction_CapaItem-------Split
	VerifyLifeCycleState_CLOSEDCOMPLETE
	ReopenCapaItem
	VerifyLifeCycleState_ReopenedCapaItem
	
end ReopenCAPAItem_Opened_AO

to handle ProgressCAPAItemtoPendingreview_progresstoClosedCompletebyProgramCoordinator

	CompleteTheReOpenedAction-------Need to Implement
	VerifyLifeCycleState_PENDINGREVIEW
	LogOut
	
	LoginToApplication_CapaProgramCoordinator
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_PendingReview
	VerifyLifeCycleState_PENDINGREVIEW
	ReviewTheCompletedAction_CapaItem
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end ProgressCAPAItemtoPendingreview_progresstoClosedCompletebyProgramCoordinator

to handle ProgramCoordinator_OpenProgram_progresstoCAPAPostApproval_Logout

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CP_PendingPostApproval
	VerifyLifeCycleState_PendingCapaPostApproval
	LogOut
	
end ProgramCoordinator_OpenProgram_progresstoCAPAPostApproval_Logout

to handle OpenCAPAItemClosedComplete_ReopenwithoutJustificationErrorMessage_QA

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_PendingCapaPostApproval
	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	ReopenCapaItem_VerifyErrorMessagewithoutJustification-------------Need to implement
	
	
end OpenCAPAItemClosedComplete_ReopenwithoutJustificationErrorMessage_QA

to handle ReopenCAPAItem_resultCAPAProgramInExecution_Logout

	ReopenCapaItem-----------Split
	VerifyLifeCycleState_ReopenedCapaItem
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	
end ReopenCAPAItem_resultCAPAProgramInExecution_Logout

to handle LoginAO_ProgresstopendingReview_ClosedCompletebyProgramCoordinator

	CompleteTheReOpenedAction-------Need to Implement
	VerifyLifeCycleState_PENDINGREVIEW
	LogOut
	
	LoginToApplication_CapaProgramCoordinator
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_CI_PendingReview
	VerifyLifeCycleState_PENDINGREVIEW
	ReviewTheCompletedAction_CapaItem
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end LoginAO_ProgresstopendingReview_ClosedCompletebyProgramCoordinator

to handle OpenProgram_progresstoCaPAPostApproval_Logout

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_PendingCapaPostApproval
	NavigateToCapaProgram
	OpenRecord_CP_PendingPostApproval
	LogOut
	
end OpenProgram_progresstoCaPAPostApproval_Logout

to handle LoginQA_OpenCAPAProgram

	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_PendingCapaPostApproval
	NavigateToCapaProgram
	OpenRecord_CP_PendingPostApproval
	
end LoginQA_OpenCAPAProgram

to handle CAPAProgramProgresstoClosedComplete

	Review_PostApproval_Of_CompletedCAPA
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end CAPAProgramProgresstoClosedComplete

to handle QAcannotReopenCAPAItem_LogOut

	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Verify_QA_Cannot_ReopenCAPAItem-------Need to implement
	LogOut
	
end QAcannotReopenCAPAItem_LogOut

to handle LoginAO_CannotReopenCAPAItem

	LoginToApplication_ActionOwner
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_CLOSEDCOMPLETE
	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Verify_AO_Cannot_ReopenCAPAItem-------Need to implement
	LogOut
	
end LoginAO_CannotReopenCAPAItem

to handle LoginProgramCoordinator_CannotReopenCAPAItem

	LoginToApplication_CapaProgramCoordinator
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_CLOSEDCOMPLETE
	NavigateToCapaItems
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Verify_CAPACoordinator_Cannot_ReopenCAPAItem-------Need to implement
	LogOut
	
end LoginProgramCoordinator_CannotReopenCAPAItem

to handle SearchRecord_QualityApprovalState_MAStates

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	NavigateToMitigationAction
	//Verify_All_MAStates---------need to implement
	Set the searchRectangle to [imagelocation(text:"Lifecycle State")+[-90,4],imagelocation(text:"Lifecycle State")+[140,400]]
	if ImageFound(text:"Draft", waitFor:120) and if ImageFound(text:"In Progress", waitFor:120) and if ImageFound(text:"Closed - Complete", waitFor:120) and if ImageFound(text:"Closed - Cancelled", waitFor:120) and if ImageFound(text:"Pending More Information", waitFor:120)
		Put "AllChildRecordsLifeCycleStateAreAsExpected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog	
	else
		//waitFor 50,image:"PendingCancellation"
		Put "All Non closed Records are move to Closed cancelled" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	Set the SearchRectangle to []
	scrollwheelup 30
end SearchRecord_QualityApprovalState_MAStates

to handle Dev_PendingQualityApproval_PendingMitigationCompletion

	Dev_PendingQualityApproval_Task
	VerifyLifeCycleState_APPROVEDPENDINGMITIGATIONCOMPLETION
	
end Dev_PendingQualityApproval_PendingMitigationCompletion

to handle ReOpen_MitigationAction_VerifyDevState

	NavigateToMitigationAction
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	//VerifyOptionToReopen------need to implement
	
	Click imageName:"CogWheelNew", waitFor:120
	
	if ImageFound(text:"Re-open", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "ReOpenActionOptionIsDisplaying" into global Vstep
		Log global Vstep
		
		
		W_App_CommonHandlers.CaptureAtLog
		click FoundImageLocation()
		if ImageFound(text:"Justification for re-opening",searchrectangle:ScreenPart("Center"))
			click imagelocation(text:"Justification for re-opening",searchrectangle:ScreenPart("Center"))+[0,50]
			Typetext "Test"
			Click imagelocation (image:"StartButton",searchrectangle:ScreenPart("Center"))
			Put "Action ReOpened " into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
	else
		Put "ReOpen Action Option Is Not Displaying" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
end ReOpen_MitigationAction_VerifyDevState

to handle Closed_AllMitigationActions

	SearchRecord
	VerifyLifeCycleState_APPROVEDPENDINGMITIGATIONCOMPLETION
	NavigateToMitigationAction
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	CancelMitigationAction
	VerifyLifeCycleState_CLOSEDCANCELLED
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_PENDINGMOREINFORMATION
	wait 2
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	
	
	Click imageName:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	Typetext"Test"
	//Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
	Typetext tabKey
	Typetext "Raised in"
	Typetext downArrow,return
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 10
	Put "Action Owner Cancels Investigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_CLOSEDCANCELLED
	LogOut
	LoginToApplication_ActionOwner
	SearchRecord
	VerifyLifeCycleState_APPROVEDPENDINGMITIGATIONCOMPLETION
	
	NavigateToMitigationAction
	OpenRecord_INPROGRESS
	wait 2
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	
	
	Click imageName:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	Typetext"Test"
	//Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
	Typetext tabKey
	Typetext "Raised in"
	Typetext downArrow,return
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 10
	Put "Action Owner Cancels Investigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end Closed_AllMitigationActions

to handle VerifyDevState_PendingMitigationApproval

	SearchRecord
	VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL
	
end VerifyDevState_PendingMitigationApproval

to handle Return_ToHome_VerifyTask

	SearchRecord
	//VerifyTask_HomePage
	NavigateHomePage_VerifyTask "Review Mitigation Action Completion"
end Return_ToHome_VerifyTask

to handle OpenDev_ReOpenMitigation_VerifyDevState

	NavigateToMitigationAction
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	//Click imageName:"CogWheelNew", waitFor:120
	
	if ImageFound(imageName:"CancelImpactAssessment", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "ReOpenActionOptionIsDisplaying" into global Vstep
		Log global Vstep
		
		
		W_App_CommonHandlers.CaptureAtLog
		Click imageName:"CancelImpactAssessment", waitFor:120
		if ImageFound(text:"Justification",searchrectangle:ScreenPart("Center"))
			click imagelocation(text:"Justification",searchrectangle:ScreenPart("Center"))+[0,50]
			Typetext "Test"
			Click imagelocation (image:"StartButton",searchrectangle:ScreenPart("Center"))
			Put "Action ReOpened " into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
	else
		Put "ReOpen Action Option Is Not Displaying" into global Vstep
		Logerror global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	VerifyLifeCycleState_ReopenedAction
	SearchRecord
	VerifyLifeCycleState_APPROVEDPENDINGMITIGATIONCOMPLETION
	
end OpenDev_ReOpenMitigation_VerifyDevState

to handle SearchRecord_Close_ReopenedMitigation

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_ReopenedAction
	VerifyLifeCycleState_ReopenedAction
	CompleteTheReopenedAction----------NeedToImplement
	
end SearchRecord_Close_ReopenedMitigation

to handle VerifyDevState_PendingMitigationApproval_QA

	SearchRecord
	VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL
	
end VerifyDevState_PendingMitigationApproval_QA

to handle Return_ToHome_VerifyTask_QA

	//VerifyTask_HomePage	
	
	NavigateHomePage_VerifyTask "Review Mitigation Action Completion"	
	
end Return_ToHome_VerifyTask_QA

to handle OpenDev_ProgressFromMitigationApproval_ToApproved

	//ReviewMitigationActionCompletion
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	
	// verdict Approved,Re-Open Mitiation Action
	if global ReviewMitigationActionCompletionVerdict is "Approved (Closes Deviation)"
		Click text: "Approved (Closes Deviation)", waitFor:120
		TypeText tabkey
		typetext "Comments"
		TypeText tabkey
		typetext global QAusername
		TypeText tabkey
		typetext global QApassword
		
		Click imageName:"complete", waitFor:120
		
		Put "Deviation moved from Pending Mitigation Approval to CLOSED-APPROVED" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		VerifyLifeCycleState_ClosedApproved
		LogOut
		
end OpenDev_ProgressFromMitigationApproval_ToApproved

to handle CompleteTheReopenedAction

	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Complete Investigation Action",searchrectangle:ScreenPart("Center")
	
	Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
	
	Typetext tabKey
	Typetext "Test"
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 10
	Put "Action Owner completed Reopened Investigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
end CompleteTheReopenedAction

to handle SearchRecord_QualityApprovalState_MAStates
	
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	NavigateToMitigationAction
	//Verify_All_MAStates---------need to implement
	Set the searchRectangle to [imagelocation(text:"Lifecycle State")+[-90,4],imagelocation(text:"Lifecycle State")+[140,400]]
	if ImageFound(text:"Draft", waitFor:120) and if ImageFound(text:"In Progress", waitFor:120) and if ImageFound(text:"Closed - Complete", waitFor:120) and if ImageFound(text:"Closed - Cancelled", waitFor:120) and if ImageFound(text:"Pending More Information", waitFor:120)
		Put "AllChildRecordsLifeCycleStateAreAsExpected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog    
	else
		//waitFor 50,image:"PendingCancellation"
		Put "All Non closed Records are move to Closed cancelled" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	Set the SearchRectangle to []
	scrollwheelup 30
	
end SearchRecord_QualityApprovalState_MAStates

to handle SearchRecord_CAPA_Program
	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//NavigateToCapaRequirements
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	
end SearchRecord_CAPA_Program

to handle Navigate_and_VerifyCreateButton
	NavigateToCapaItems
	CreateButtonAvailable
	
end Navigate_and_VerifyCreateButton

to handle VerifyState_ProposedAction_In_CapaItemSection

	Set the searchRectangle to [imagelocation(text:"Lifecycle State")+[-90,4],imagelocation(text:"Lifecycle State")+[140,400]]
	if ImageFound(text:"Proposed Action", waitFor:120) 
		Put "CAPA Item is in Proposed Action state" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog	
	else
		//waitFor 50,image:"PendingCancellation"
		Put "Capa Item is not in Proposed ACtion state" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	Set the SearchRectangle to []

end VerifyState_ProposedAction_In_CapaItemSection

to handle CreateCAPAItem_ProposedAction_INNewProgram
	NavigateToCapaItems
	CreateCapaItem
	(*VerifyState_ProposedAction_In_CapaItemSection*)
	
end CreateCAPAItem_ProposedAction_INNewProgram

to handle OpenRecord_AssignActionOwner
	NavigateToCapaItems
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	AssignUser_Teams_ActionOwner
	
end OpenRecord_AssignActionOwner

to handle VerifyTask_Open_RegressTo_ProposedAction

	SearchRecord
	VerifyLifeCycleState_ClosedApproved		
	//NavigateToCapaRequirements	
	//OpenCapaProgramRecord	
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_PendingQualityApproval
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL	
	PendingQualityPreApproval  // test data need to change
	VerifyLifeCycleState_PROPOSEDACTION
	
end VerifyTask_Open_RegressTo_ProposedAction


to handle SearchRecord_CAPAItem_ProgressTo_QA_withFA

	SearchRecord
	//NavigateToCapaRequirements
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global ChildRecord


	//ProgressActionForPreApproval    // test data need to change
	try
		Put "Yes" into global ProgressActionForPreApproval_FArequired
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Progress action for pre-approval",searchrectangle:ScreenPart("Center")
		
		click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
		// FA required or not
		if global ProgressActionForPreApproval_FArequired is "Yes"
			
			click text:"Yes",searchRectangle:ScreenPart("Center")
		else
			click text:"No",searchRectangle:ScreenPart("BottomHalf")
		end if
		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		wait 8
		Put "ProgressActionForPreApproval Task completed as Submit for approval" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end SearchRecord_CAPAItem_ProgressTo_QA_withFA

to handle VerifyTask_Open_ProgressFromFA_ToProposedAction

	SearchRecord
	//NavigateToCapaRequirements
	//OpenCapaProgramRecord
	//VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	
	OpenRecord_PendingFunctionApproval
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL	
	PendingFunctionPreApproval    // test data need to change
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end VerifyTask_Open_ProgressFromFA_ToProposedAction

to handle VerifyTask_Open_ProgressTo_WorkInProgress

	//NavigateHomePage_VerifyTask_PendingQualityPreApproval
	
	try
		
		Click text:"Home",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		Click text:"My Tasks",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 2
		Click imagelocation(text:"Due Date",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant"))+(100,0)
		Click text:"Date Received",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 5
		if imagefound(imageName:"DueDateOnHome",SearchRectangle:ScreenPart("TopHalf"),waitFor:120)
			click FoundImageLocation()
		end if
		wait 2
		//put TaskName into global TaskName
		if imagefound(imageName:"PendingQualityPreApproval",contrastColor:"AutoDetect", contrast:"On", WaitFor:120, contrastTolerance:"45")
			
			Put "Task available in the Tasks page" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put "Task not available in the Tasks page" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		wait 8
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	//ClickRecordIdHyperLinkfromTaskPage
	(*Put "CI210629-001" into global ChildRecord*)
	
	click imageName:"PendingQualityPreApprovalCAPAItem",Searchrectangle:ScreenPart("TopHalf")
	wait 8
	//PendingQualityPreApproval    // test data need to change
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Pending Quality Pre-Approval",searchrectangle:ScreenPart("Center")
		Click text:"Quality Pre-Approved", waitFor:120,searchRectangle:ScreenPart("Center")
		typetext tabKey
		typetext "test"
		typetext tabKey
		TypeText global QAusername
		typetext tabKey
		TypeText global QApassword
		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		wait 8
		
		Put "PendingQualityPreApproval Task completed as Quality Pre Approved" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	VerifyLifeCycleState_WORKINPROGRESS
	
end VerifyTask_Open_ProgressTo_WorkInProgress

to handle VerifyTask_HomePage_OpenRecord_AO

	try
		
		Click text:"Home",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		Click text:"My Tasks",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 2
		Click imagelocation(text:"Due Date",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant"))+(100,0)
		Click text:"Date Received",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 5
		if imagefound(imageName:"DueDateOnHome",SearchRectangle:ScreenPart("TopHalf"),waitFor:120)
			click FoundImageLocation()
		end if
		wait 2
		//put TaskName into global TaskName
		if imagefound(text:"Complete the action",contrastColor:"AutoDetect", contrast:"On", WaitFor:120, contrastTolerance:"45")
			
			Put "Task available in the Tasks page" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put "Task not available in the Tasks page" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		wait 8
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	//ClickRecordIdHyperLinkfromTaskPage
	(*Put "CI210629-001" into global ChildRecord*)
	click imageName:"CompletetheactionCAPAItem",Searchrectangle:ScreenPart("TopHalf")
	wait 8
	
end VerifyTask_HomePage_OpenRecord_AO

to handle CompleteTask_VerifyError_ToFillCompletionSummary
	try
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
		
		Click text:"sends for review",searchRectange:ScreenPart("center")
		wait 1
		//Typetext tabKey
		//Typetext"Testing"
		Set the searchrectangle to []
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		wait 10
		Put "CompleteTheAction_TaskWithVerdictCompleted" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		Set the searchrectangle to [topleft of imageRectangle(text:"Action Completion Summary"),topleft of imageRectangle(text:"Action Completion Summary")+[210,120]]
		if ImageFound(text:"This field is required")
			insert "Action Completion Summary is not filled" into ErrorMessagesDisplayForFields
		else
			insert "Action Completion Summary is filled" into ErrorMessagesNotDisplayForFields
		end if
		
		Set the searchrectangle to ()
		
		if number of items of ErrorMessagesDisplayForFields is 1
			Put "Error message displayed for all mandatory fields" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog
			
		else
			Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
			
		end if
		//Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CompleteTask_VerifyError_ToFillCompletionSummary


to handle QualityApproval_ProgressTo_PendingReview
	click ImageLocation(text:"Action Completion Summary",searchrectangle:ScreenPart("BottomHalf"))+[20,50] 
	Typetext "test"
	Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant") 
	wait 10
	VerifyLifeCycleState_PENDINGREVIEW
	
end QualityApproval_ProgressTo_PendingReview

to handle LogOut_LoginAs_CAPACoordinator
	Logout
	LoginToApplication_CapaProgramCoordinator
	
end LogOut_LoginAs_CAPACoordinator

to handle VerifyTask_HomePage_OpenRecord
	try
		
		Click text:"Home",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		Click text:"My Tasks",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 2
		Click imagelocation(text:"Due Date",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant"))+(100,0)
		Click text:"Date Received",waitfor:120,Searchrectangle:ScreenPart("TopLeftQuadrant")
		wait 5
		if imagefound(imageName:"DueDateOnHome",SearchRectangle:ScreenPart("TopHalf"),waitFor:120)
			click FoundImageLocation()
		end if
		wait 2
		wait 2
		//put TaskName into global TaskName
		if imagefound(text:"Review the completed action",contrastColor:"AutoDetect", contrast:"On", WaitFor:8, contrastTolerance:"45")
			
			Put "Task available in the Tasks page" into global Vstep
			log global Vstep
			CaptureAtLog
		else
			Put "Task not available in the Tasks page" into global Vstep
			logerror global Vstep
			CaptureAtLog
		end if
		
		wait 8
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	//ClickRecordIdHyperLinkfromTaskPage
	(*Put "CI210629-001" into global ChildRecord*)
	click imageName:"ReviewthecompletedactionCAPAItem",Searchrectangle:ScreenPart("TopHalf")
	wait 10
	
end VerifyTask_HomePage_OpenRecord

to handle PendingReview_ProgressTo_ClosedComplete
	
	ReviewTheCompletedAction_CapaItem    // test data need to change
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end PendingReview_ProgressTo_ClosedComplete

to handle NavigateHomePage_VerifyTask_PendingQualityPreApproval	
	
	NavigateHomePage_VerifyTask "Pending Quality Pre-Approval"
	
	(*	if ImageFound(imageName:PendingQualityPreApproval)
		end if*)	
	
end NavigateHomePage_VerifyTask_PendingQualityPreApproval

to handle NavigateHomePage_VerifyTask_CompleteTheAction	
	
	NavigateHomePage_VerifyTask "Complete the action"
	
end NavigateHomePage_VerifyTask_CompleteTheAction

to handle NavigateHomePage_VerifyTask_ReviewTheCompletedAction	
	
	NavigateHomePage_VerifyTask "Review the completed action"	
	
end NavigateHomePage_VerifyTask_ReviewTheCompletedAction

to handle OpenRecord_PendingFunctionApproval
	//NavigateToSectionFromLeftPane "Mitigation Actions"
	W_App_CommonHandlers.SearchRecords_With_State "Pending Function Approval"
end OpenRecord_PendingFunctionApproval

to handle PendingFunctionPreApproval
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Pending Function Pre-Approval",searchrectangle:ScreenPart("Center")
		
		if global PendingFunctionPreApprovalVerdict is "Approved"
			Click text:"Function Pre-Approved", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			typetext "test"
			typetext tabKey
			TypeText global FAusername
			typetext tabKey
			TypeText global FApassword
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "PendingFunctionPreApproval Task completed as Function Pre Approved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global PendingFunctionPreApprovalVerdict is "Rejected"
			
			Click text:"Function Reject", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			Typetext "Test"
			
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			wait 8
			
			Put "PendingFunctionPreApproval Task completed as Function Rejected" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
			
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
	
end PendingFunctionPreApproval

to handle OpenRecord_PendingQualityApproval
	//NavigateToSectionFromLeftPane "Mitigation Actions"
	W_App_CommonHandlers.SearchRecords_With_State "Pending Quality Approval"
end OpenRecord_PendingQualityApproval

to handle SearchRecord_InProgress_ProposedAction

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaProgram
	OpenRecord_CP_InExecution
	VerifyLifeCycleState_INEXECUTION
	NavigateToCapaItems
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	
	Set the searchrectangle to [ ImageLocation(text:"Deviation ID",searchrectangle:ScreenPart("Center"))+[-80,-35], ImageLocation(text:"Deviation ID",searchrectangle:ScreenPart("Center"))+[500,150]]
	
	put ReadText(topRight of ImageRectangle(text:"Deviation ID"),ImageLocation(text:"Deviation ID")+[300,30]) into existingId
	click ImageLocation(text:"Deviation ID")+[70,0]
	put "ClickingDeviationLink" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 3
	
	
	Set the searchrectangle to []
	(*navigateToCAPARequirementsSection
	OpenCapaProgramRecord*)
end SearchRecord_InProgress_ProposedAction

to handle CreateCAPAItem_ProposedAction

	NavigateToCapaItems
	
	try
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		(*	WaitFor 30, text:"CAPA Program ID",searchrectangle:ScreenPart("Center")	
		
		click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]
		
		//CreateCapaProgram Handlers
		CreateCapaProgram*)
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		//Typetext "20 May 2021"
		(*Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]*)
		wait 1
		Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		(*Typetext "TestCapaDc"*)
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		//Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		Click text:"Corrective Action",SearchRectangle:ScreenPart("center")
		Click ImageLocation(text:"Description",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Testing"
		
		click item 2 of EveryImageLocation(text:"Save",searchRectangle:ScreenPart("center"))
		
		if ImageFound(text:"Proposed Action", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Item Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Item Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	
end CreateCAPAItem_ProposedAction

to handle CancelCAPAItem_ClosedCancelled
	CancelCAPAItem
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end CancelCAPAItem_ClosedCancelled


to handle CompleteInvestigationRCAActionPlan_PendingQualityApproval
	Set the searchrectangle to [ ImageLocation(text:"Deviation ID",searchrectangle:ScreenPart("Center"))+[-80,-35], ImageLocation(text:"Deviation ID",searchrectangle:ScreenPart("Center"))+[500,150]]
	
	put ReadText(topRight of ImageRectangle(text:"Deviation ID"),ImageLocation(text:"Deviation ID")+[300,30]) into existingId
	click ImageLocation(text:"Deviation ID")+[70,0]
	put "ClickingDeviationLink" into global Vstep
	Log global Vstep
	CaptureAtLog
	wait 3
	
	
	Set the searchrectangle to []
	DevFetchingDataForUAT
	CompleteInvestigationRCAActionPlan         // need to change data
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	NavigateToCapaItems
	OpenRecord_CI_PendingParentApproval
	//VerifyLifeCycleState_PENDINGPARENTAPPROVAL
	
end CompleteInvestigationRCAActionPlan_PendingQualityApproval

to handle OpenRecord_CI_PendingParentApproval
	
	SearchRecords_With_State "Pending Parent Approval"
	
end OpenRecord_CI_PendingParentApproval

to handle VerifyLifeCycleState_PENDINGPARENTAPPROVAL
	VerifyLifeCycleState "PendingParentApproval"
end VerifyLifeCycleState_PENDINGPARENTAPPROVAL

to handle CannotCancel_CAPAItem_PendingParentApproval

	Click imageName:"CogWheelNew", waitFor:120,searchRectange:ScreenPart("TopRightQuadrant")
	
	if ImageFound(text:"Cancel CAPA Item",searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "Cancel CAPA Item button present in the page" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "User cannot Cancel CAPA Item " into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	
	
end CannotCancel_CAPAItem_PendingParentApproval


to handle SearchRecord_CannotCancel_CAPAItem_PendingParentApproval
	SearchRecord
	NavigateToCapaItems
	OpenRecord_CI_PendingParentApproval
	CannotCancel_CAPAItem_PendingParentApproval
end SearchRecord_CannotCancel_CAPAItem_PendingParentApproval


to handle Dev_PendingQualityApproval_ClosedApproved_CAPA

	SearchRecord	
	Dev_PendingQualityApproval_Task
	VerifyLifeCycleState_ClosedApproved
	(*navigateToCAPARequirementsSection
	OpenCapaProgramRecord
	VerifyLifeCycleState_AUTHORISED
	AuthorisedToBeginCapaExecution_Complete
	VerifyLifeCycleState_INEXECUTION
	AssignUser_Teams_QA
	//AssignUser_Teams_CPC_ForProgramFirstName*)
	
end Dev_PendingQualityApproval_ClosedApproved_CAPA

to handle Progress_CAPAItem_WorkInProgress

	SearchRecord
	VerifyLifeCycleState_ClosedApproved
	//navigateToCAPARequirementsSection
	//OpenCapaProgramRecord
	NavigateToCapaItems
	OpenRecord_Authorised
	AssignUsers_CapaItem
	VerifyLifeCycleState_WORKINPROGRESS
	
end Progress_CAPAItem_WorkInProgress

to handle CompleteTheAction_CapaItem_CancelWithoutComments
	try
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]

		Click text:"Cancel Proposed Action"
		Put "No" into global CompleteTheAction_Function_Approver_Required
		click imageName:"No"
		Set the searchrectangle to []
		Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		Put"CompleteTheAction_TaskWithVerdictCancel" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		Set the searchrectangle to [topleft of imageRectangle(text:"Comments"),topleft of imageRectangle(text:"Comments")+[210,120]]
		if ImageFound(text:"This field is required")
			insert "Comments is not filled" into ErrorMessagesDisplayForFields
		else
			insert "Comments is filled" into ErrorMessagesNotDisplayForFields
		end if
		Set the searchrectangle to []
		
		if number of items of ErrorMessagesDisplayForFields is 1
			Put "Error message displayed for all mandatory fields" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog
			
		else
			Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
			
		end if
		//Click text:"Cancel", waitFor:120,searchrectangle:ScreenPart("BottomHalf")
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
end CompleteTheAction_CapaItem_CancelWithoutComments


to handle WorkInProgress_Cancel_VerifyError_ToFillComments

	Logout
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToCapaItems
	OpenRecord_WORKINPROGRESS
	CompleteTheAction_CapaItem_CancelWithoutComments
	
end WorkInProgress_Cancel_VerifyError_ToFillComments

to handle CAPAItem_WorkInProgress_PendingQualityClosure_withoutFA

	click ImageLocation(text:"Comments",searchrectangle:ScreenPart("BottomHalf"))+[20,50] 
	Typetext "test"
	
	click text:"No",searchRectangle:screenpart("BottomHalf")
	
	Click image:"Complete", waitFor:120,searchrectangle:ScreenPart("BottomRightQuadrant") 
	
	wait 3	
	
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL	
	
end CAPAItem_WorkInProgress_PendingQualityClosure_withoutFA

to handle VerifyTask_Open_RegressTo_WorkInProgress

	SearchRecord
	NavigateToCapaItems
	OpenRecord_PendingQualityClosureApproval
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL	
	QualityCancellationApproval_CI       //need to change test data
	VerifyLifeCycleState_WORKINPROGRESS
	
	
end VerifyTask_Open_RegressTo_WorkInProgress

to handle SearchRecord_CAPAItem_ProgressTo_FA

	SearchRecord
	//DevFetchingDataForUAT
	NavigateToCapaItems
	OpenRecord_CI_WORKINPROGRESS
	AssignUser_Teams_FA
	CompleteTheAction_CapaItem     //need to change test data
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end SearchRecord_CAPAItem_ProgressTo_FA

to handle VerifyTask_Open_ProgressTo_QualityClosure

	SearchRecord
	NavigateToCapaItems
	OpenRecord_PendingFunctionClosureApproval
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	FunctionCancellationApproval_CI     //need to change test data
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end VerifyTask_Open_ProgressTo_QualityClosure

to handle VerifyTask_Open_ProgressTo_ClosedCancelled

	SearchRecord
	NavigateToCapaItems
	OpenRecord_PendingQualityClosureApproval
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	QualityCancellationApproval_CI_Duplicate     //need to change test data
	VerifyLifeCycleState_CLOSEDCANCELLED
	
end VerifyTask_Open_ProgressTo_ClosedCancelled

to handle FunctionCancellationApproval_CI
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Function Cancellation Approval",searchrectangle:ScreenPart("Center")
		
		if global FunctionCancellationApprovalVerdict is "Approved"
			Click text:"Cancellation Function Approved", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			typetext "test"
			
			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "FunctionCancellationApproval Task completed as Cancellation function Approved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		else if global FunctionCancellationApprovalVerdict is "Rejected"
			
			Click text:"Cancellation Function Rejected", waitFor:120,searchRectangle:ScreenPart("Center")
			typetext tabKey
			Typetext"Test"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "FunctionCancellationApproval Task completed as Cancellation function Rejected" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog		
		//
		
	end try	
	
end FunctionCancellationApproval_CI

to handle QualityCancellationApproval_CI

	try		
		wait 2		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")		
		WaitFor 120, text:"Quality Cancellation Approval",searchrectangle:ScreenPart("Center")		
		
		if global QualityCancellationApprovalVerdict is "Approved"
			
			Click text:"Cancellation Quality Approved", waitFor:120,searchRectangle:ScreenPart("Center")			
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]			
			Typetext"Test"			
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]			
			Typetext "Raised in"			
			Typetext downArrow,return			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")			
			Put "QualityCancellationApproval Task completed as Cancellation Quality Approved" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog			
			
		else if global QualityCancellationApprovalVerdict is "Rejected"
			
			Click text:"Cancellation Quality Rejected", waitFor:120,searchRectangle:ScreenPart("Center")			
			typetext tabKey			
			Typetext"Test"			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")			
			Put "QualityCancellationApproval Task completed as Cancellation Quality Rejected" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog
		//
		
	end try	
	
end QualityCancellationApproval_CI

to handle FunctionCancellationApproval_CI_Duplicate

	try		
		wait 2		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")		
		WaitFor 120, text:"Function Cancellation Approval",searchrectangle:ScreenPart("Center")		
		
		if global FunctionCancellationApprovalVerdict_Duplicate is "Approved"			
			Click text:"Cancellation Function Approved", waitFor:120,searchRectangle:ScreenPart("Center")			
			typetext tabKey			
			typetext "test"			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")			
			Put "FunctionCancellationApproval Task completed as Cancellation function Approved" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog			
			
		else if global FunctionCancellationApprovalVerdict_Duplicate is "Rejected"			
			
			Click text:"Cancellation Function Rejected", waitFor:120,searchRectangle:ScreenPart("Center")			
			typetext tabKey			
			Typetext"Test"			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")			
			Put "FunctionCancellationApproval Task completed as Cancellation function Rejected" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog		
		//
		
	end try	
	
end FunctionCancellationApproval_CI_Duplicate

to handle QualityCancellationApproval_CI_Duplicate
	try		
		Put "Approved" into global QualityCancellationApprovalVerdict		
		wait 2		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")		
		WaitFor 120, text:"Quality Cancellation Approval",searchrectangle:ScreenPart("Center")		
		
		if global QualityCancellationApprovalVerdict is "Approved"			
			Click text:"Cancellation Quality Approved", waitFor:120,searchRectangle:ScreenPart("Center")						
			Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]			
			Typetext"Test"			
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]			
			Typetext "Raised in"			
			Typetext downArrow,return			
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")				
			Put "QualityCancellationApproval Task completed as Cancellation Quality Approved" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog		
			
			
		else if global QualityCancellationApprovalVerdict is "Rejected"	
			
			Click text:"Cancellation Quality Rejected", waitFor:50,searchRectangle:ScreenPart("Center")			
			typetext tabKey			
			Typetext"Test"
			Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")			
			Put "QualityCancellationApproval Task completed as Cancellation Quality Rejected" into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog		
		//
		
	end try		
	
end QualityCancellationApproval_CI_Duplicate

to handle OpenRecord_PendingFunctionClosureApproval

	//NavigateToSectionFromLeftPane "Mitigation Actions"	
	W_App_CommonHandlers.SearchRecords_With_State "Pending Function Closure Approval"
	
end OpenRecord_PendingFunctionClosureApproval

to handle OpenRecord_PendingQualityClosureApproval

	//NavigateToSectionFromLeftPane "Mitigation Actions"	
	W_App_CommonHandlers.SearchRecords_With_State "Pending Quality Closure Approval"
	
end OpenRecord_PendingQualityClosureApproval

to handle OpenRecord_MA_VerifyDevLink

	OpenRecord_Draft
	//VerifyDevLink
	if ImageFound(text:"Deviation ID", waitFor:120)
		put ReadText([imageLocation(text:"Deviation ID")+[32,-10], imageLocation(text:"Deviation ID")+[166,15]],validpattern:"[A-Z][A-Z]*-[0-9][0-9][0-9]*")  into global Vstep
		Log  global Vstep
		Put "Deviation link is present within the MA" into global Vstep
		Log global Vstep
		CaptureAtLog
	else
		Put "Deviation link is not present within the MA" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	
end OpenRecord_MA_VerifyDevLink

to handle SearchRecord_Navigate_CreateMitigationAction

	SearchRecord
	NavigateToMitigationAction
	CreateMitigationActions
	
end SearchRecord_Navigate_CreateMitigationAction

to handle OpenRecord_MA_AssignActionOwner_InProgress

	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner
	(*VerifyLifeCycleState_INPROGRESS*)
	
end OpenRecord_MA_AssignActionOwner_InProgress

to handle MA_InProgress_ToPendingInformation_VerifyError_ToFillJustification

	//CompleteMitigationAction_PendingInfo_without_Justification//need to implement
	try
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
		
		Click text:"More Information Required", waitFor:120,searchRectangle:ScreenPart("Center")
		//Typetext tabKey
		//TypeText "test"
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		Put "Action Owner More Info required for Mitigation Action without Justification" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	//VerifyErrorMessage_ToFillJustification
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Justification field" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep		
		Logerror global Vstep		
		CaptureAtLog		
		
	end if
	
end MA_InProgress_ToPendingInformation_VerifyError_ToFillJustification

to handle MA_InProgress_ToPendingInformation_FillJustification

	Click text:"More Information Required", waitFor:120,searchRectangle:ScreenPart("Center")
	Typetext tabKey
	TypeText "test"
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	Put "Action Owner More Info required for Mitigation Action with Justification" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	
end MA_InProgress_ToPendingInformation_FillJustification

to handle SearchRecord_OpenRecord_MA_DC

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_PENDINGMOREINFORMATION
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	
end SearchRecord_OpenRecord_MA_DC

to handle MA_PendingInfo_Cancel_VerifyError_ToFillJustificationAndReason

	//UpdateTheActionDetailsReSubmit_MT_witoutJustificationandreason//need to implement
	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Update the Action details",searchrectangle:ScreenPart("Center")
		
		click  text:"Cancel",searchrectangle:ScreenPart("HorizontalMiddle")
		//Typetext tabkey
		//Typetext "Testing Justification for cancel"
		//Typetext tabkey
		//Typetext "Raised in"
		//wait 1
		//Typetext downArrow,return
		click text:"Complete",searchrectangle:ScreenPart("BottomHalf")
		
		Put "Cancel the Action without Justification and Reason in Update and Resubmit page successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	//VerifyErrorMeesage_ToFillJustificationandreason//Need to implement
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Reason" into ErrorMessagesDisplayForFields
	else
		insert "Reason" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Justification" into ErrorMessagesDisplayForFields
	else
		insert "Justification" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep		
		Logerror global Vstep		
		CaptureAtLog		
		
	end if
	//Click imageName:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomHalf")
	
end MA_PendingInfo_Cancel_VerifyError_ToFillJustificationAndReason

to handle MA_PendingInfo_Cancel_FillJustificationAndReason

	//CancelButton//need to implement
	try
		
		click  text:"Cancel",searchrectangle:ScreenPart("HorizontalMiddle")
		Typetext tabkey
		Typetext "Testing Justification for cancel"
		Typetext tabkey
		Typetext "Raised in"
		wait 1
		Typetext downArrow,return
		wait 3
		click imageName:"Complete",searchrectangle:ScreenPart("BottomHalf")
		wait 2
		click imageName:"Complete",searchrectangle:ScreenPart("BottomHalf")
		Put "Cancel the Action in Update and Resubmit page successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog	
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	
end MA_PendingInfo_Cancel_FillJustificationAndReason

to handle SearchRecord_CreateMA_AssignActionOwner

	SearchRecord
	NavigateToMitigationAction
	CreateMitigationActions
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner
	(*VerifyLifeCycleState_INPROGRESS*)
	
end SearchRecord_CreateMA_AssignActionOwner

to handle SearchRecord_OpenRecord_MA_AO

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_INPROGRESS
	
end SearchRecord_OpenRecord_MA_AO

to handle MA_InProgress_Cancel_VerifyError_ToFillJustificationAndReason

	//CompleteMitigationAction_Cancel_without_Justification//Need to implement
	try
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
		
		Click imageName:"CancelMA", waitFor:120,searchRectangle:ScreenPart("Center")
		//Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
		//Typetext"Test"
		//Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]
		//Typetext "Raised in"
		//Typetext downArrow,return
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		
		Put "Action Owner Cancel Mitigation Action" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog	
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	
	//VerifyErrorMeesage_ToFillJustification//need to implement
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Reason"),topleft of imageRectangle(text:"Reason")+[300,110]]

	if ImageFound(text:"This field is required")		
		insert "Reason" into ErrorMessagesDisplayForFields		
	else		
		insert "Reason" into ErrorMessagesNotDisplayForFields		
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Justification"),topleft of imageRectangle(text:"Justification")+[300,110]]

	if ImageFound(text:"field is required")		
		insert "Justification" into ErrorMessagesDisplayForFields		
	else		
		insert "Justification" into ErrorMessagesNotDisplayForFields		
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		
		Put "Error message displayed for all mandatory fields" into global Vstep		
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep		
		Logerror global Vstep		
		CaptureAtLog		
	end if
	
	//Click imageName:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomHalf")
	
end MA_InProgress_Cancel_VerifyError_ToFillJustificationAndReason

to handle MA_InProgress_Cancel_FillJustificationAndReason

	try
		
		(*Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")*)		
		Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
		Typetext"Test"		
		Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
		Typetext "Raised in"		
		Typetext downArrow,return		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")		
		
		Put "Action Owner Cancel Mitigation Action" into global Vstep		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog
		
		//
		
	end try
	
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	
end MA_InProgress_Cancel_FillJustificationAndReason

to handle CreateMA_AssingAO_InProgress

	SearchRecord	
	NavigateToMitigationAction	
	CreateMitigationActions	
	OpenRecord_Draft	
	VerifyLifeCycleState_Draft	
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner	
	(*VerifyLifeCycleState_INPROGRESS*)	
	
end CreateMA_AssingAO_InProgress

to handle LogOut_LoginAs_AO

	Logout	
	LoginToApplication_ActionOwner	
	
end LogOut_LoginAs_AO

to handle LogOut_Login_DC

	LogOut	
	LoginToApplication_DC	
	
end LogOut_Login_DC

to handle LogOut_LoginAs_ActionOwner

	Logout	
	LoginToApplication_ActionOwner	
	
end LogOut_LoginAs_ActionOwner

to handle LogOut_LoginAs_DC

	LogOut	
	LoginToApplication_DC	
	
end LogOut_LoginAs_DC

to handle SearchRecord_OpenRecord_MA_AOwner

	SearchRecord 
	NavigateToMitigationAction 
	OpenRecord_INPROGRESS	
	
end SearchRecord_OpenRecord_MA_AOwner

to handle MA_InProgress_Complete_VerifyError_ToFillSummary

	//CompleteMitigationAction_without_Summary
	
	try
		
		wait 2
		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")		
		WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")		
		
		Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")		
		//Click imagelocation(text:"Action Completion Summary", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]		
		//wait 2
		
		//Typetext"Test Action Completion Summary"		
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")		
		
		Put "Action Owner Completes Mitigation Action without Action Completion Summary" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
		
	Catch theException		
		LogError theException		
		W_App_CommonHandlers.CaptureAtLog
		
		//
		
	end try
	
	
	//VerifyErrorMeesage_TToFillSummary//need to implement
	
	Put () into ErrorMessagesNotDisplayForFields	
	Put () into ErrorMessagesDisplayForFields
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Action Completion Summary"),topleft of imageRectangle(text:"Action Completion Summary")+[300,110]]

	if ImageFound(text:"field is required")		
		insert "Action Completion Summary" into ErrorMessagesDisplayForFields		
	else		
		insert "Action Completion Summary" into ErrorMessagesNotDisplayForFields		
	end if	
	
	Set the searchrectangle to ()	
	
	if number of items of ErrorMessagesDisplayForFields is 1		
		Put "Error message displayed for Justification field" into global Vstep
		Log global Vstep		
		CaptureAtLog	
		
	else		
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep		
		Logerror global Vstep		
		CaptureAtLog		
		
	end if	
	
end MA_InProgress_Complete_VerifyError_ToFillSummary

to handle MA_InProgress_Complete_FillSummary

	Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")	
	Click imagelocation(text:"Action Completion Summary", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	wait 2	
	Typetext"Test Action Completion Summary"	
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")	
	
	Put "Action Owner Completes Mitigation Action" into global Vstep	
	Log global Vstep	
	W_App_CommonHandlers.CaptureAtLog
	
	
end MA_InProgress_Complete_FillSummary

to handle LogOut_Login_AsDC

	LogOut 	
	LoginToApplication_DC
	
end LogOut_Login_AsDC


to handle SearchRecord_InProgress_AsDC

	SearchRecord	
	(*VerifyLifeCycleState_INPROGRESS	*)
	
end SearchRecord_InProgress_AsDC

to handle CreateMA_AssingActionOwner_InProgress

	SearchRecord	
	NavigateToMitigationAction	
	CreateMitigationActions	
	OpenRecord_Draft	
	VerifyLifeCycleState_Draft	
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner	
	(*VerifyLifeCycleState_INPROGRESS*)	
	
end CreateMA_AssingActionOwner_InProgress

to handle SearchRecord_Dev_InProgress_PendingQualityApproval

	SearchRecord	
	VerifyLifeCycleState_INPROGRESS
	
	AssignUser_Teams_QA	
	NavigateToRootCauseIdentified	
	CreateRootCausesIdentified
	
	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord
	
	NavigateToCapaRequirements
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "No" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("LeftHalf"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	wait 20
	NavigateToInvestigationSummary
	wait 20
	
	EditInvestigationSummary	
	NavigateToAffectedLocationInformation	
	CreateAffectedLocationInformation	
	(*Add_ImpactedProduct*)
	
	CompleteInvestigationRCAActionPlan	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL	
	
end SearchRecord_Dev_InProgress_PendingQualityApproval

to handle OpenMA_VerifyState_InProgress
	wait 20
	NavigateToMitigationAction	
	OpenRecord_INPROGRESS	
	(*VerifyLifeCycleState_INPROGRESS*)	
	
end OpenMA_VerifyState_InProgress

to handle SearchRecord_PendingQualityApproval

	SearchRecord	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end SearchRecord_PendingQualityApproval


to handle Dev_PendingQualityApproval_ToPendingMitigation
	
	Dev_PendingQualityApproval_Task	
	(*VerifyLifeCycleState_APPROVEDPENDINGMITIGATIONCOMPLETION*)	
	wait 15
end Dev_PendingQualityApproval_ToPendingMitigation

to handle Open_MAVerifyState_InProgress
	wait 15
	NavigateToMitigationAction	
	OpenRecord_INPROGRESS	
	(*VerifyLifeCycleState_INPROGRESS*)	
	
end Open_MAVerifyState_InProgress

to handle CreateMitigationAction_AssignActionOwner
	NavigateToMitigationAction
	CreateMitigationActions
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitMitigationAction
	AssignUser_Teams_MAActionOwner
	VerifyLifeCycleState_INPROGRESS
	
end CreateMitigationAction_AssignActionOwner

to handle Logout_LoginAO_ProcesstoClosedCompleteMitigation

	LogOut
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_INPROGRESS
	CompleteMitigationAction
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
end Logout_LoginAO_ProcesstoClosedCompleteMitigation

to handle OpenClosedCompleteMitigation_DC

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end OpenClosedCompleteMitigation_DC

to handle ConfirmReopenMitigation_ErrorMessage_NoJustification_DC
	ReopenMA_withoutJustification
end ConfirmReopenMitigation_ErrorMessage_NoJustification_DC

to handle ReopenMA_withoutJustification
	try
		//Click imageName:"CogWheelNew", waitFor:120
		
		if ImageFound(imageName:"CancelImpactAssessment", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "ReOpenMitigationActionOptionIsDisplaying" into global Vstep
			Log global Vstep
			Click imageName:"CancelImpactAssessment", waitFor:120
			
			WaitFor 120, text:"Start",searchRectangle:ScreenPart("Center")
			wait 1
			click ImageLocation(text:"Justification for re-opening",searchRectangle:ScreenPart("Center"))+[0,25]
			typetext ControlKey,a
			typetext backspace
			click imagelocation(text:"Cancel",waitfor:60,searchrectangle:ScreenPart("Center"))+[40,0]
			Set the searchrectangle to [topleft of imageRectangle(text:"Justification for re-opening"),topleft of imageRectangle(text:"Justification for re-opening")+[300,110]]
			if ImageFound(text:"field is required")
				insert "Justification for re-opening " into ErrorMessagesDisplayForFields
			else
				insert "Justification for re-opening " into ErrorMessagesNotDisplayForFields
			end if
			Set the searchrectangle to ()
			
			if number of items of ErrorMessagesDisplayForFields is 1
				Put "Error message displayed for all mandatory fields" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog
				
			else
				Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
				
			end if
		end if	
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
end ReopenMA_withoutJustification

to handle ReopenMitigationAction_DC
	try
		if ImageFound(text:"Justification for re-opening", waitFor:10,searchrectangle:ScreenPart("Center"))
			click ImageLocation(text:"Justification for re-opening",searchRectangle:ScreenPart("Center"))+[0,25]
			typetext "Test"
			wait 1
			//click imagelocation(text:"Cancel",waitfor:120,searchrectangle:ScreenPart("Center"))+[40,0]
			click imagelocation(text:"Cancel",waitfor:10,searchrectangle:ScreenPart("TopRightQuadrant"))+[40,0]
			Put "ActionReopenedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			W_App_CommonHandlers.VerifyLifeCycleState_ReopenedAction
		else
			Put "ReOpenMitigationActionOptionIsNotDisplaying" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	VerifyLifeCycleState_REOPENEDACTION
	
end ReopenMitigationAction_DC

to handle Logout_LoginAO_ClosedCompleteMitigationLogout

	Logout 
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_MA_REOPENEDACTION ---need to implement
	
	Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")	
	
	Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Actions taken on Re", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	wait 2
	Typetext"Test Action Completion Summary"
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	
	Put "Action Owner Completes Mitigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Logout
	
end Logout_LoginAO_ClosedCompleteMitigationLogout


to handle OpenRecord_MA_REOPENEDACTION

	SearchRecords_With_State "Re-open"
	
end OpenRecord_MA_REOPENEDACTION

to handle LoginToApplication_DC_ToPFA
	
	LoginToApplication_DC
	
end LoginToApplication_DC_ToPFA

to handle OpenDev_Progressto_PendingFunctionApproval

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	CompleteInvestigationRCAActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	
end OpenDev_Progressto_PendingFunctionApproval

to handle OpenClosedCompleteMitigation_FA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	NavigateToMitigationAction
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end OpenClosedCompleteMitigation_FA

to handle ConfirmReopenMitigation_ErrorMessage_NoJustification_FA
	ReopenMA_withoutJustification
end ConfirmReopenMitigation_ErrorMessage_NoJustification_FA

to handle ReopenMitigationAction_FA

	try
		if ImageFound(text:"Justification for re-opening", waitFor:10,searchrectangle:ScreenPart("Center"))
			click ImageLocation(text:"Justification for re-opening",searchRectangle:ScreenPart("Center"))+[0,25]
			typetext "Test"
			wait 1
			click item 2 of everyimagelocation( text:"Start",SearchRectangle:ScreenPart("Center"))
			
			Put "ActionReopenedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			W_App_CommonHandlers.VerifyLifeCycleState_ReopenedAction
		else
			Put "ReOpenMitigationActionOptionIsNotDisplaying" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	VerifyLifeCycleState_REOPENEDACTION
	
end ReopenMitigationAction_FA

to handle Logout_LoginAO_CloseCompleteMitigation_AfterFAReopen_Logout

	Logout 
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_MA_REOPENEDACTION
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
	
	
	Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Actions taken on Re", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	wait 2
	Typetext"Test Action Completion Summary"
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	
	Put "Action Owner Completes Mitigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Logout
	
end Logout_LoginAO_CloseCompleteMitigation_AfterFAReopen_Logout

to handle LogInFA_DevProgresstoPendingQualityApproval_Logout

	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	Dev_PendingFunctionApproval_Task
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
end LogInFA_DevProgresstoPendingQualityApproval_Logout

to handle LoginToApplication_QA_ToReopenMA

	LoginToApplication_QA
	
end LoginToApplication_QA_ToReopenMA

to handle OpenClosedCompleteMitigation_QA

	SearchRecord
	NavigateToMitigationAction
	OpenRecord_CLOSEDCOMPLETE
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end OpenClosedCompleteMitigation_QA

to handle ConfirmReopenMitigation_ErrorMessage_NoJustification_QA
	ReopenMA_withoutJustification
end ConfirmReopenMitigation_ErrorMessage_NoJustification_QA

to handle ReopenMitigationAction_QA

	try
		if ImageFound(text:"Justification for re-opening", waitFor:120,searchrectangle:ScreenPart("Center"))
			click ImageLocation(text:"Justification for re-opening",searchRectangle:ScreenPart("Center"))+[0,25]
			typetext "Test"
			wait 1
			click item 2 of everyimagelocation( text:"Start",SearchRectangle:ScreenPart("Center"))
			
			Put "ActionReopenedSuccessfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			W_App_CommonHandlers.VerifyLifeCycleState_ReopenedAction
		else
			Put "ReOpenMitigationActionOptionIsNotDisplaying" into global Vstep
			Logerror global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	End try
	
	VerifyLifeCycleState_REOPENEDACTION
	
end ReopenMitigationAction_QA

to handle Logout_LoginAO_CloseCompleteMitigation_AfterQAReopen_Logout

	Logout 
	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_MA_REOPENEDACTION
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
	
	
	Click text:"Complete Action", waitFor:120,searchRectangle:ScreenPart("Center")
	Click imagelocation(text:"Actions taken on Re", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	wait 2
	Typetext"Test Action Completion Summary"
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	
	Put "Action Owner Completes Mitigation Action" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	VerifyLifeCycleState_CLOSEDCOMPLETE
	Logout
	
end Logout_LoginAO_CloseCompleteMitigation_AfterQAReopen_Logout

to handle LoginToApplication_QA_ToAddSuppleInfo

	LoginToApplication_QA
	SearchRecord	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end LoginToApplication_QA_ToAddSuppleInfo

to handle OpenClosedCompleteMitigation_ForSuppleInfo

	NavigateToMitigationAction	
	OpenRecord_CLOSEDCOMPLETE	
	VerifyLifeCycleState_CLOSEDCOMPLETE
	
end OpenClosedCompleteMitigation_ForSuppleInfo

to handle CreateSupplementaryInformationbyQA

	SupplementaryInfoEditable
	
end CreateSupplementaryInformationbyQA

to handle OpenSupplymentaryInfo_updatefields_Logout

	OpenChildRecord_withSupplementary	
	AttachFile_CommentsField	
	LogOut
	
end OpenSupplymentaryInfo_updatefields_Logout

to handle LoginToApplication_DC_ToAddSuppleInfo

	LoginToApplication_DC
	
end LoginToApplication_DC_ToAddSuppleInfo

to handle CreateSupplementoryInfo_UpdateFields

	SearchRecord	
	NavigateToMitigationAction	
	OpenRecord_CLOSEDCOMPLETE	
	VerifyLifeCycleState_CLOSEDCOMPLETE	
	SupplementaryInfoEditable	
	OpenChildRecord_withSupplementary	
	AttachFile_CommentsField	
	LogOut
	
end CreateSupplementoryInfo_UpdateFields

to handle VerifyCreatedSupplyInfoinAuditTrail_twoRecords

	//VerifySupplementoryInfo_auditTrail----need to implement	
	Put "Need to test in another Run" into global Vstep	
	Log global Vstep	
	W_App_CommonHandlers.CaptureAtLog
	
	
end VerifyCreatedSupplyInfoinAuditTrail_twoRecords

to handle LoginQA_DevProgresstoClosedApproved

	LoginToApplication_QA	
	SearchRecord	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL	
	Dev_PendingQualityApproval_Task	
	VerifyLifeCycleState_ClosedApproved
	
end LoginQA_DevProgresstoClosedApproved

to handle QAcannotReopenMitigationAction_Logout

	NavigateToMitigationAction	
	OpenRecord_CLOSEDCOMPLETE	
	VerifyLifeCycleState_CLOSEDCOMPLETE	
	Verify_QA_Cannot_ReopenMA	
	LogOut	
	
end QAcannotReopenMitigationAction_Logout

to handle Verify_QA_Cannot_ReopenMA

	Click imageName:"CogWheelNew", waitFor:120,searchRectange:ScreenPart("TopRightQuadrant")	
	
	if ImageFound(text:"Re-open Mitigation Action",searchrectangle:ScreenPart("TopRightQuadrantQuadrant"))		
		Put "User can Re-open Mitigation Action " into global Vstep		
		Logerror global Vstep		
		CaptureAtLog
		
	else
		
		Put "User cannot Re-open Mitigation Action" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	end if
	
end Verify_QA_Cannot_ReopenMA

to handle LoginToApplication_DC_CannotReopenMA

	LoginToApplication_DC
	
end LoginToApplication_DC_CannotReopenMA

to handle DCcannotReopenMitigationAction_Logout

	SearchRecord	
	VerifyLifeCycleState_ClosedApproved	
	NavigateToMitigationAction	
	OpenRecord_CLOSEDCOMPLETE	
	VerifyLifeCycleState_CLOSEDCOMPLETE	
	Verify_DC_Cannot_ReopenMA-------Need to implement	
	LogOut
	
end DCcannotReopenMitigationAction_Logout

to handle Verify_DC_Cannot_ReopenMA

	//Click imageName:"CogWheelNew", waitFor:120,searchRectange:ScreenPart("TopRightQuadrant")	
	
	if ImageFound(imageName:"CancelImpactAssessment",searchrectangle:ScreenPart("TopRightQuadrantQuadrant"))		
		Put "User can Re-open Mitigation Action " into global Vstep		
		Logerror global Vstep		
		CaptureAtLog
		
	else
		
		Put "User cannot Re-open Mitigation Action" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	end if
	
end Verify_DC_Cannot_ReopenMA

to handle CancelDeviation_InProgress_VerifyErrorPrompt
	LogOut
	LoginToApplication_DC
	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	CancelDeviationWithoutJustification_VerifyErrorMessage
	
end CancelDeviation_InProgress_VerifyErrorPrompt

to handle CancelDeviationWithoutJustification_VerifyErrorMessage

	try
		
		wait 2
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
		
		Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("Center")
		
		(* Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
			Typetext"Test"
			Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("BottomHalf"))+[0,30]
			Typetext "Raised in"
			Typetext downArrow,return
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if   *)
		Click imageName:"No", waitFor:120,searchRectangle:ScreenPart("BottomHalf")
		Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
		
		Put () into ErrorMessagesNotDisplayForFields
		Put () into ErrorMessagesDisplayForFields
		Set the searchrectangle to [topleft of imageRectangle(text:"Justification for Cancellation"),topleft of imageRectangle(text:"Justification for Cancellation")+[300,110]]
		if ImageFound(text:"field is required")
			insert "Justification for Cancellation" into ErrorMessagesDisplayForFields
		else
			insert "Justification for Cancellation" into ErrorMessagesNotDisplayForFields
		end if
		
		Set the searchrectangle to ()
		
		Set the searchrectangle to [topleft of imageRectangle(text:"Reason for Cancellation"),topleft of imageRectangle(text:"Reason for Cancellation")+[300,110]]
		if ImageFound(text:"This field is required")
			insert "Reason for Cancellation" into ErrorMessagesDisplayForFields
		else
			insert "Reason for Cancellation" into ErrorMessagesNotDisplayForFields
		end if
		
		Set the searchrectangle to ()
		
		if number of items of ErrorMessagesDisplayForFields is 2
			Put "Error message displayed for all mandatory fields" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog
			
		else
			Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
			
			
		end if		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end CancelDeviationWithoutJustification_VerifyErrorMessage

to handle FillMandatoryFields_Cancel_FromInProgress

	Click imagelocation(text:"Justification For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,40]
	Typetext"Test"
	(*Click imagelocation(text:"Reason For Cancel", waitFor:120,searchRectangle:ScreenPart("Center"))+[0,30]*)
	Typetext tabKey
	Typetext "Raised in"
	Typetext downArrow,return
	(*Click imageName:"No", waitFor:120,searchRectangle:ScreenPart("BottomHalf")------------for FA required No
	Click text:"No", waitFor:120,searchRectangle:ScreenPart("BottomLeftQuadrant")+[40,0]*)
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 15
	Put "Deviation coordinator Cancels Deviation" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end FillMandatoryFields_Cancel_FromInProgress

to handle VerifyTask_HomePage_RejectDev_QA

	SearchRecord	
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	//VerifyTask_HomePage
	
	Dev_PendingCancellationQualityApproval_Task
	VerifyLifeCycleState_INPROGRESS
	
end VerifyTask_HomePage_RejectDev_QA

to handle SearchRecord_CancelDev_FromInProgress_withFA

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	
	CompleteInvestigationRCAActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end SearchRecord_CancelDev_FromInProgress_withFA

to handle VerifyTask_HomePage_RejectDev_FA

	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
	Dev_PendingCancellationFunctionApproval_Task
	VerifyLifeCycleState_INPROGRESS
	
end VerifyTask_HomePage_RejectDev_FA

to handle LogOut_LoginAs_DC

	Logout
	LoginToApplication_DC
	
end LogOut_LoginAs_DC

to handle SearchRecord_CancelDev_InProgress_withFA

	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	
	CompleteInvestigationRCAActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	
end SearchRecord_CancelDev_InProgress_withFA

to handle LogOut_Login_AsFA
	Logout
	LoginToApplication_FA
end LogOut_Login_AsFA

to handle ProgressTo_PendingQualityClosureApproval_Dev
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
	//Dev_PendingCancellationFunctionApproval_Task
	
	Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Pending Cancellation Function Approval",SearchRectangle:ScreenPart("Center")
	
	Click text:"Cancellation Function Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
	Typetext tabkey
	Typetext"TestingApproved"
	Typetext tabkey
	Typetext global FAusername
	Typetext tabkey
	Typetext global FApassword
	wait 2
	//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
	wait 15
	Put "PendingCancellationFunctionApprovalTaskCompletedWithApproved" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	
end ProgressTo_PendingQualityClosureApproval_Dev

to handle ProgressTo_ClosedCancelled_Dev

	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	//Dev_PendingCancellationQualityApproval_Task
	
	Click text:"Complete",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
	waitfor 120,text:"Pending Quality Approval of Cancellation",SearchRectangle:ScreenPart("Center")
	
	Click text:"Cancellation Quality Approved", waitFor:120,SearchRectangle:ScreenPart("Center")
	Typetext tabkey
	Typetext"TestingApproved"
	Typetext tabkey
	Typetext global QAusername
	Typetext tabkey
	Typetext global QAPassword
	//Click text:"Complete", waitFor:120,SearchRectangle:ScreenPart("BottomHalf")
	click imagelocation(text:"Complete",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant"))
	wait 15
	Put "PendingCancellationQualityApprovalTaskCompletedWithApproved" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	//VerifyCommentsField_NotMandatory------need to implement
	(*VerifyLifeCycleState_CLOSEDCANCELLED*)
	
end ProgressTo_ClosedCancelled_Dev

to handle ReOpen_ClosedCancelled_Dev
	Verify_NotPossible_To_Reopen_ClosedDev
end ReOpen_ClosedCancelled_Dev

to handle Verify_NotPossible_To_Reopen_ClosedDev

	//Click imageName:"CogWheelNew", waitFor:120,searchRectange:ScreenPart("TopRightQuadrant")
	
	if ImageFound(imageName:"CancelImpactAssessment",searchrectangle:ScreenPart("TopRightQuadrant"))
		Put "User can Re-open Deviation " into global Vstep
		Logerror global Vstep
		CaptureAtLog
	else
		Put "User cannot Re-open Deviation" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	end if
	NavigateToSectionFromLeftPane"General Information"
end Verify_NotPossible_To_Reopen_ClosedDev

to handle VerifyEditButton_ClosedCancelled
	EditButtonNotAvailable
end VerifyEditButton_ClosedCancelled

to handle CannotAdd_Create_AnyObject

	NavigateToAffectedLocationInformation
	CreateButtonNotAvailable
	NavigateToRootCauseIdentified
	CreateButtonNotAvailable	
	NavigateToSectionFromLeftPane "Associated Records"
	CreateButtonNotAvailable
	
end CannotAdd_Create_AnyObject

//navigate to Site Area(s) & Sub-Area(s) Section
to handle NavigateToSiteAreaSubArea
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Site Area(s) & Sub-Area(s)"
end NavigateToSiteAreaSubArea

to handle LogOut_LoginAs_FA
	LogOut
	LoginToApplication_FA
end LogOut_LoginAs_FA

to handle CannotReopen_CannotEdit_AnyInfo_FA
	(*LogOut_LoginAs_FA*)
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateButtonNotAvailable
	NavigateToRootCauseIdentified
	CreateButtonNotAvailable	
	NavigateToSectionFromLeftPane "Associated Records"
	CreateButtonNotAvailable
	
end CannotReopen_CannotEdit_AnyInfo_FA

to handle LogOut_LoginAs_DeviationCoordinator

	LogOut	
	LoginToApplication_DC
	
end LogOut_LoginAs_DeviationCoordinator

to handle CannotReopen_CannotEdit_AnyInfo_DC
	SearchRecord
	NavigateToAffectedLocationInformation	
	CreateButtonNotAvailable	
	NavigateToRootCauseIdentified	
	CreateButtonNotAvailable	
	NavigateToSectionFromLeftPane "Associated Records"	
	CreateButtonNotAvailable
	
end CannotReopen_CannotEdit_AnyInfo_DC

to handle Login_DC_VerifyTask_HomePage--------------need to check again
	Logout
	LoginToApplication_DC
	NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning
end Login_DC_VerifyTask_HomePage

to handle OpenDev_Edit_and_VerifyRCAFields
	ClickRecordIdHyperLinkfromTaskPage
	VerifyLifeCycleState_INPROGRESS
	NavigateToInvestigationSummary
	EditInvestigationSummary_VerifyRCAFields
	
end OpenDev_Edit_and_VerifyRCAFields

to handle EditInvestigationSummary_VerifyRCAFields

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[150,0]
	//-----------------need to set the rectangle
	set the searchrectangle to [bottomLeft of Imagerectangle(text:"Root Cause Analysis Tools"), ImageLocation(text:"Root Cause Analysis Tools")+[755,560]]
	
	if ImageFound(text:"Built-in Tool", SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Attachment") and if ImageFound(text:"No Root Cause Analysis Required")
		
		put "3 options are visible" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else
		put "3 options are not visible" into global Vstep
		Logerror global Vstep
		CaptureAtLog
	end if
	
	Set the searchrectangle to ()
	
end EditInvestigationSummary_VerifyRCAFields

to handle EditAs_NoRCA_Verify_Justification

	TypeText "No Root Cause"
	typetext downArrow, Return
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	(*	typetext tabKey
	typetext "test"*)
	
	if ImageFound(text:"Justification for no RCA Tools", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Justification for no RCA Tools field is visible" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "Justification for no RCA Tools field is not visible" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
	end if
	
end EditAs_NoRCA_Verify_Justification

to handle Verify_ErrorMessage_Justification_FillJustification
	try
		click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		wait 4
		(*		if ImageFound(text:"needs to be filled in", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Error message for 'Justification for no RCA Tools' field is visible" into global Vstep
			Log global Vstep
			
			CaptureAtLog
		else
			Put "Error message for 'Justification for no RCA Tools' field is visible" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if*)
		
		(*Set the searchrectangle to [topleft of imageRectangle(text:"Justification for no RCA Tools"),topleft of imageRectangle(text:"Justification for no RCA Tools")+[300,110]]*)
		if ImageFound(text:"Justification needs to")
			Put "Error message for 'Justification for no RCA Tools' field is visible" into global Vstep
			Log global Vstep
			
			CaptureAtLog
		else
			Put "Error message for 'Justification for no RCA Tools' field is visible" into global Vstep
			LogError global Vstep
			
			CaptureAtLog
		end if
		
		(*Set the searchrectangle to ()*)
		
		click imagelocation(text:"Justification for no RCA Tools",SearchRectangle:ScreenPart("LeftHalf"))+[150,0]
		
		typetext "test"
		click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		wait 4
		
		Put "Justification for no RCA Tools field is saved successfully" into global Vstep
		Log global Vstep
		
		CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end Verify_ErrorMessage_Justification_FillJustification


to handle Edit_FinalSeverity_Major_VerifyError_ToFillRCA

	ScrollWheelUp 30	
	NavigateToGeneralInformationSection	
	Edit_EstimatedSeverity_Major
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	NavigateToInvestigationSummary
	VerifyError_ToFillRCA
	
end Edit_FinalSeverity_Major_VerifyError_ToFillRCA

to handle VerifyError_ToFillRCA

	wait 3
	if ImageFound(text:"When GBU is Health and Final Severity is Critical or Major, you need to", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"RCA tool", waitFor:120,SearchRectangle:ScreenPart("Center") )
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is displayed" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is not displayed" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
	end if
	
end VerifyError_ToFillRCA

to handle NavigateToGeneralInformationSection
	NavigateToSectionFromLeftPane "General Information"
end NavigateToGeneralInformationSection

to handle NavigateToGeneralInformation
	NavigateToSectionFromLeftPane "General Information"
end NavigateToGeneralInformation

to handle Edit_EstimatedSeverity_Major

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Estimated Severity
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Major" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]

end Edit_EstimatedSeverity_Major

to handle Edit_EstimatedSeverity_Critical

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Estimated Severity
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Critical" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]

end Edit_EstimatedSeverity_Critical

to handle Edit_EstimatedSeverity_Minor
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Estimated Severity
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Minor" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]

end Edit_EstimatedSeverity_Minor


to handle Edit_FinalSeverity_Critical_VerifyError_ToFillRCA
	ScrollWheelUp 30
	
	NavigateToGeneralInformationSection
	
	(*Edit_EstimatedSeverity_Critical*)
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Critical" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	NavigateToInvestigationSummary
	VerifyError_ToFillRCA
	
end Edit_FinalSeverity_Critical_VerifyError_ToFillRCA

to handle Remove_NoRCA_Verify_NoJustification

	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]

	Typetext Backspace,Backspace,Backspace
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 15
	
	NavigateToInvestigationSummary
	
	if ImageFound(text:"Justification for no RCA Tools", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Justification for no RCA Tools' field is still Visible" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
	else
		Put "Justification for no RCA Tools' field is Not Visible" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	end if
	
	
end Remove_NoRCA_Verify_NoJustification

to handle Edit_GBU_HealthAndHygiene
	NavigateToGeneralInformationSection
	Edit_GBU_HealthAndHygiene_GenInfo
end Edit_GBU_HealthAndHygiene

to handle Edit_GBU_HealthAndHygiene_GenInfo

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,30]

	Typetext Backspace,Backspace,Backspace
	TypeText "Health",return
	TypeText "Hygiene",return
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 15
	
	Put "GBU as Health and Hygiene saved successfully" into global Vstep
	Log global Vstep
	
	CaptureAtLog	
	
end Edit_GBU_HealthAndHygiene_GenInfo


to handle Edit_As_NoRCA_VerifyError_ToFillRCA

	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[150,0]
	TypeText "No Root Cause"	
	typetext downArrow, Return	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	VerifyError_ToFillRCA_forHealthAndHygiene
	
end Edit_As_NoRCA_VerifyError_ToFillRCA

to handle VerifyError_ToFillRCA_forHealthAndHygiene

	wait 3
	
	if ImageFound(text:"When GBU are Health and Hygiene and Estimated or Final Severity is Critical or Major", waitFor:120,SearchRectangle:ScreenPart("Center")) and if ImageFound(text:"need to use a RCA tool", waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is displayed for GBU health and hygiene" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is not displayed for GBU health and hygiene" into global Vstep
		
		LogError global Vstep
		CaptureAtLog
		
	end if
	
end VerifyError_ToFillRCA_forHealthAndHygiene

to handle Edit_FinalSeverity_ToMajor_VerifyError

	NavigateToGeneralInformation
	
	(*Edit_EstimatedSeverity_Major*)
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Major" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	NavigateToInvestigationSummary
	
	VerifyError_ToFillRCA_forHealthAndHygiene
	
end Edit_FinalSeverity_ToMajor_VerifyError

to handle Edit_FinalSeverity_ToMinor

	(*Edit_EstimatedSeverity_Minor*)
	NavigateToGeneralInformation
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Minor" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	
	NavigateToInvestigationSummary	
	
	if ImageFound(text:"When GBU are Health and Hygiene and Estimated", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"or Final Severity is Critical or Major, you need to use", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"a RCA tool", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
		
		Put "Details are not saved successfully for Estimated severity Minor with GBU Health and Hygiene " into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	else
		
		Put "Details are  saved successfully for Estimated severity Minor with GBU Health and Hygiene" into global Vstep		
		Log global Vstep
		CaptureAtLog
		
	end if
	
end Edit_FinalSeverity_ToMinor

to handle Edit_GBU_RemoveHealth

	NavigateToGeneralInformation
	
	Edit_GBU_RemoveHealth_KeepHygiene_GenInfo
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15	
	
	if ImageFound(text:"Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Minor", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Minor with GBU Hygiene " into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Minor with GBU Hygiene" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	end if
	
end Edit_GBU_RemoveHealth

to handle Edit_GBU_RemoveHealth_KeepHygiene_GenInfo

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,30]

	Typetext Backspace,Backspace,Backspace
	
	TypeText "Hygiene",return
	
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	
	
end Edit_GBU_RemoveHealth_KeepHygiene_GenInfo

to handle Edit_EstimatedSeverity_ToMajor

	NavigateToGeneralInformation
	
	Edit_EstimatedSeverity_Major
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	
	if ImageFound(text:"Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Major", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Major with GBU Hygiene " into global Vstep		
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Major with GBU Hygiene" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	end if
	
end Edit_EstimatedSeverity_ToMajor

to handle Edit_EstimatedSeverity_ToCritical

	NavigateToGeneralInformation
	
	Edit_EstimatedSeverity_Critical
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	
	NavigateToInvestigationSummary
	
	VerifyError_ToFillRCA_forHygiene
	
end Edit_EstimatedSeverity_ToCritical

to handle VerifyError_ToFillRCA_forHygiene

	wait 3
	
	if ImageFound(text:"When GBU is Hygiene and Estimated or Final Severity is Critical, you", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"to use a RCA tool", waitFor:120,SearchRectangle:ScreenPart("Center"))
		
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is displayed for GBU hygiene" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else
		
		Put "Error message for 'Root Cause Analysis Tools' field is to require RCA tool is not displayed for GBU hygiene" into global Vstep		
		LogError global Vstep		
		CaptureAtLog
		
	end if
	
end VerifyError_ToFillRCA_forHygiene


to handle Edit_RCA_ToAttachments_WithGen

	EditAs_RCAAttachments
	
end Edit_RCA_ToAttachments_WithGen


to handle EditAs_RCAAttachments

	(*click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")*)
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "Attachment"	
	typetext downArrow, Return	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	if ImageFound(text:"Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Critical", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Critical with GBU Hygiene " into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Critical with GBU Hygiene" into global Vstep		
		LogError global Vstep		
		CaptureAtLog		
	end if
	
end EditAs_RCAAttachments


to handle Edit_GBU_HealthAndHygiene_AfterEstimatedSeverity

	NavigateToGeneralInformation	
	Edit_GBU_HealthAndHygiene_GenInfo	
	
	(*click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")*)	
	wait 15
	
	if ImageFound(text:"Health, Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Critical", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Critical with GBU Health and Hygiene " into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Critical with GBU Health and Hygiene" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	end if
	
end Edit_GBU_HealthAndHygiene_AfterEstimatedSeverity


to handle Edit_EstimatedSeverity_FromCritical_ToMajor

	NavigateToGeneralInformation	
	Edit_EstimatedSeverity_Major	
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15	
	if ImageFound(text:"Health, Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Major", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Major with GBU Health and Hygiene " into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Major with GBU Health and Hygiene" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	end if	
	
end Edit_EstimatedSeverity_FromCritical_ToMajor


to handle Edit_EstimatedSeverity_ToMinor

	NavigateToGeneralInformation	
	Edit_EstimatedSeverity_Minor
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	if ImageFound(text:"Health, Hygiene", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Minor", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Minor with GBU Health and Hygiene " into global Vstep		
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Minor with GBU Health and Hygiene" into global Vstep		
		LogError global Vstep
		CaptureAtLog		
	end if
	
	
end Edit_EstimatedSeverity_ToMinor


to handle Edit_GBU_RemoveHygiene

	NavigateToGeneralInformation
	
	Edit_GBU_RemoveHygiene_KeepHealth_GenInfo	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	if ImageFound(text:"Health", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Minor", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Major with GBU Health and RCA as Attachment " into global Vstep		
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Minor with GBU Health and RCA as Attachment" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	end if
	
	
end Edit_GBU_RemoveHygiene


to handle Edit_GBU_RemoveHygiene_KeepHealth_GenInfo

	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[200,30]
	Typetext Backspace,Backspace,Backspace	
	TypeText "Health",return	
	Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))+[0,50]

end Edit_GBU_RemoveHygiene_KeepHealth_GenInfo


to handle Edit_EstimatedSeverity_FromMinor_ToMajor

	NavigateToGeneralInformation	
	Edit_EstimatedSeverity_Major
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	
	if ImageFound(text:"Health", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Major", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Major with GBU Health and RCA as Attachment " into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Major with GBU Health and RCA as Attachment" into global Vstep		
		LogError global Vstep		
		CaptureAtLog		
	end if	
	
end Edit_EstimatedSeverity_FromMinor_ToMajor

to handle Edit_EstimatedSeverity_FromMajor_ToCritical

	NavigateToGeneralInformation	
	Edit_EstimatedSeverity_Critical	
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	if ImageFound(text:"Health", waitFor:120,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Critical", waitFor:120,SearchRectangle:ScreenPart("RightHalf"))
		
		Put "Details saved successfully for Estimated severity Critical with GBU Health and RCA as Attachment " into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		
		Put "Details not saved successfully for Estimated severity Critical with GBU Health and RCA as Attachment" into global Vstep		
		LogError global Vstep
		CaptureAtLog		
	end if
	
end Edit_EstimatedSeverity_FromMajor_ToCritical

to handle OpenDev_EditAs_NoRCA

	ClickRecordIdHyperLinkfromTaskPage
	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 30, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[150,0]
	TypeText "No Root Cause"
	typetext downArrow, Return
	
	(*click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]*)
	
	typetext tabKey
	typetext "test"
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 4
	
	
	if ImageFound(text:"Justification for no RCA Tools", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details for RCA and justification for No RCA saved successfully" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "Details for RCA and justification for No RCA not saved successfully" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
	end if
	
end OpenDev_EditAs_NoRCA

to handle Navigate_EditInvestigationSummary
	wait 5
	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 30, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	//Potential risk to
	click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("LeftHalf") )+[250,0]
	//click text:global PotentialRiskToPatientConsumer,SearchRectangle:ScreenPart("Center")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "No Potential"
	wait 1
	click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("LeftHalf") )+[250,30]

	wait 1
	//Potential compliance
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Minor"
	wait 1
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]


	//Potential risk of impacting
	click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,0]
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "No Potential"
	wait 1
	click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,30]
	wait 1
	click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[0,30]
	wait 1
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	put "3 fields are set as minor successfully"
	Log global Vstep
	
	CaptureAtLog
	
end Navigate_EditInvestigationSummary


to handle EditInvestigationSummary_Major_VerifyError_ToAddRCA

	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	//Potential compliance
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Major"
	wait 1
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	VerifyError_ToFillRCA
	
	
end EditInvestigationSummary_Major_VerifyError_ToAddRCA

to handle Edit_RCA_ToAttachments

	NavigateToInvestigationSummary
	
	(*click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")*)
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]

	TypeText Backspace,Backspace,Backspace
	TypeText "Attachment"
	typetext downArrow, Return
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]

	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	NavigateToInvestigationSummary
	
	
	(* if ImageFound(text:"Justification for no RCA Tools", waitFor:120,SearchRectangle:ScreenPart("Center"))
				Put "Details are not saved successfully with RCA Attachment and Final severity Major" into global Vstep
				LogError global Vstep
				
				CaptureAtLog
			else
				Put "Details are saved successfully with RCA Attachment and Final severity Major" into global Vstep
				
				Log global Vstep
				CaptureAtLog
			end if  *)
	
	(*	Set the searchrectangle to [ ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[500,150]]*)
	
	put ReadText(topRight of ImageRectangle(text:"Final Severity"),ImageLocation(text:"Final Severity")+[300,30]) into FinalSeverity_Major
	(*Log FinalSeverity_Major*)
	if FinalSeverity_Major is "Major" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if
	
	
	
end Edit_RCA_ToAttachments

to handle EditInvestigationSummary_Critical_VerifyError_ToAddRCA

	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	//Potential compliance
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Critical"
	wait 1
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]


	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	NavigateToInvestigationSummary
	
	(*	Set the searchrectangle to [ ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[500,150]]*)
	
	put ReadText(topRight of ImageRectangle(text:"Final Severity"),ImageLocation(text:"Final Severity")+[300,30]) into FinalSeverity_Critical
	
	if FinalSeverity_Critical is "Critical" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if
	
	
end EditInvestigationSummary_Critical_VerifyError_ToAddRCA


to handle Edit_RCA_ToNoRCA
	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]

	TypeText Backspace,Backspace,Backspace
	TypeText "No Root Cause"
	typetext downArrow, Return
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]

	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	
	VerifyError_ToFillRCA
	
end Edit_RCA_ToNoRCA


to handle Edit_RCA_ToAttachments_GBU_ToHealthAndHygiene

	NavigateToInvestigationSummary
	
	(*click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")*)	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "Attachment"	
	typetext downArrow, Return	
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 20
	NavigateToGeneralInformationSection	
	
	Edit_GBU_HealthAndHygiene_GenInfo	
	
	(*click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")*)	
	wait 20
	
	put "Details for RCA as attachment and GBU as Health and hygiene saved successfully" into global Vstep	
	Log global Vstep	
	CaptureAtLog
	
end Edit_RCA_ToAttachments_GBU_ToHealthAndHygiene

to handle Edit_RCA_ToNoRCA_VerifyError

	NavigateToInvestigationSummary	
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[130,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "No Root Cause"	
	typetext downArrow, Return	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	VerifyError_ToFillRCA_forHealthAndHygiene
	
end Edit_RCA_ToNoRCA_VerifyError

to handle EditInvestigationSummary_Major_VerifyError_ToAddRCA_Hygiene

	NavigateToInvestigationSummary
	
	//Potential compliance	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")	
	wait 2	
	Typetext controlKey,a	
	Typetext backspace	
	Typetext "Major"	
	wait 1	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	VerifyError_ToFillRCA_forHealthAndHygiene
	
end EditInvestigationSummary_Major_VerifyError_ToAddRCA_Hygiene


to handle Edit_RCA_ToAttachments_VerifyFinalSeverity

	NavigateToInvestigationSummary	
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[130,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "Attachment"	
	typetext downArrow, Return	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 20
	
	NavigateToInvestigationSummary	
	
	(*	Set the searchrectangle to [ ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[500,150]]*)
	
	put ReadText(topRight of ImageRectangle(text:"Final Severity"),ImageLocation(text:"Final Severity")+[300,30]) into FinalSeverity_Major
	
	if FinalSeverity_Major is "Major" then
		
		put "Value displayed as expected" into global Vstep
		Log global Vstep		
		CaptureAtLog
		
	else 
		
		put "Value not displayed as expected" into global Vstep		
		LogError global Vstep
		CaptureAtLog		
	end if
	
end Edit_RCA_ToAttachments_VerifyFinalSeverity


to handle EditInvestigationSummary_Minor

	NavigateToInvestigationSummary	
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	
	//Potential compliance	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")	
	wait 2	
	Typetext controlKey,a	
	Typetext backspace	
	Typetext "Minor"	
	wait 1	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 20
	
	NavigateToInvestigationSummary	
	
	(*	Set the searchrectangle to [ ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[500,150]]*)
	
	put ReadText(topRight of ImageRectangle(text:"Final Severity"),ImageLocation(text:"Final Severity")+[300,30]) into FinalSeverity_Minor
	
	if FinalSeverity_Minor is "Minor" then		
		put "Value displayed as expected" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else 
		
		put "Value not displayed as expected" into global Vstep		
		LogError global Vstep			
		CaptureAtLog
	end if
	
	
end EditInvestigationSummary_Minor


to handle Edit_RCA_ToNoRCA_GBU_RemoveHealth

	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[110,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "No Root Cause"	
	typetext downArrow, Return	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	wait 15
	NavigateToGeneralInformationSection	
	
	Edit_GBU_RemoveHealth_KeepHygiene_GenInfo
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15	
	
	put "Details for RCA as No RCA and GBU as Hygiene saved successfully" into global Vstep	
	Log global Vstep	
	CaptureAtLog
	
end Edit_RCA_ToNoRCA_GBU_RemoveHealth


to handle EditInvestigationSummary_Major_VerifyError


	NavigateToInvestigationSummary
	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Potential compliance
	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]

	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	
	wait 2
	
	Typetext controlKey,a	
	Typetext backspace	
	Typetext "Major"	
	wait 1	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15
	
	NavigateToInvestigationSummary	
	
	(*Set the searchrectangle to [ ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[-200,5], ImageLocation(text:"Final Severity",searchrectangle:ScreenPart("Center"))+[500,150]]*)
	
	put ReadText(topRight of ImageRectangle(text:"Final Severity"),ImageLocation(text:"Final Severity")+[300,30]) into FinalSeverity_Major

	if FinalSeverity_Major is "Major" then		
		put "Value displayed as expected" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else 
		
		put "Value not displayed as expected" into global Vstep		
		LogError global Vstep		
		CaptureAtLog
	end if
	
end EditInvestigationSummary_Major_VerifyError



to handle EditInvestigationSummary_Critical_VerifyError

	NavigateToInvestigationSummary	
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")	
	
	//Potential compliance	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	
	wait 2
	
	Typetext controlKey,a	
	Typetext backspace	
	Typetext "Critical"	
	wait 1	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")	
	wait 15	
	VerifyError_ToFillRCA_forHygiene	
	
end EditInvestigationSummary_Critical_VerifyError

to handle Edit_RCA_ToAttachments_FinalSeverity_Critical

	Click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[130,30]
	TypeText Backspace,Backspace,Backspace	
	TypeText "Attachment"	
	typetext downArrow, Return	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 20	
	
	NavigateToInvestigationSummary	
	
	if ImageFound(text:"Justification for no RCA Tools", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))		
		Put "Details are not saved successfully with RCA Attachment and Final severity Critical" into global Vstep		
		LogError global Vstep
		CaptureAtLog
		
	else
		
		Put "Details are saved successfully with RCA Attachment and Final severity Critical" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	end if  
	
	
end Edit_RCA_ToAttachments_FinalSeverity_Critical

to handle CreateDeviation_Hygiene

	CreateDeviation //Hygiene
	(*VerifyLifeCycleState_Draft*)
	
end CreateDeviation_Hygiene

to handle Assign_DeviationCoordinatorandQA_InProgress

	AssignUser_Teams_DeviationCoordinator 
	AssignUser_Teams_QA
	//AssignDeviationCoordinator 
	VerifyLifeCycleState_INPROGRESS
	
end Assign_DeviationCoordinatorandQA_InProgress

to handle Logout_Login_DC_VerifyTask_HomePage

	Logout
	LoginToApplication_DC
	NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning
	ClickRecordIdHyperLinkfromTaskPage
	
end Logout_Login_DC_VerifyTask_HomePage

to handle Navigate_and_FillInvestigationSummaryExceptRCA_CAPARequirementsExceptProgramCreation

	NavigateToInvestigationSummary
	try
		
		click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]

		Typetext backspace,backspace,backspace
		Typetext global RiskAssessmentTool
		wait 1
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,31]
		click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[0,31]
		if global RiskAssessmentTool contains "no Risk Assessment"
			click imagelocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]
			Typetext "t"
		end if
		
		if global ISRepeatOccurrence contains "Yes"
			click text:"Yes",SearchRectangle:ScreenPart("LeftHalf")
		else
			click text:"No",SearchRectangle:ScreenPart("LeftHalf")
		end if
		
		// not completed
		
		//Investigation Conclusion
		click imagelocation(text:"Investigation Conclusion",SearchRectangle:ScreenPart("LeftHalf") )+[200,0]
		Typetext "Test"
		//Potential risk to
		click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("LeftHalf") )+[250,0]
		//click text:global PotentialRiskToPatientConsumer,SearchRectangle:ScreenPart("Center")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskToPatientConsumer
		wait 1
		click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("LeftHalf") )+[250,30]

		wait 1
		//Potential compliance
		click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
		//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialCompliance
		wait 1
		click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]


		//Potential risk of impacting
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskOfImpactingEfficacy
		wait 1
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,30]
		wait 1
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[0,30]
		wait 1
		Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvRelatedQMSElement
		wait 2
		Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		
		click text:"Save",SearchRectangle:ScreenPart("RightHalf")
		wait 20
		
		(*	Put ReadText(ImageLocation(text:"Final Severity")+[32,-10],ImageLocation(text:"Final Severity")+[166,15]) into global FinalSeverity*)
		//Log FinalSeverity
		
		Put "Investigation Summary and Conclusion Edited Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
	NavigateToRootCauseIdentified
	CreateRootCausesIdentified
	wait 20
	OpenRootCausesIdentified
	wait 20
	EditCountermeasureLevel
	SearchRecord
	
	NavigateToCapaRequirements
	wait 10
	//AddingCapaProgram_In_CapaRequirementSection
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "No" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[150,50]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("LeftHalf"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Wait 15
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	Add_ImpactedProduct
	wait 15
	
end Navigate_and_FillInvestigationSummaryExceptRCA_CAPARequirementsExceptProgramCreation

to handle Navigate_and_CreateAffectedLocationInformationOnly

	NavigateToAffectedLocationInformation 
	CreateAffectedLocationInformation
	wait 15
	
end Navigate_and_CreateAffectedLocationInformationOnly

to handle SubmitApproval_VerifyErrorMessageRCAandRC

	Click Text:"Complete",searchRectangle:screenpart("TopRightQuadrant")	
	Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")	
	click imageName:"No",searchRectangle:ScreenPart("BottomHalf")	
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	wait 15	
	
	Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval without filling sections" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	Set the searchRectangle to screenpart("center")
	if ImageFound(text:"Root Cause Analysis Tools is not") and if ImageFound(text:"blank")
		Put "Error messages are displayed for RCA and RC" into global Vstep
		Log global Vstep		
		CaptureAtLog
	else
		Put "Error messages are not displayed for RCA and RC" into global Vstep
		LogError global Vstep		
		CaptureAtLog
	end if
	
	Click Text:"OK",searchRectangle:screenpart("BottomHalf")
	wait 10
	
end SubmitApproval_VerifyErrorMessageRCAandRC

to handle EditInvestigationSummary_RCA_AlongwithAttachment_Whys
	NavigateToInvestigationSummary
	//EditInvestigationSummary_FillonlyRCAMultiple-------------Need to implement
	click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 120, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[130,0]
	TypeText Backspace,Backspace,Backspace
	TypeText "Built-in tool"
	typetext downArrow, Return
	
	click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf"))+[0,50]
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	wait 15
	
	//Verify5WhysSection---------------Need to mplement
	if ImageFound(text:"5 Whys", waitFor:120,SearchRectangle:ScreenPart("LeftHalf"))
		Put "5 Whys section is displayed on selection of Built-in tool for RCA" into global Vstep
		Log global Vstep
		
		CaptureAtLog
	else
		Put "5 Whys section is not displayed on selection of Built-in tool for RCA" into global Vstep
		
		LogError global Vstep
		CaptureAtLog
	end if
	
end EditInvestigationSummary_RCA_AlongwithAttachment_Whys


to handle SubmitApproval_VerifyErrorMessageRCAandCompelte

	Click Text:"Complete",searchRectangle:screenpart("TopRightQuadrant")	
	Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")	
	click imageName:"No",searchRectangle:ScreenPart("BottomHalf")	
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")	
	
	wait 15
	
	Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval without filling sections" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	Set the searchRectangle to screenpart("center")
	if ImageFound(text:"Root Cause Analyses: At least") and if ImageFound(text:"one record equals Closed - Complete")
		Put "Error messages are displayed for RCA and Complete" into global Vstep
		Log global Vstep		
		CaptureAtLog
	else
		Put "Error messages are not displayed for RCA and Complete" into global Vstep
		LogError global Vstep		
		CaptureAtLog
	end if
	
	Click Text:"OK",searchRectangle:screenpart("BottomHalf")
	
	wait 10
	
end SubmitApproval_VerifyErrorMessageRCAandCompelte

to handle CreateFiveWhys
	Navigateto5Whys
	Create5Whys
	//Verify5WhyAdded----------------Need to implement
	
	
end CreateFiveWhys

to handle Create5Whys

	try
		
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
		wait 5
		WaitFor 120, text:"Create 5 Whys Analysis",searchrectangle:ScreenPart("TopLeftQuadrant")
		
		click ImageLocation(text:"Problem Statement",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant"))
		
		wait 15
		
		if ImageFound(text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
			Put "5 whys created successfully" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end Create5Whys

//NavigateTo5Whys
to handle NavigateTo5Whys
	NavigateToSectionFromLeftPane "5 Whys"
end NavigateTo5Whys


to handle SubmitApproval_VerifyErrorMessageRCAandRCIWhys

	SearchRecord
	Click Text:"Complete",searchRectangle:screenpart("TopRightQuadrant")	
	Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")
	click imageName:"No",searchRectangle:ScreenPart("BottomHalf")
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	
	wait 15
	Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval without filling sections" into global Vstep	
	Log global Vstep	
	W_App_CommonHandlers.CaptureAtLog
	
	
	Set the searchRectangle to screenpart("center")
	
	if ImageFound(text:"Root Cause Analyses: At least") and if ImageFound(text:"one record equals Closed - Complete") and if ImageFound(text:"Root Cause Analyses: No") and if ImageFound(text:"records equal In Analysis")
		
		Put "3 Error messages are displayed for RCA and RC" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else		
		Put "3 Error messages are not displayed for RCA and RC" into global Vstep		
		LogError global Vstep		
		CaptureAtLog		
	end if
	
	Click Text:"OK",searchRectangle:screenpart("BottomHalf")
	
end SubmitApproval_VerifyErrorMessageRCAandRCIWhys

to handle Navigate_RCI_CreateRCI_ErrorMessage

	NavigateToRootCauseIdentified 
	
	//CreateRootCausesIdentified_withoutFillfields--Need to implement
	
	Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
	
	wait 5
	
	WaitFor 120, text:"Create Root Cause",searchrectangle:ScreenPart("Center")
	
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
	
	wait 15
	
	Put Imagelocation(text:"Create Root Cause",SearchRectangle:ScreenPart("Center")) into dragLocation
	put dragLocation+[0,-120] into dropLocation
	Drag dragLocation
	Drop dropLocation
	
	//VerifyErrorMessage_RC--need to implement
	
	Put () into ErrorMessagesNotDisplayForFields	
	Put () into ErrorMessagesDisplayForFields
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Category"),topleft of imageRectangle(text:"Category")+[500,110]]
	if ImageFound(text:"This field is required")		
		insert "Category" into ErrorMessagesDisplayForFields		
	else		
		insert "Category" into ErrorMessagesNotDisplayForFields		
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Sub Category"),topleft of imageRectangle(text:"Sub Category")+[300,110]]
	if ImageFound(text:"field is required")		
		insert "Sub Category" into ErrorMessagesDisplayForFields		
	else		
		insert "Sub Category" into ErrorMessagesNotDisplayForFields		
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Cause Classification"),topleft of imageRectangle(text:"Cause Classification")+[300,110]]

	if ImageFound(text:"field is required")		
		insert "Cause Classification" into ErrorMessagesDisplayForFields		
	else		
		insert "Cause Classification" into ErrorMessagesNotDisplayForFields		
	end if	
	
	Set the searchrectangle to ()
	
	
end Navigate_RCI_CreateRCI_ErrorMessage

to handle FillRCIFieldsSuccessfullyCreate

	//CreateRootCausesIdentified----------Split
	
	click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
	wait 2	
	Typetext "Root Cause"	
	click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[120,20]
	wait 2	
	Typetext tabKey	
	wait 1	
	Typetext "1"	
	TypeText downArrow, return	
	(*click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("BottomHalf"))+[120,22]
wait 2*)	
	click ImageLocation(text:"Category",searchrectangle:ScreenPart("Center"))+[100,0]
	Typetext "Environment"	
	wait 1	
	click ImageLocation(text:"Category",searchrectangle:ScreenPart("Center"))+[120,45]
	wait 1	
	Typetext tabKey	
	wait 1	
	Typetext "Environment", return	
	wait 1	
	(*click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[100,0]
Typetext "1"
wait 1
click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("BottomLeftQuadrant"))+[120,45]*)	
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
	
	wait 15	
	if ImageFound(text:"Root Cause", waitFor:120,SearchRectangle:ScreenPart("Center"))		
		Put "Root Cause Created Successfully" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "Root Cause Not Created" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	OpenRootCausesIdentified
	wait 15
	EditCountermeasureLevel
	wait 10
	SearchRecord
end FillRCIFieldsSuccessfullyCreate

to handle OpenRCI_Edit_Fields
	NavigateToRootCauseIdentified
	//OpenRootCausesIdentified--need to implement	
	Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
	click ImageLocation(text:"Show in tab")+[-200,0]
	
	//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""	
	//Put "RecordIsAvailable" into global Vstep	
	//Log global Vstep	
	//W_App_CommonHandlers.CaptureAtLog
	
	click ImageLocation(text:"Record ID")+[-5,30]
	set the  SearchRectangle to []
	wait 2
	//
	
	//put "CLOSED COMPLETE" into State
	
	if ImageFound(text:"Details" ,ignoreSpaces:Yes, waitFor:120,searchRectangle:ScreenPart("LeftHalf"))		
		Put "TheExpectedRecordIdIsDisplayingWithState" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	//
	
	//EditRootCausesIdentified_category--need to implement	
	click Image:"edit_img", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")	
	click ImageLocation(text:"Category",searchrectangle:ScreenPart("TopHalf"))+[100,0]

	if ImageFound(text:"Unknown" ,ignoreSpaces:Yes, waitFor:120,searchRectangle:ScreenPart("Center"))		
		Put "Unknown text found in Category drop down" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "Unknown text not found in Category drop down" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end OpenRCI_Edit_Fields

to handle VerifyCauseClassificationValues

	//EditRootCausesIdentified_CauseClassification --- need to implement
	
	click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]

	(*Set the searchRectangle to [imagelocation(text:"Root Cause")+[-90,4],imagelocation(text:"Root Cause")+[840,400]]*)	
	if ImageFound(text:"Root Cause", waitFor:20) and if ImageFound(text:"Contributing Cause", waitFor:20) and if ImageFound(text:"Probable Cause", waitFor:20) and if ImageFound(text:"Inconclusive", waitFor:20)
		
		Put "All values displayed for Cause Classification field" into global Vstep		
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog	
		
	else
		
		//waitFor 50,image:"PendingCancellation"		
		Put "All values not displayed for Cause Classification field" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog	
		
	end if 	
	(*Set the SearchRectangle to []*)	
	Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")	
	
	wait 10
	
end VerifyCauseClassificationValues


to handle OpenFiveWhys_VerifyErrorAtleatOneWhy

	SearchRecord	
	Navigateto5Whys
	
	//Open5Whys_INANALYSIS --need to implement	
	Put "In Analysis" into State	
	Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
	click ImageLocation(text:"Show in tab")+[-200,0]
	Typetext State, return	
	wait 10
	
	//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""	
	if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""		
	(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step
log step*)		
		Put State&"RecordIsAvailable" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog		
		//click ImageLocation(text:"Record ID")+[0,38]		
		click ImageLocation(text:"Record ID")+[-5,30]
		set the  SearchRectangle to []
		wait 2		
		//		
		//put "CLOSED COMPLETE" into State		
		if ImageFound(text:State,ignoreSpaces:Yes, waitFor:120,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.6,0.3]])
			
			Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		else
			
			Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep			
			LogError global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		end if		
		//	
	else
		
		Put state&"RecordIsNotAvailable" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	//CompleteAnalysis_withoutFilling--need to implement	
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")	
	Click text:"Completed", waitFor:120,searchRectangle:ScreenPart("Center")	
	Click imageName:"Complete", waitFor:120	
	
	wait 15
	
	if ImageFound(text:"must have at least one Why record" ,waitFor:120,searchRectangle:ScreenPart("Center"))		
		Put "Error prompt displayed to create atleast one Why" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "Error prompt not displayed to create atleast one Why" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	Click text:"OK", waitFor:120,searchRectangle:ScreenPart("Center")
	
	wait 10	
	
end OpenFiveWhys_VerifyErrorAtleatOneWhy

to handle Complete5Whys

	//Create5Whys
	
	Click imageName:"CogWheelNew", waitFor:120,searchrectangle:ScreenPart("TopRightQuadrant")
	Click Text:"View 5 Whys Analysis", waitFor:120	
	wait 5
	WaitFor 120, text:"5 Whys Root Cause Analysis",searchrectangle:ScreenPart("TopLeftQuadrant")
	wait 1	
	Click Imagelocation(image:"AddWhy",SearchRectangle:ScreenPart("TopLeftQuadrant"))	
	TypeText "Testing"	
	wait 2	
	put "RootCause" into global RootCauseOfWhyVerdict	
	if global RootCauseOfWhyVerdict is "RootCause"
		
		//set the SearchRectangle to [bottomLeft of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[-30,0],RemoteScreenSize()]
		
		click text:"Root Cause",SearchRectangle:[RemoteScreenSize()*[0,0.3],RemoteScreenSize()*[0.15,0.4]]		
		(*Click text:"Root Cause", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")*)		
		typetext tabKey		
		typetext tabKey		
		typetext downArrow		
		typetext downArrow, return		
		typetext tabKey		
		typetext downArrow,return
		
		Click text:"Close", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")		
		Put "Root Cause of Why is added successfully " into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else if global RootCauseOfWhyVerdict is "Expected"		
		
		Click text:"Expected", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")		
		typetext tabKey		
		Typetext"Test"		
		Click text:"Close", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")		
		Put "Justification of Expecteded" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog	
		
	end if	
	
	//CompleteAnalysis	
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")	
	Click text:"Completed", waitFor:120,searchRectangle:ScreenPart("Center")	
	Click imageName:"Complete", waitFor:120	
	
	wait 15
	
	VerifyLifeCycleState_CLOSEDCOMPLETE	
	
end Complete5Whys

to handle Dev_RCI_ObjectAddedVerification

	SearchRecord	
	NavigateToRootCauseIdentified
	
	//VeriftyRCrecordAdded--need to implement
	
	if ImageFound(text:"Unknown", waitFor:120,SearchRectangle:ScreenPart("Center"))		
		Put "New Root Cause Created Successfully" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "Root Cause Not Created" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog		
	end if	
	
end Dev_RCI_ObjectAddedVerification

to handle VerifyRCIDetails

	//OpenRootCausesIdentified_Created5Whys-- need to implement
	
	Put "Unknown" into State	
	Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
	click ImageLocation(text:"Show in tab")+[-200,0]
	Typetext State, return	
	wait 20
	
	//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""	
	if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""		
	(*put ReadText(imageLocation(text:"Record ID")+[-5,30]) into step

log step*)		
		Put State&"RecordIsAvailable" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog		
		//click ImageLocation(text:"Record ID")+[0,38]		
		click ImageLocation(text:"Record ID")+[-5,30]
		set the  SearchRectangle to []
		wait 20				
		//put "CLOSED COMPLETE" into State		
		if ImageFound(text:"Details", waitFor:120,searchRectangle:ScreenPart("LeftHalf"))			
			Put "TheExpectedRecordIdIsDisplayingWithState"&State into global Vstep			
			Log global Vstep			
			W_App_CommonHandlers.CaptureAtLog
			
		else
			
			Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep			
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog			
		end if
		
		//
		
	else		
		Put state&"RecordIsNotAvailable" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	//VerifyRCFields --need to implement
	
	put ReadText(topRight of ImageRectangle(text:"Category"),ImageLocation(text:"Category")+[300,30]) into CategoryValue

	if CategoryValue is "Unknown" then		
		put "Value displayed as expected" into global Vstep		
		Log global Vstep		
		CaptureAtLog		
	else 
		
		put "Value not displayed as expected" into global Vstep		
		LogError global Vstep		
		CaptureAtLog		
		
	end if
	
	put ReadText(topRight of ImageRectangle(text:"Sub Category"),ImageLocation(text:"Sub Category")+[300,30]) into SubCategoryValue

	if SubCategoryValue contains "Unknown" then		
		put "Value displayed as expected" into global Vstep		
		Log global Vstep		
		CaptureAtLog
		
	else 		
		put "Value not displayed as expected" into global Vstep		
		LogError global Vstep		
		CaptureAtLog		
		
	end if	
	
end VerifyRCIDetails

to handle EditRCI_SubmitApproval_PendingQualityApproval

	//EditRC_fillCauseClassification_CounterMeasure ------------implement	
	click Image:"edit_img", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")		
	click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("LeftHalf"))+[100,0]
	wait 2	
	Typetext "Root Cause"	
	click ImageLocation(text:"Cause Classification",searchrectangle:ScreenPart("LeftHalf"))+[120,20]	
	click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("RightHalf"))+[100,0]
	wait 2	
	Typetext "1"	
	Typetext downArrow, return	
	Click text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
	wait 20
	SearchRecord
	Click Text:"Complete",searchRectangle:screenpart("TopRightQuadrant")	
	Click text:"Submit for approval", waitFor:120,searchRectangle:ScreenPart("Center")
	click imageName:"No",searchRectangle:ScreenPart("BottomHalf")
	Click text:"Complete", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep	
	Log global Vstep	
	W_App_CommonHandlers.CaptureAtLog	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL	
	
end EditRCI_SubmitApproval_PendingQualityApproval

to handle CreateDeviation_VerifyErrorMessage_Fields
	try
		SelectingQMSProcess
		wait 4
		Click text:"+ Create", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Set the SearchRectangle to [[0,150],[350,950]]
		WaitFor 120, text:"General Information"
		Put readtext(bottomLeft of ImageRectangle(text:"General Information")+[0,50],bottomLeft of ImageRectangle(text:"General Information")+[250,500]) into OtherMenuOptions
		Log OtherMenuOptions
		if OtherMenuOptions is empty
			Log"General Information section is the only section visible on the blank form for creating a new Deviation record"
			CaptureAtLog
		else
			Logerror "Other sections are displayed"
			CaptureAtLog
		end if
		set the SearchRectangle to []
		Click item 2 of EveryImageLocation(text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant"))
		wait 5
		waitFor 120,text:"This field is required"
		Log "Error message displayed without entered Mandatory field to create deviation"
		CaptureAtLog
		
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end CreateDeviation_VerifyErrorMessage_Fields

to handle CreateDeviation_VerifyFields
	try
		wait 4
		Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")
		
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Title"),TopRight of ImageRectangle(text:"Title")+[250,60] ]
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Date Due"),TopRight of ImageRectangle(text:"Date Due")+[250,60] ]
		//WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Global Business Unit(s)"),TopRight of ImageRectangle(text:"Global Business Unit(s)")+[250,60] ]
		WaitFor 120, text:"Global Business Unit(s)*",TextDifference:"1"
		
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Source of Incident"),TopRight of ImageRectangle(text:"Source of Incident")+[250,60] ]


		//WaitFor 20, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Sub-Source of Incident"),TopRight of ImageRectangle(text:"Sub-Source of Incident")+[250,60] ]
		waitfor 120,text:"Sub-Source of Incident",InvertImage:"Yes"
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Type of Incident"),TopRight of ImageRectangle(text:"Type of Incident")+[250,60] ]
		waitfor 120,text:"Detailed Description",InvertImage:"Yes"
		
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Affected location type"),TopRight of ImageRectangle(text:"Affected location type")+[250,60] ]
		//waitfor 20,text:"Business Function*",InvertImage:"Yes"
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Occurrence Date"),TopRight of ImageRectangle(text:"Occurrence Date")+[250,60] ]
		WaitFor 120, image:"YellowBox",Searchrectangle:[TopRight of ImageRectangle(text:"Estimated Severity"),TopRight of ImageRectangle(text:"Estimated Severity")+[250,60] ]

		//Product / Material / Brand Specific?
		(*WaitFor 120, image:"Yellowbox1",Searchrectangle:[TopRight of ImageRectangle(text:"Product / Material / Brand Specific?",TextDifference:"1"),TopRight of ImageRectangle(text:"Product / Material / Brand Specific?",TextDifference:"1")+[250,60] ]*)
		Log "All the Mandatory fields available in Create Deviation page"
		CaptureAtLog
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end CreateDeviation_VerifyFields

to handle CreateDeviation_VerifyDateDueErrorMessage 

	try
		Click imagelocation(text:"Title", waitFor:120,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext "01 Jan 2000"
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0] 

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:120,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Country"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
		(* Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationImpactedLocation
Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[240,50] 

//regulatory classification class required Regulatory Classification
Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationRegulatoryClassification
Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[240,28]*)
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global BrandSpecific
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27] 

		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")) 
		
		If imagefound(text:"Deviation due date cannot be in the"&newline&"past",searchRectangle:ScreenPart(Center))
			Log "Due date cannot be set in the past error message displayed"
			CaptureAtLog 
			
		else
			Logerror "Due date cannot be set in the past error message not displayed"
			CaptureAtLog
		end if 
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[70,3]
		wait 1
		TypeText Controlkey,a
		TypeText Backspace
		wait 1
		Typetext global DeviationDateDue
		wait 1
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		wait 1
		TypeText Controlkey,a
		TypeText Backspace
		wait 1
		//Typetext global DeviationOccurrenceDueDate
		Typetext "01 Jan 2023"
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Log "Future date entered in Occurrence Date "
		CaptureAtLog
		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 3
		If imagefound(text:"Occurrence Date cannot be set in the"&newline&"Future",searchRectangle:ScreenPart(Center))
			Log "Due date cannot be set in the past error message displayed"
			CaptureAtLog 
			
		else
			Logerror "Occurrence Date cannot be set in the Future error message not displayed"
			CaptureAtLog
		end if
		
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
end CreateDeviation_VerifyDateDueErrorMessage


to handle ModifyDateDue_OccurenceDate

	try 
		
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		wait 1
		Typetext Controlkey,a,Backspace
		wait 1 
		
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		Click item 2 of EveryImageLocation(text:"Save", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 3
		waitFor 120,text:"draft",SearchRectangle:ScreenPart("TopLeftQuadrant")
		Log"Deviation Created and the state is in Draft"
		CaptureAtLog
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	end try
	
end ModifyDateDue_OccurenceDate

to handle AssignUser_Teams_PFA
	AssignUser_Teams global PFA,"Function Post-Approver" 
end AssignUser_Teams_PFA

to handle AssignUser_Teams_CC
	AssignUser_Teams global CCUserID,"Change Coordinator" 
end AssignUser_Teams_CC

to handle AssignUser_Teams_FA
	AssignUser_Teams global FA,"Function Approver" 
end AssignUser_Teams_FA

to handle AssignUser_Teams_QA
	AssignUser_Teams global QA,"Quality Approver" 
end AssignUser_Teams_QA

to handle AssignUser_Teams_ActionOwner
	AssignUser_Teams global ActionOwner,"Action Owner" 
end AssignUser_Teams_ActionOwner

to handle AssignUser_Teams_DeviationCoordinator
	AssignUser_Teams global DCUserID,"Deviation Coordinator" 
end AssignUser_Teams_DeviationCoordinator

to handle AssignUser_Teams_FA_second
	AssignUser_Teams global FA_second,"Function Approver" 
end AssignUser_Teams_FA_second

to handle AssignUser_Teams_PFA_second
	AssignUser_Teams global PFA_second,"Function Post-Approver" 
end AssignUser_Teams_PFA_second

to handle AssignUser_Teams_QA_CC

	AssignUser_Teams global CCUserID,"Quality Approver"
	
end AssignUser_Teams_QA_CC

to handle AssignUser_Teams_FA_CC

	AssignUser_Teams global CCUserID,"Function Approver"
	
end AssignUser_Teams_FA_CC

to handle AssignUser_Teams_FA_third
	AssignUser_Teams "Health CC 1 Function Approver","Function Approver" 
end AssignUser_Teams_FA_third

to handle UserRoleSetup_QA_CC_VerifyErrorMessage_NotToAddSameUser

	AssignUser_Teams_QA_CC
	
	LogOut
	LoginToApplication_CC
	SearchRecord
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	//VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	//VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
	PrepareImpactAssessmentActionPlan_Hygiene_NoFA
	VerifyErrorMessage_NotToAddSameUser_QA
	
end UserRoleSetup_QA_CC_VerifyErrorMessage_NotToAddSameUser

(* to handle UserRoleSetup_FA_CC_VerifyErrorMessage_NotToAddSameUser

	AssignUser_Teams_FA_CC
	
	VerifyErrorMessage_NotToAddSameUser
	
end UserRoleSetup_FA_CC_VerifyErrorMessage_NotToAddSameUser
*)
to handle PrepareImpactAssessmentActionPlan_CCPL
	try
	(*Put "ChangeNotRequired" into global PIAverdict
		Put "Raised In Error" into global ReasonForClosing*)
		ScrollWheelUp 50
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
		Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			Typetext global CCPLGBU
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("Center")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("Center")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("Center"))+[300,100]]*)
			
			wait 3
		if global PIAverdict is "ChangeNotRequired"
			Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("BottomHalf"))+[120,0]
			
			typetext"testing"
			wait 3
			//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
			Typetext tabKey
			//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
			wait 2
			Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			
			
			Typetext global ReasonForClosing
			Typetext downArrow, return
			//click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
			Put "Change Coordinator Select Verdict as CloseChangeControl/ChangeNotRequired" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
			
			
		else if global PIAverdict is "SubmitForApproval"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			Typetext tabKey
			Typetext"testing"
			(*Click imageName:"ImpactAssessmentConclusionSummary", waitFor:50
			Typetext "test"*)
			Typetext tabKey
			Typetext "test"
			Typetext tabKey
			Typetext "test"
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText global FormalRiskAssessmentRequired
			TypeText downArrow, return
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText "Low"
			TypeText downArrow, return
			put "Change Coordinator Select Verdict as Submit for Approval" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	
end PrepareImpactAssessmentActionPlan_CCPL
to handle AssignUser_Teams_Assessor

	AssignUser_Teams global AssessorID,"Assessor"
	
end AssignUser_Teams_Assessor

to handle AssignUser_Teams_MAActionOwner

	AssignUser_Teams global MtActionOwnerUsername,"Action Owner"
	
end AssignUser_Teams_MAActionOwner

to handle AssignUser_Teams_INVActionOwner

	AssignUser_Teams global InvstigationActionOwnerUsername,"Action Owner"
	
end AssignUser_Teams_INVActionOwner

to handle AssignUser_Teams UserFirstName,Role
	
	try
		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 5
		click text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[90,10]
		wait 5
		Typetext controlkey,a
		Typetext backspace
		wait 5
		Typetext UserFirstName
		wait 5
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopHalf")
		//Click text:"Cancel", waitFor:10,searchRectangle:ScreenPart("Toprightquadrant")+[40,0]
		wait 5
		//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		put Role&" Assigned successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 15
		ScrollWheelUp 50
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end AssignUser_Teams

to handle NavigateToCapaProgram
	NavigateToSectionFromLeftPane "CAPA Program"
end NavigateToCapaProgram

to handle OpenRecord_CP_PendingPostApproval

	SearchRecords_With_State "Pending CAPA Post-Approval"
	
end OpenRecord_CP_PendingPostApproval

to handle OpenRecord_CP_InExecution

	SearchRecords_With_State "In Execution"
	
end OpenRecord_CP_InExecution

to handle OpenRootCausesIdentified

	Set the SearchRectangle to [RemoteScreenSize()*[0,0.24],RemoteScreenSize()*[1,0.6]]
	click ImageLocation(text:"Show in tab")+[-200,0]
	
	//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""	
	//Put "RecordIsAvailable" into global Vstep	
	//Log global Vstep	
	//W_App_CommonHandlers.CaptureAtLog
	
	click ImageLocation(text:"Record ID")+[-5,30]
	set the  SearchRectangle to []
	wait 2
	//
	
	//put "CLOSED COMPLETE" into State
	
	if ImageFound(text:"Details" ,ignoreSpaces:Yes, waitFor:120,searchRectangle:ScreenPart("LeftHalf"))		
		Put "TheExpectedRecordIdIsDisplayingWithState" into global Vstep		
		Log global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	else
		
		Put "TheExpectedRecordIdIsNotDisplaying" into global Vstep		
		LogError global Vstep		
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
end OpenRootCausesIdentified

to handle EditCountermeasureLevel

	click Image:"edit_img", waitFor:120,searchRectangle:ScreenPart("TopRightQuadrant")	
	click ImageLocation(text:"Countermeasure Level",searchrectangle:ScreenPart("TopHalf"))+[100,0]
	
	Typetext "1"
	wait 2
	TypeText downArrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	
	Put "Countermeasure Level updted" into global Vstep		
	Log global Vstep		
	W_App_CommonHandlers.CaptureAtLog
	
	
end EditCountermeasureLevel

to handle VerifyFunctionApprover_Title

	NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	
	if ImageFound(text:"Nutrition CC 1 UAT Function", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"Nutrition CC 1 UAT Function",SearchRectangle:ScreenPart("LeftHalf"))
	else if ImageFound(text:"Nutrition CC 1 Function", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click ImageLocation(text:"Nutrition CC 1 Function",SearchRectangle:ScreenPart("LeftHalf"))
	end if
	waitfor 60,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for FA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for FA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"R & D", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	Put "Function name displayed for FA" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
else
	Put "Function name not displayed for FA" into global Vstep
	LogError global Vstep
	W_App_CommonHandlers.CaptureAtLog
end if
if ImageFound(text:"Testing title", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	SearchRecord
	
end VerifyFunctionApprover_Title

to handle VerifyCC_Title

	NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	
	if ImageFound(text:"CC 1 UAT Change", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click text:"CC 1 UAT Change"
	else if ImageFound(text:"CC 1 Change", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
	click text:"CC 1 Change"
	end if
	waitfor 60,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"Testing title", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"GB, Hull", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Location displayed for Change Coordinator" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Location not displayed for Change Coordinator" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	SearchRecord
	
end VerifyCC_Title

to handle AddProduct_Location

	SearchRecord
	(*	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord*)
	wait 10
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	wait 15
	Add_ImpactedProduct
	(*NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput*)
	
	
end AddProduct_Location

to handle VerifyQA_CC_Title

	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	
	if ImageFound(text:"Nutrition CC 1 UAT Quality", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
	click text:"Nutrition CC 1 UAT Quality"
	else if ImageFound(text:"Nutrition CC 1 Quality", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
	click text:"Nutrition CC 1 Quality"
	end if
	
	waitfor 30,text:"QualityOne_Test",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for QA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for QA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"Testing Title", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for QA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for QA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"GB, Hull", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Location displayed for QA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Location not displayed for QA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	SearchRecord
	
end VerifyQA_CC_Title

to handle VerifyAssign_CC_Unkonwn

		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:"Change Coordinator",searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,3]
	wait 5
		Typetext controlkey,a
	Typetext backspace
	wait 5
	Typetext "Nutrition CC 1 UAT Function Approver"
		
	if imagefound(text:"No Matches found") then
		Log "Application role selection is invalid for the user error message displayed"
		CaptureAtLog
		Click text:"Cancel",waitfor:30,SearchRectangle:ScreenPart("topRightQuadrant")
	else
		logError "User who is not part of Coordinators Group is added as Coordinator"
		CaptureAtLog
	end if
end VerifyAssign_CC_Unkonwn



to handle Assign_NonQA_AsQualityApprover
wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Manage Team"
		wait 5
		(*put "Function Approver" into Role*)
		Click imagelocation(text:"Quality Approver",searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,3]
		wait 5
		Typetext controlkey,a
		Typetext backspace
		wait 5
		Typetext "Nutrition CC 1 UAT Function Approver"
		wait 5
	
	
	if imagefound(text:"No Matches found") then
		Log "Application role selection is invalid for the user error message displayed"
		CaptureAtLog
		Click text:"Cancel",waitfor:30,SearchRectangle:ScreenPart("topRightQuadrant")
	else
		logError "User who is not part of Quality Approver is added as QA"
		CaptureAtLog
	end if
end Assign_NonQA_AsQualityApprover

to handle Assign_3FunctionApprovers

	(*AssignUser_Teams_FA*)
	(*AssignUser_Teams_FA_Second*)
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Nutrition CC 2 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopHalf")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,50]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Health CC 1 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopHalf")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50
	(*AssignUser_Teams_FA_Third*)
	
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,50]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Health CC 2 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopHalf")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
end Assign_3FunctionApprovers

to handle CC_FunctionApprover_Title_status

	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Sharing Settings"
	
	Wait 10
	
	
	click text:"Nutrition CC 2 UAT Function"
	
	waitfor 20,text:"QualityOne_Test@rb.com",SearchRectangle:ScreenPart("LeftHalf")
	
	if ImageFound(text:"QualityOne_Test@rb.com", waitFor:50,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Details displayed for FA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Details not displayed for FA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	
	if ImageFound(text:"Testing Title", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Title displayed for QA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Title not displayed for QA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	if ImageFound(text:"GB, Hull", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
		Put "Location displayed for QA" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	else
		Put "Location not displayed for QA" into global Vstep
		LogError global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	wait 5
	
	
	
end CC_FunctionApprover_Title_status

to handle VerifyErrorPrompt_WhileAddingCC_AsPFA_andFA
	W_App_CommonHandlers.AssignUser_Teams "Nutrition CC 1 Change Coordinator","Function Approver" 
	
	W_App_CommonHandlers.AssignUser_Teams "Nutrition CC 1 Change Coordinator","Function Post-Approver"
	
	LogOut
	LoginToApplication_CC
	SearchRecord	
	
	PrepareImpactAssessmentActionPlan
	VerifyErrorPromptToAssignFunctionApprover
	
end VerifyErrorPrompt_WhileAddingCC_AsPFA_andFA

to handle Assign_PFA_and_FA_OtherThan_CC

	try
		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 5
		put "Function Approver" into Role
		Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
		wait 5
		//Typetext controlkey,a
		Typetext backspace
		Typetext backspace
		wait 5
		Typetext "Nutrition CC 1 Function Approver"
		wait 5
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopHalf")
		wait 5
		//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		put Role&" Assigned successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 5
		ScrollWheelUp 50
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	try
		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 5
		WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		wait 5
		put "Function Post-Approver" into Role
		Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
		wait 5
		//Typetext controlkey,a
		Typetext backspace
		Typetext backspace
		wait 5
		Typetext "Nutrition CC 2 Function Approver"
		wait 5
		typetext downarrow,return
		click text:"Save",Searchrectangle:ScreenPart("TopHalf")
		wait 5
		//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		put Role&" Assigned successfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		wait 1
		ScrollWheelUp 50
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
end Assign_PFA_and_FA_OtherThan_CC

to handle Navigate_and_CreateAffectedLocationInformation_Site

	W_App_CommonHandlers.NavigateToAffectedLocationInformation
	
	try
		wait 3
		Click text:"Add", waitFor:120,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]


		WaitFor 120, text:"Search"
		set the searchrectangle to [bottomLeft of Imagerectangle(text:"Search"), ImageLocation(text:"Search")+[755,560]]

		WaitFor 120, text:"Use Search bar",searchrectangle:ScreenPart("TopHalf")
		wait 2
		//put "Health" into QoneFirstName
		Typetext "Derby MFG"
		
		typetext return
		wait 3
		Click ImageLocation(text:"Site Name",searchrectangle:ScreenPart("Center"))+[0,32]
		click text:"Ok",waitfor:120,searchrectangle:ScreenPart("BottomRightQuadrant")
		
		set the SearchRectangle to []
		//
		
		Put "AffectedLocationAddedSuccessfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		ScrollWheelUp 30
		wait 3
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end Navigate_and_CreateAffectedLocationInformation_Site


to handle VerifySiteAreaSection_CreateSiteObject
	W_App_CommonHandlers.NavigateToSiteAreaSubArea
	Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Site Area" 
	Click ImageLocation(text:"Site Area",SearchRectangle:ScreenPart("Center"))+[200,0]
	TypeText ControlKey,a
	TypeText backspace
	
	TypeText "Derby, Aerosol Filling"
	TypeText downArrow, return
	TypeText tabKey
	TypeText ControlKey,a
	TypeText backspace
	TypeText "A1"
	TypeText downArrow, return
	
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
	wait 2
	CaptureAtLog
	ScrollWheelUp 50
	wait 5
	W_App_CommonHandlers.NavigateToSiteAreaSubArea
	Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
	WaitFor 120, text:"Site Area"
	Click ImageLocation(text:"Site Area",SearchRectangle:ScreenPart("Center"))+[200,0]
	TypeText ControlKey,a
	TypeText backspace
	TypeText "Derby, Aerosol Filling"
	TypeText downArrow, return
	TypeText tabKey
	TypeText ControlKey,a
	TypeText backspace
	TypeText "A4"
	TypeText downArrow, return
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
	wait 5
	Put "Multiple Sub Areas added under one Area" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog	
	
	Set the SearchRectangle to []
	ScrollWheelUp 50
	
end VerifySiteAreaSection_CreateSiteObject

//CC PL
//ChangeControlPLUATFetchingData
to handle ChangeControlPLUATFetchingData

	set myFile to ResourcePath("CCPLTestData_UAT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		
		if first item of MyLine is "Yes" 
			(*set first item of MyLine to "Done"*)
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			put third item of MyLine into global SUTName
			
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global CCUserID
			put item 9 of MyLine into global CCusername
			put item 10 of MyLine into global CCpassword
			put item 11 of MyLine into global RecordType
			put item 12 of MyLine into global AIShortDescription
			put item 13 of MyLine into global AIDescription
			put item 14 of MyLine into global AIDateDue
			replace every occurrence of "_" in global AIDateDue with " "
			
			put item 15 of MyLine into global IAShortDescription
			put item 16 of MyLine into global IADescription
			put item 17 of MyLine into global IADateDue
			replace every occurrence of "_" in global IADateDue with " "
			//
			put item 18 of MyLine into global AssessorID
			put item 19 of MyLine into global AssessorUsername
			put item 20 of MyLine into global AssessorPassword
			put item 21 of MyLine into global AIAssessmentVerdict
			put item 22 of MyLine into global ReasonForCancel
			put item 23 of MyLine into global PIAverdict
			put item 24 of MyLine into global ReasonForClosing
			put item 25 of MyLine into global conclusionSummary
			put item 26 of MyLine into global ImplementationSuccessCriteria
			put item 27 of MyLine into global OverAllRisk
			put item 28 of MyLine into global FAusername
			put item 29 of MyLine into global FApassword
			put item 30 of MyLine into global FAverdict
			put item 31 of MyLine into global QAusername
			put item 32 of MyLine into global QApassword
			put item 33 of MyLine into global QAverdict
			put item 34 of MyLine into global AOusername
			put item 35 of MyLine into global AOpassword
			put item 36 of MyLine into global IACverdict
			put item 37 of MyLine into global CCReviewVerdict
			put item 38 of MyLine into global DMEffectiveness
			put item 39 of MyLine into global PFArequired
			put item 40 of MyLine into global FAFinalApproveVerdict
			put item 41 of MyLine into global FAFINALdemonstrateEffectiveness
			put item 42 of MyLine into global QPAverdict
			put item 43 of MyLine into global QPAdemonstrateEffectiveness
			put item 44 of MyLine into global ActionOwner
			put item 45 of MyLine into global FA
			put item 46 of MyLine into global QA
			put item 47 of MyLine into global PFA
			put item 48 of MyLine into global PFAUsername
			put item 49 of MyLine into global PFAPassword
			put item 50 of MyLine into global FunctionApprovalofCCClosureVerdict
			put item 51 of MyLine into global QualityApprovalofCCClosureVerdict
			put item 52 of MyLine into global ImplementtheChangeVerdict
			put item 53 of MyLine into global FormalRiskAssessmentRequired
			put item 54 of MyLine into global CC_AssignToChangeCordinator_Verdict
			put item 55 of MyLine into global SubmitActionForPreApproval_Verdict
			put item 56 of MyLine into global FA_Require_Not
			put item 57 of MyLine into global FunctionApprovalofAction_Verdict
			put item 58 of MyLine into global QualityApprovalofAction_verdict
			
			put item 59 of MyLine into global GivenRecordId
			set the suitevariables.RecordId to global GivenRecordId
			
			put item 60 of MyLine into global PostFunctionApproverFirstNameofOther
			put item 61 of MyLine into global PostQualityApproverFirstNameofOther
			put item 62 of MyLine into global FA_second
			put item 63 of MyLine into global PFA_second
			put item 64 of MyLine into global ChildRecordID1
			put item 65 of MyLine into global ChildRecordID2
			put item 66 of MyLine into global ChildRecordID3
			put item 67 of MyLine into global CCPLGBU
			Exit repeat
		end if
	end repeat
	
end ChangeControlPLUATFetchingData


//E2EQMS-TS024-FP-PL CC
to handle LaunchAndLoginToApplication_CC

	PreExecution
	ChangeControlUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_CC

end LaunchAndLoginToApplication_CC

to handle SearchRecord_ChangeCoordinatorReviewState_VerifyGBUHealth_FA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_CHANGECOORDINATORREVIEW

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control GBU is"&global GBU  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep

end SearchRecord_ChangeCoordinatorReviewState_VerifyGBUHealth_FA_CC_QA_Originator

to handle ChangeCoordinator_ReturnCC_To_IAAP

SearchRecord
ReviewTheImplementationOfTheChange
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

end ChangeCoordinator_ReturnCC_To_IAAP




//E2EQMS-TS030-FP-PL CC
to handle SearchRecord_PendingQualityPostApproval_VerifyGBUHealth_FA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_PendingQualityPostApproval_VerifyGBUHealth_FA_CC_QA_Originator

to handle RegressFrom_PendingQualityPostApproval_To_ChangeCoordinatorReview

SearchRecord
QualityPostApprovalOfChangeControl
VerifyLifeCycleState_CHANGECOORDINATORREVIEW

end RegressFrom_PendingQualityPostApproval_To_ChangeCoordinatorReview

to handle RegressFrom_PendingQualityPostApproval_To_ChangeCoordinatorReview_workflowTimeline
SearchRecord
CancelTask_FromCogWheel_WorkFlowTimeLine
VerifyLifeCycleState_CHANGECOORDINATORREVIEW
end RegressFrom_PendingQualityPostApproval_To_ChangeCoordinatorReview_workflowTimeline

//E2EQMS-TS029-FP-PL CC
to handle SearchRecord_PendingFunctionPostApprovalState_VerifyGBUHealth_FA_CC_QA_Originator_FPA

SearchRecord
VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Post Approver is"&global PFA  into global Vstep
	Log global Vstep


end SearchRecord_PendingFunctionPostApprovalState_VerifyGBUHealth_FA_CC_QA_Originator_FPA

to handle Progress_From_PendingFunctionPostApproval_To_PendingQualityPostApproval

SearchRecord
FAFinalApproval
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL

end Progress_From_PendingFunctionPostApproval_To_PendingQualityPostApproval




//E2EQMS-TS010-FP-PL CC
to handle SearchRecord_IAAP_Verify_CC_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_Verify_CC_Originator

to handle SearchRecord_IAAP_Create_2AI_IA_ProgressOneAI_ToPendingAssessmentState

SearchRecord
CreateImplementationAction
OpenRecord_IA_Draft
SearchRecord
CreateAssessmentItem
OpenRecord_AI_Draft
VerifyLifeCycleState_Draft
SearchRecord
CreateAssessmentItem
OpenRecord_AI_Draft
//VerifyLifeCycleState_Draft
AssignUser_Teams_Assessor
VerifyLifeCycleState_PENDINGASSESSMENT

end SearchRecord_IAAP_Create_2AI_IA_ProgressOneAI_ToPendingAssessmentState

to handle ProgressCC_From_IAAP_To_CloseChangeNotProgressed_After30mnts_VerifyAI_IA_ClosedCancelled

SearchRecord
PrepareImpactAssessmentActionPlan_CCPL
VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED

NavigateToSectionFromLeftPane "Assessment Items"

Draft_InProgress_State_NotAvailable
navigateToImplementationActionItemSection
Draft_InProgress_State_NotAvailable

end ProgressCC_From_IAAP_To_CloseChangeNotProgressed_After30mnts_VerifyAI_IA_ClosedCancelled




//E2EQMS-TS011-FP-PL CC
to handle SearchRecord_IAAP_Verify_CC_Originator_QA_Hygiene

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_Verify_CC_Originator_QA_Hygiene

to handle SearchRecord_IAAP_Create_AI_IA_ProgressAI_ToClosureState

SearchRecord_CreateAI_and_IA

end SearchRecord_IAAP_Create_AI_IA_ProgressAI_ToClosureState

to handle AddProduct_Location_ProgressToPendingQualityApproval_FA_No

SearchRecord
NavigateToAffectedLocationInformation
CreateAffectedLocationInformation
Add_ImpactedProduct
NavigateToImpactAssessmentOutputSection
EditImpactAssessmentOutput
PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end AddProduct_Location_ProgressToPendingQualityApproval_FA_No




//E2EQMS-TS012-FP-PL CC
to handle SearchRecord_IAAP_Verify_CC_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control DateDue is"&global CCDateDue  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_Verify_CC_Originator

to handle SearchRecord_IAAP_Create_IA_VerifyErrorDateDueLaterThanParentCC

//CreateImplementationAction_VerifyDateDue

CreateImplementationAction_VerifyDateDue_CCPL
end SearchRecord_IAAP_Create_IA_VerifyErrorDateDueLaterThanParentCC

to handle EnterDateDueLessThanParentCC_CreateIA

CreateImplementationAction

end EnterDateDueLessThanParentCC_CreateIA



//E2EQMS-TS027-FP-PL CC   //need to run job
to handle OpenRecord_ReOpenIA

SearchRecord_FunctionPostApproval_ReopenIA

end OpenRecord_ReOpenIA

to handle WaitMnts_VerifyCC_AutomaticallyMoveToInimplementation

SearchRecord_InImplementation

end WaitMnts_VerifyCC_AutomaticallyMoveToInimplementation




//E2EQMS-TS028-FP-PL CC
to handle OpenRecord_ReassignToOtherFPA

SearchRecord_FunctionPostApproval_ReassignPFA

end OpenRecord_ReassignToOtherFPA

to handle VerifyCC_in_PendingFunctionPostApprovalState

VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL

end VerifyCC_in_PendingFunctionPostApprovalState




//E2EQMS-TS031-FP-PL CC
to handle OpenRecord_ProgressToChangeCoordinatorReviewState_VerifyErrorAsCommentFieldNotFilled

QualityPostApproval_VerifyErrorToFillComments

end OpenRecord_ProgressToChangeCoordinatorReviewState_VerifyErrorAsCommentFieldNotFilled

to handle FillTheComment_ProgressToChangeCoordinatorReviewState

QualityPostApprovalOfChangeControl_ChangeCoordinatorReview

end FillTheComment_ProgressToChangeCoordinatorReviewState




//E2EQMS-TS032-FP-PL CC
to handle OpenRecord_ReOpenIA_QA 

SearchRecord_QualityPostApproval_ReopenIA

end OpenRecord_ReOpenIA_QA 

to handle WaitMnts_VerifyCC_AutomaticallyMoveToInimplementation

SearchRecord_InImplementation

end WaitMnts_VerifyCC_AutomaticallyMoveToInimplementation




//E2EQMS-TS019-FP-PL CC
to handle SearchRecord_InImplementation_VerifyGBUHealth_FA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_INIMPLEMENTATION

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_InImplementation_VerifyGBUHealth_FA_CC_QA_Originator

to handle LoginToCC_VerifyError_ForClosureApproval_FAno_withoutJustification

LogOut
LoginToApplication_CC
SearchRecord
ImplementTheChange
VerifyErrorMessage_ToFillReasonAndJustification

end LoginToCC_VerifyError_ForClosureApproval_FAno_withoutJustification

to handle FillJustificationReason_To_PendingQualityClosureApproval

ImplementTheChange_PendingQualityClosureApproval

end FillJustificationReason_To_PendingQualityClosureApproval

to handle OpenCC_PQCA_To_ChangeNotImplemented

ProgressTo_ChangeNotImplemented

end OpenCC_PQCA_To_ChangeNotImplemented




//E2EQMS-TS007-FP-PL CC
to handle SearchRecord_IAAP_AssignFA_Create_AI_IA_ProgressAI_ToClosureState

SearchRecord_CreateAI_and_IA_AssignFA

end SearchRecord_IAAP_AssignFA_Create_AI_IA_ProgressAI_ToClosureState

to handle AddProduct_Location_FormalRiskAssessment_NoJustificationRequired_FillJustification

AddProduct_Location_Information

end AddProduct_Location_FormalRiskAssessment_NoJustificationRequired_FillJustification

to handle VerifyErrorForMandatoryFields_WhileCCForApproval

VerifyErrorPromptToFillMandatoryFileds_SubmitForApproval_CCPL

end VerifyErrorForMandatoryFields_WhileCCForApproval

to handle EnterMandatoryFields_ProgressToPendingFunctionApprovalState

//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
PrepareImpactAssessmentActionPlan_CCPL_PendingFunctionApproval
end EnterMandatoryFields_ProgressToPendingFunctionApprovalState




//E2EQMS-TS006-FP-PL CC
to handle SearchRecord_IAAP_VerifyGBUHealth_CC_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHealth_CC_Originator

to handle OpenCC_CreateAI_to_ClosedComplete

SearchRecord_CreateAI_ClosedComplete

end OpenCC_CreateAI_to_ClosedComplete

to handle VerifyError_AtleastOneIA_WhileSendForApproval
LoginToApplication_CC
SearchRecord
NavigateToAffectedLocationInformation
CreateAffectedLocationInformation
//Add_ImpactedProduct
NavigateToImpactAssessmentOutputSection
EditImpactAssessmentOutput
PrepareImpactAssessmentActionPlan_CCPL
VerifyErrorPromptForNotRaising_IA

end VerifyError_AtleastOneIA_WhileSendForApproval

to handle CreateIA_VerifyIA_Draft

SearchRecord_CreateIA

end CreateIA_VerifyIA_Draft

to handle OpenCC_AssignFA

SearchRecord_AssignFA
AssignUser_Teams_QA

end OpenCC_AssignFA

to handle SubmitCC_To_PendingApprovalStage

//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
SearchRecord
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
end SubmitCC_To_PendingApprovalStage




//E2EQMS-TS009-FP-PL CC
to handle VerifyError_WithoutJustificationReason_CloseCCFromIAAP

PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed

end VerifyError_WithoutJustificationReason_CloseCCFromIAAP

to handle FillJustificationReason_To_ClosedChangeNotProgressed_FromIAAP

PrepareImpactAssessmentActionPlan_CLOSEDCHANGENOTPROGRESSED

end FillJustificationReason_To_ClosedChangeNotProgressed_FromIAAP

to handle SearchRecord_CC_Draft_Originator

	Put "Change Control Record ID is "& global ChildRecordID1  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is "& global Originator_Username  into global Vstep
	Log global Vstep
	
	//Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	//Log global Vstep
	
	OpenDependentRecord1

end SearchRecord_CC_Draft_Originator

to handle CancelCC_FromDraft_To_ChangeNotProgressed

//AssignToChangeCordinator_Cancel
AssignToChangeCordinator_Cancel_CCPL
end CancelCC_FromDraft_To_ChangeNotProgressed
to handle AssignToChangeCordinator_Cancel_CCPL
try

Click imageName:"CancelImpactAssessment", waitFor:120,searchrectangle:Screenpart("TopRightQuadrant")
wait 5
Click Text:"Cancel Change Control", waitFor:120,searchrectangle:Screenpart("TopRightQuadrant")
//click imagelocation(text:"Cancel",waitfor:60,searchrectangle:ScreenPart("Center"))+[40,0]
Click imageName:"StartButton", waitFor:120,searchrectangle:Screenpart("Center")
wait 5

Put"Complaint Coordinator Cancelled Complaint Action" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog


Catch theException
Logerror theException
W_App_CommonHandlers.CaptureAtLog

End try



VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED



end AssignToChangeCordinator_Cancel_CCPL
to handle LogOut_Originator_Second

LogOut

end LogOut_Originator_Second




//E2EQMS-TS014-FP-PL CC
to handle SearchRecord_IAAP_VerifyGBUHealth_FA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHealth_FA_CC_QA_Originator

to handle OpenCC_FromIAAP_To_PendingFunctionApproval

ProgressFrom_IAandAP_ToPendingFunctionApproval

end OpenCC_FromIAAP_To_PendingFunctionApproval

to handle OpenCC_FromPendingFunctionApproval_To_PendingQualityApproval

ProgressTo_PendingQualityApproval

end OpenCC_FromPendingFunctionApproval_To_PendingQualityApproval

to handle RejectRecord_FromPQA_To_IAAP

RegressFromQualityApproval_ToIAandAP

end RejectRecord_FromPQA_To_IAAP




//E2EQMS-TS015-FP-PL CC
to handle SearchRecord_IAAP_VerifyGBUHealth_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHealth_CC_QA_Originator

to handle OpenCC_ProgressTo_PendingQualityApproval_FAno

//ProgressFrom_IAandAP_ToPendingQualityApproval
ProgressFrom_IAandAP_ToPendingQualityApproval_CCPL

end OpenCC_ProgressTo_PendingQualityApproval_FAno

to handle ProgressFrom_IAandAP_ToPendingQualityApproval_CCPL

SearchRecord_CreateAI_and_IA
ProgressTo_PendingQualityApproval_Hygiene_CCPL

end ProgressFrom_IAandAP_ToPendingQualityApproval_CCPL

to handle ProgressTo_PendingQualityApproval_Hygiene_CCPL

SearchRecord
NavigateToAffectedLocationInformation
CreateAffectedLocationInformation
//Add_ImpactedProduct
NavigateToImpactAssessmentOutputSection
EditImpactAssessmentOutput
PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end ProgressTo_PendingQualityApproval_Hygiene_CCPL
to handle PrepareImpactAssessmentActionPlan_CCPL_Progress_Prepopulate



try
(*Put "ChangeNotRequired" into global PIAverdict
Put "Raised In Error" into global ReasonForClosing*)
ScrollWheelUp 50
click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
Typetext controlKey,a
Typetext backspace
Typetext backspace
wait 2
Typetext global CCPLGBU
Typetext downArrow, return
click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("Center")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("Center")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("Center"))+[300,100]]*)

wait 3
if global PIAverdict is "ChangeNotRequired"
Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("BottomHalf"))+[120,0]

typetext"testing"
wait 3
//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
Typetext tabKey
//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
wait 2
Typetext controlKey,a
Typetext backspace
Typetext backspace
wait 2


Typetext global ReasonForClosing
Typetext downArrow, return
//click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)

wait 3
Put "Change Coordinator Select Verdict as CloseChangeControl/ChangeNotRequired" into global Vstep
Log global Vstep

CaptureAtLog
Click imageName:"complete", waitFor:120
wait 10



else if global PIAverdict is "SubmitForApproval"
click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
Typetext tabKey
Typetext"testing"
(*Click imageName:"ImpactAssessmentConclusionSummary", waitFor:50
Typetext "test"*)
Typetext tabKey
Typetext "test"
Typetext tabKey
Typetext "test"
TypeText tabKey
TypeText ControlKey, a
Typetext Backspace
//TypeText global FormalRiskAssessmentRequired
TypeText downArrow, return
TypeText tabKey
TypeText ControlKey, a
Typetext Backspace
TypeText "Low"
TypeText downArrow, return
put "Change Coordinator Select Verdict as Submit for Approval" into global Vstep
Log global Vstep
CaptureAtLog
Click imageName:"complete", waitFor:120
wait 10

end if

Catch theException
Logerror theException
CaptureAtLog

End try

end PrepareImpactAssessmentActionPlan_CCPL_Progress_Prepopulate

to handle OpenCC_RejectRecordWithFA_VerifyError_AssignFA

RegressTo_PendingFunctionApproval_VerifyErrorPrompt

end OpenCC_RejectRecordWithFA_VerifyError_AssignFA

to handle AssignFA_WhenCC_in_PendingQualityApproval

AssignUser_Teams_FA

end AssignFA_WhenCC_in_PendingQualityApproval

to handle VerifyDetails_Of_FA    //need to imp



end VerifyDetails_Of_FA

to handle RejectRecord_IncludeFA_To_PendingFunctionApproval

RegressTo_PendingFunctionApproval

end RejectRecord_IncludeFA_To_PendingFunctionApproval




//E2EQMS-TS026-FP-PL CC
to handle CompleteReview_ChooseFPA_VerifyError_AssignFPA

ReviewTheImplementationOfTheChange_VerifyErrorToAssignPFA

end CompleteReview_ChooseFPA_VerifyError_AssignFPA

to handle Assign_FPA_WhenCC_In_CCReview

AssignUser_Teams_PFA

end Assign_FPA_WhenCC_In_CCReview

to handle CompleteReview_ChooseFPA_To_PFPA

ReviewTheImplementationOfTheChange_PendingFunctionPostApproval

end CompleteReview_ChooseFPA_To_PFPA

to handle RejectRecord_VerifyError_For_CommentsFieldMandatory

FunctionPostApproval_VerifyErrorToFillComments

end RejectRecord_VerifyError_For_CommentsFieldMandatory

to handle RejectRecord_FillComments_To_ChangeCoordinatorReview

FAFinalApproval_ChangeCoordinatorReview

end RejectRecord_FillComments_To_ChangeCoordinatorReview




//E2EQMS-TS033-FP-PL-CC
to handle OpenCC_ReAssign_To_OtherQA

SearchRecord_QualityPostApproval_ReassignPFA

end OpenCC_ReAssign_To_OtherQA

to handle LoginToApplication_NewQA

LoginToApplication "Quality.cc.2.N@sb-reckitt.com",global QApassword

end LoginToApplication_NewQA

to LoginToApplication_QA_second

LoginToApplication_NewQA

end LoginToApplication_QA_second

to handle OpenCC_VerifyOption_To_ApproveOrRejectCC

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
QualityPostApprovalOfCC_ReassignedQA_VerifyVerdict

end OpenCC_VerifyOption_To_ApproveOrRejectCC

to handle QualityPostApprovalOfCC_ReassignedQA_VerifyVerdicts

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
QualityPostApprovalOfCC_ReassignedQA_VerifyVerdict

end QualityPostApprovalOfCC_ReassignedQA_VerifyVerdicts

to handle OpenCC_VerifyNoOption_To_ApproveOrRejectCC

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
QualityPostApprovalOfCC_OldQA_VerifyVerdict_NoTask

end OpenCC_VerifyNoOption_To_ApproveOrRejectCC

to handle QualityPostApprovalOfCC_OldQA_VerifyVerdict_NoTask try
//Click imageName:"QualityPostApprovalofChangeControl", waitFor:50
//Click text:"Complete", waitFor:20,Searchrectangle:ScreenPart("TopRightQuadrant")
if ImageFound(text:"Approve",searchrectangle:ScreenPart("Center")) and if ImageFound(text:"Reject",searchrectangle:ScreenPart("Center"))
Put "Approve and Reject options are present" into global Vstep
Logerror global Vstep
CaptureAtLog
else
Put "Approve and Reject options are not present" into global Vstep
Log global Vstep
CaptureAtLog
end if
Catch theException
LogError theException
CaptureAtLog
//
End try
//click text:"Cancel",Searchrectangle:ScreenPart("BottomRightQuadrant"),waitfor:30
end QualityPostApprovalOfCC_OldQA_VerifyVerdict_NoTask


to handle QualityPostApprovalOfCC_OldQA_VerifyVerdicts

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
QualityPostApprovalOfCC_OldQA_VerifyVerdict

end QualityPostApprovalOfCC_OldQA_VerifyVerdicts

//QualityPostApprovalOfCC_ReassignedQA_VerifyVerdict
to handle QualityPostApprovalOfCC_ReassignedQA_VerifyVerdict

	try
		
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:50
		//Click text:"Complete", waitFor:20,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		if ImageFound(text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant"))
			Put "Approve and Reject options are present" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Approve and Reject options are not present" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	//click text:"Cancel",Searchrectangle:ScreenPart("BottomRightQuadrant"),waitfor:30
	
end QualityPostApprovalOfCC_ReassignedQA_VerifyVerdict

//QualityPostApprovalOfCC_OldQA_VerifyVerdict
to handle QualityPostApprovalOfCC_OldQA_VerifyVerdict

	try
		
		//Click imageName:"QualityPostApprovalofChangeControl", waitFor:50
		Click text:"Complete", waitFor:20,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		if ImageFound(text:"Approve",searchrectangle:ScreenPart("Center")) and if ImageFound(text:"Reject",searchrectangle:ScreenPart("Center"))
			Put "Approve and Reject options are present" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		else
			Put "Approve and Reject options are not present" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
	
	click text:"Cancel",Searchrectangle:ScreenPart("BottomRightQuadrant"),waitfor:30
	
end QualityPostApprovalOfCC_OldQA_VerifyVerdict




//E2EQMS-TS037-FP-PL-CC    //need to run job
to handle SearchRecord_InImplementation_VerifyGBUHealth_FA_FPA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_INIMPLEMENTATION

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Post Approver is"&global PFA  into global Vstep
	Log global Vstep

end SearchRecord_InImplementation_VerifyGBUHealth_FA_FPA_CC_QA_Originator

to handle LoginToCC_Verify_AssociatedIA_In_WorkInProgress

LogOut
LoginToApplication_CC
SearchRecord
OpenRecord_IA_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end LoginToCC_Verify_AssociatedIA_In_WorkInProgress

to handle CloseCC_WithFA_To_PendingFunctionClosureApproval

SearchRecord
ImplementTheChange_PendingFunctionClosureApproval

end CloseCC_WithFA_To_PendingFunctionClosureApproval

to handle OpenCC_SubmitForApproval_To_PendingQualityClosureApproval_CCPL

ProgressTo_PendingFunctionClosureApproval_ChangeNotImplemented

end OpenCC_SubmitForApproval_To_PendingQualityClosureApproval_CCPL

to handle OpenCC_SubmitForApproval_To_PendingQualityApproval
SearchRecord
FunctionApprovalOfChangeControl
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	
end OpenCC_SubmitForApproval_To_PendingQualityApproval


to handle OpenCC_ApproveClosure_To_ChangeNotImplemented


ProgressTo_ChangeNotImplemented

end OpenCC_ApproveClosure_To_ChangeNotImplemented

to handle WaitMnts_IA_movedTo_ClosedIncomplete

wait 500
Typetext F5
NavigateToImplementationAction
OpenRecord_CLOSEDINCOMPLETE

end WaitMnts_IA_movedTo_ClosedIncomplete




//E2EQMS-TS013-FP-PL CC
to handle SearchRecord_IAAP_Verify_CC_Originator_FA

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
end SearchRecord_IAAP_Verify_CC_Originator_FA

to handle Create_AI_IA_FillProduct_locationProgressCC_To_PendingFunctionApprovalState_AIToClosure

ProgressFrom_IAandAP_ToPendingFunctionApproval

end Create_AI_IA_FillProduct_locationProgressCC_To_PendingFunctionApprovalState_AIToClosure

to handle FA_Reject_CC_IAAP

RegressFromFunctionApproval_ToIAandAP

end FA_Reject_CC_IAAP

to handle LogintoApplication_CC_IAAP

LogintoApplication_CC

end LogintoApplication_CC_IAAP

to handle SearchRecord_IAAP_ProgressTo_PendingFunctionApproval

//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
PrepareImpactAssessmentActionPlan_PendingFunctionApproval_CCPL
end SearchRecord_IAAP_ProgressTo_PendingFunctionApproval

to handle Cancel_FunctionalApprovalTask_WorkflowTimeLine_IAAP

CancelTask_IAandAP

end Cancel_FunctionalApprovalTask_WorkflowTimeLine_IAAP




//E2EQMS-TS016-FP-PL CC
to handle OpenCC_CreateAIClosedComplete_CreateIA_VerifyDraft

SearchRecord_CreateAI_and_IA

end OpenCC_CreateAIClosedComplete_CreateIA_VerifyDraft

to handle LoginToCC_ProgressCCTo_PendngFunctionApproval

AddFunction_Location_PendingFunctionApproval

end LoginToCC_ProgressCCTo_PendngFunctionApproval


to handle OpenCC_ProgressTo_InImplementation

ProgressTo_InImplementation

end OpenCC_ProgressTo_InImplementation




//E2EQMS-TS034-FP-PL-CC
to handle SearchRecord_PendingQualityPostApprovalState_VerifyGBUHealth_FA_CC_QA_Originator_FPA

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Post Approver is"&global PFA  into global Vstep
	Log global Vstep

end SearchRecord_PendingQualityPostApprovalState_VerifyGBUHealth_FA_CC_QA_Originator_FPA

to handle OpenCC_EffectivenessNo_VerifyError_For_WithoutNextsteps

SearchRecord_QualityPostApprovalOfCC_Complete

end OpenCC_EffectivenessNo_VerifyError_For_WithoutNextsteps

to handle FillNextSteps_ProgressCCTo_ClosedImplemented

QualityPostApprovalOfCC_Verdict_ClosedComplete

end FillNextSteps_ProgressCCTo_ClosedImplemented

to handle VerifyCC_NonEditable

EditButtonNotAvailable

end VerifyCC_NonEditable

to handle CreateSuppleInfo_ByQA

SupplementaryInfoEditable

end CreateSuppleInfo_ByQA

to handle OpenSI_AttachFiles_AddComments

Open_SupplementaryInformation_AttcahFile

end OpenSI_AttachFiles_AddComments

to handle OpenCC_VerifyCC_NonEditable

SearchRecord_EditButtonNotAvailable

end OpenCC_VerifyCC_NonEditable




//E2EQMS-TS036-FP-PL-CC
to handle OpenCC_Assign2FA

Assign_2FAs

end OpenCC_Assign2FA

to handle CreateAIToClosed_CreateIA_ProgressCCTo_PendingFunctionApproval

//CreateAI_and_IA_PendingFunctionApproval
CreateAI_and_IA_PendingFunctionApproval_CCPL
end CreateAIToClosed_CreateIA_ProgressCCTo_PendingFunctionApproval

to handle OpenCC_ApproveCC_SecondFA_ToApprove

Approve_By_1FA

end OpenCC_ApproveCC_SecondFA_ToApprove

to handle LoginToApplication_FA_First
LoginToApplication_FA
end LoginToApplication_FA_First

to handle OpenCC_ApproveCC_To_PendingQualityApproval

Approve_By_2FA

end OpenCC_ApproveCC_To_PendingQualityApproval




//E2EQMS-TS035-FP-PL-CC
(* to handle OpenCC_CreateAIClosedComplete_CreateIA_VerifyDraft

SearchRecord_CreateAI_and_IA_FillProduct_and_LocationInformation

end OpenCC_CreateAIClosedComplete_CreateIA_VerifyDraft *)

to handle ProgressCC_To_PendingFunctionApproval
//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
PrepareImpactAssessmentActionPlan_PendingFunctionApproval_CCPL

end ProgressCC_To_PendingFunctionApproval

to handle OpenCC_ProgressCC_To_PendingQualityApproval

ProgressTo_PendingQualityApproval

end OpenCC_ProgressCC_To_PendingQualityApproval

to handle OpenCC_ProgressCC_To_InImplementation

ProgressTo_InImplementation

end OpenCC_ProgressCC_To_InImplementation

to handle LoginToApplication_CC_InImplementation

LoginToApplication_CC

end LoginToApplication_CC_InImplementation

to handle OpenCC_RegressCC_To_IAAP

ImplementTheChange_IMPACTASSESSMENTACTIONPLANNING

end OpenCC_RegressCC_To_IAAP




//E2EQMS-TS017-FP-PL CC
to handle OpenCC_ProgressCC_To_PendingFunctionApproval

ProgressFrom_IAandAP_ToPendingFunctionApproval

end OpenCC_ProgressCC_To_PendingFunctionApproval

to handle OpenCC_CreateDateDue_VerifyError_Without_JustificationReason

CM_DateDueExtension_VerifyErrorPrompt

end OpenCC_CreateDateDue_VerifyError_Without_JustificationReason

to handle FillJustificationReason_CreatedDateDue

CM_DateDueExtension_withoutVerification_CCPL

end FillJustificationReason_CreatedDateDue

to handle FromAndToDateDue_Visible_Within_DateDueExtension

VerifyDateDutChanged_From_and_To

end FromAndToDateDue_Visible_Within_DateDueExtension




//E2EQMS-TS020-FP-PL CC		//need to run job
to handle SearchRecord_IAAP_VerifyGBUHealth_FA_FPA_CC_QA_Originator

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global FA  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHealth_FA_FPA_CC_QA_Originator

to handle OpenCC_CreateAIComplete_CreateIAAssignAO_To_PendingFunctionApproval

ProgressFrom_IAandAP_ToPendingFunctionApproval

end OpenCC_CreateAIComplete_CreateIAAssignAO_To_PendingFunctionApproval

to handle OpenCC_VerifyIA_In_WorkInprogress

Verify_IA_State

end OpenCC_VerifyIA_In_WorkInprogress

to handle VerifyError_For_IA_Shouldbe_ClosedComplete

ImplementTheChange_VerifyErrorPromptToCloseIA

end VerifyError_For_IA_Shouldbe_ClosedComplete

to handle ProgressIA_To_ClosedComplete

Logout_ProgressIA_ToClosedComplete

end ProgressIA_To_ClosedComplete

to handle WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordinatorReview

wait 100
LoginToApplication_CC_ChangeCoordinatorReview
end WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordinatorReview




//E2EQMS-TS018-FP-PL CC
to handle OpenCC_ProgressCC_To_InImplementation_FromIAAP

//ProgressFrom_IAandAP_ToInImplementation
ProgressFrom_IAandAP_ToInImplementation_CCPL
end OpenCC_ProgressCC_To_InImplementation_FromIAAP

to handle LoginToCC_OpenCC_CreateTwoIAs

LoginToApplication_CC_Create_2IA

end LoginToCC_OpenCC_CreateTwoIAs

to handle OpenFirstIA_AssignAOFAQA_ProgressIA_To_PendingFunctionApproval

OpenRecord_ProgressIATo_PendingFunctionApproval

end OpenFirstIA_AssignAOFAQA_ProgressIA_To_PendingFunctionApproval

to handle OpenFirstIA_ProgressIA_To_PendingQualityApproval

ProgressIATo_PendingQualityApproval

end OpenFirstIA_ProgressIA_To_PendingQualityApproval

to handle OpenFirstIA_ProgressIA_To_WorkInProgress

ProgressIATo_WorkInProgress_SearchRecord_CC

end OpenFirstIA_ProgressIA_To_WorkInProgress

to handle OpenSecondIA_AssignAOFAQA_ProgressIA_To_PendingQualityApproval

//OpenRecord_ProgressIATo_PendingQualityApproval
OpenRecord_ProgressIATo_PendingQualityApproval_CCPL_NoFA
end OpenSecondIA_AssignAOFAQA_ProgressIA_To_PendingQualityApproval

to handle OpenSecondIA_ProgressIA_To_WorkInProgress

ProgressIATo_WorkInProgress_SearchRecord_CC

end OpenSecondIA_ProgressIA_To_WorkInProgress




//E2EQMS-TS021-FP-PL CC
to handle OpenCC_CreateAIComplete_Create3IAAssignAOs

SearchRecord_CreateAI_and_3IAs

end OpenCC_CreateAIComplete_Create3IAAssignAOs

to handle OpenCC_Progress2IAs_ClosedComplete

Progress2IAs_ToClosedComplete

end OpenCC_Progress2IAs_ClosedComplete

to handle ReOpenIA_VerifyStateOfIA_ByCC

LoginToApplication_CC_ReopenIA

end ReOpenIA_VerifyStateOfIA_ByCC

to handle OpenCC_ReopenOther_ClosedCompleteIA_ByQA

QA_ReopenIA

end OpenCC_ReopenOther_ClosedCompleteIA_ByQA




//E2EQMS-TS022-FP-PL CC		//need to run job
to handle OpenCC_CreateAIComplete_CreateIA_AssignAO

//SearchRecord_CreateAI_and_IA_FillProduct_and_LocationInformation
SearchRecord_CreateAI_and_IA
end OpenCC_CreateAIComplete_CreateIA_AssignAO

to handle OpenCC_ProgressIA_To_ClosedComplete

//ProgressIA_ToClosedComplete
Logout_ProgressIA_ToClosedComplete
end OpenCC_ProgressIA_To_ClosedComplete




to handle LoginCC_WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview
wait 100
LoginToApplication_CC_ChangeCoordinatorReview

end LoginCC_WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview

to handle VerifyError_For_Without_PostImplementationSummary

VerifyErrorPromptToaddPostImplementationSummary

end VerifyError_For_Without_PostImplementationSummary

to handle EditCC_Fill_PostImplementationSummary

EditPostImplementationReview

end EditCC_Fill_PostImplementationSummary

to handle ProgressCC_WithoutPFA_To_pendingQualityPostApproval

ReviewTheImplementationOfTheChange_PendingPostQualityApproval

end ProgressCC_WithoutPFA_To_pendingQualityPostApproval




//E2EQMS-TS025-FP-PL CC		//need to run job
(*to handle OpenCC_CreateAIComplete_CreateIA_AssignAO

SearchRecord_CreateAI_and_IA_FillProduct_and_LocationInformation

end OpenCC_CreateAIComplete_CreateIA_AssignAO*)

to handle ProgressCC_To_InImplementation_From_IAAP

//PrepareImpactAssessmentActionPlan_InImplementation
AddFunction_Location_PendingFunctionApproval_CCPL
Logout
LoginToApplication_FA
SearchRecord
FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	LoginToApplication_QA
	SearchRecord
QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
LogOut
end ProgressCC_To_InImplementation_From_IAAP

to handle LoginToCC_OpenCC_ProgressIA_To_ClosedComplete

LoginToApplication_CC_ProgressIA_ToClosedComplete

end LoginToCC_OpenCC_ProgressIA_To_ClosedComplete

to handle WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview
wait 100
LoginToApplication_CC_ChangeCoordinatorReview

end WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview

to handle CreateIA_In_ChangeCoordinatorReview

CreateImplementationAction

end CreateIA_In_ChangeCoordinatorReview

to handle WaitMnts_VerifyCC_AutomaticallyRegressToInImplementation
Wait 200
SearchRecord
VerifyLifeCycleState_INIMPLEMENTATION

end WaitMnts_VerifyCC_AutomaticallyRegressToInImplementation

to handle OpenNewIA_AssignAOandQA

OpenIA_Assign_QAAndActionOwner

end OpenNewIA_AssignAOandQA

to handle ProgressIA_To_PendingQualityApproval_WithoutFA

SubmitActionForPreApproval_PENDINGQUALITYAPPROVAL

end ProgressIA_To_PendingQualityApproval_WithoutFA

to handle OpenNewIA_ProgressTo_WorkInProgress

SearchRecord_ProgressIATo_WorkInProgress

end OpenNewIA_ProgressTo_WorkInProgress

to handle OpenNewIA_By_ActionOwner

SearchRecord_IA_WORKINPROGRESS

end OpenNewIA_By_ActionOwner


to handle SearchRecord_IA_WORKINPROGRESS
SearchRecord
OpenRecord_IA_WORKINPROGRESS
end SearchRecord_IA_WORKINPROGRESS


to handle CompleteIA_To_ClosedComplete_ByAO

ImplementationActionTobeCompleted_CLOSEDCOMPLETE

end CompleteIA_To_ClosedComplete_ByAO




//E2EQMS-TS023-FP-PL CC		//need to run job
to handle OpenCC_CreateAIComplete_Create2IAAssignAOs

SearchRecord_Create2AIs_and_IA_FillProduct_and_LocationInformation

end OpenCC_CreateAIComplete_Create2IAAssignAOs

to handle VerifyCC_AutomaticallyRegressToInImplementation

SearchRecord_InImplementation

end VerifyCC_AutomaticallyRegressToInImplementation




//E2EQMS-TS039-FP-PL-CC		//need to run job
to handle ProgressCC_To_PendingQualityPostApproval_WithoutFA

//ImplementTheChange_PendingQualityPostApproval
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
end ProgressCC_To_PendingQualityPostApproval_WithoutFA

to handle OpenCC_PQPA

SearchRecord_PENDINGQUALITYPOSTAPPROVAL

end OpenCC_PQPA

to handle CompleteCC_IncludeFPA_VerifyError_AssignFPA

QualityPostApprovalOfChangeControl_VerifyErrorToAssignPFA

end CompleteCC_IncludeFPA_VerifyError_AssignFPA

to handle AssignFPA_WhenCCInPQPA

AssignUser_Teams_PFA

end AssignFPA_WhenCCInPQPA

to handle CompleteCC_IncludeFPA_To_PFPA

QualityPostApprovalOfChangeControl

end CompleteCC_IncludeFPA_To_PFPA




//E2EQMS-TS005-FP-PL CC
to handle Progress_CC_FromDraftToImpactAssessmentActionPlanning

SearchRecord
VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
end Progress_CC_FromDraftToImpactAssessmentActionPlanning

to handle SearchRecord_CreateImplementation_AssignActionOwner

SearchRecord_CreateIA

end SearchRecord_CreateImplementation_AssignActionOwner

to handle VerifyError_AtleastOneAItobeClosedComplete_CC_SubmitForPendingApprovalStage

//SubmitRecord_withoutAI
AssignUser_Teams_QA
AssignUser_Teams_FA
SubmitRecord_withoutAI_CCPL
end VerifyError_AtleastOneAItobeClosedComplete_CC_SubmitForPendingApprovalStage

to handle AssignAssessorRole_VerifyStatePendingAssessment

OpenRecord_AI_Draft
//VerifyLifeCycleState_Draft
AssignUser_Teams_Assessor
VerifyLifeCycleState_PENDINGASSESSMENT

end AssignAssessorRole_VerifyStatePendingAssessment

to handle VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_LogOut

SubmitRecord_withoutClosingAI

end VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_LogOut

to handle LoginToApplication_Assessor_CompleteAssessmentItem_Logout

AssessmentItem_ClosedComplete
//AssessmentItem_ClosedComplete_Second_Hygiene
LogOut
end LoginToApplication_Assessor_CompleteAssessmentItem_Logout

to handle CC_AssignFunctionalApproval

SearchRecord_AssignFA

end CC_AssignFunctionalApproval

to handle Progress_CC_To_PendingApprovalState


//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
PrepareImpactAssessmentActionPlan_CCPL_PendingFunctionApproval
end Progress_CC_To_PendingApprovalState

to handle PrepareImpactAssessmentActionPlan_CCPL_PendingFunctionApproval
	SearchRecord
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL

end PrepareImpactAssessmentActionPlan_CCPL_PendingFunctionApproval
to handle RaiseCC_ProgressToImpactAssessmentActionPlanning
     OpenDependentRecord1
	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep

end RaiseCC_ProgressToImpactAssessmentActionPlanning

to handle LoginToApplication_CC_ForNewRecord

LoginToApplication_CC

end LoginToApplication_CC_ForNewRecord

to handle CC_Raise_IA_AssignActionOwner

//SearchRecord_CreateIA
SearchRecord_Second_CreateIA_CCPL
end CC_Raise_IA_AssignActionOwner

to handle VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_FANo

//SubmitRecord_withoutAI_ForHygiene
SubmitRecord_withoutAI_ForHygiene_CCPL
end VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_FANo

 
 
 to handle SubmitRecord_withoutAI_ForHygiene_CCPL

	OpenDependentRecord1
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
	VerifyErrorPromptForNotRaising_AI
	
end SubmitRecord_withoutAI_ForHygiene_CCPL

 
to handle CreateOneAssessmentItem

CreateAssessmentItem_Draft_ForHygiene

end CreateOneAssessmentItem


to handle CreateAssessmentItem_Draft_ForHygiene

CreateAssessmentItem
OpenRecord_AI_Draft
end CreateAssessmentItem_Draft_ForHygiene

to handle AssignAssessor_VerifyStatePendingAssessment

StartImpactAssessment_PendingAssessment

end AssignAssessor_VerifyStatePendingAssessment

to handle VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_FANoLogOut

SubmitRecord_withoutClosingAI_ForHygiene

end VerifyError_AtleastOneAItobeClosedComplete_SubmitForPendingApprovalStage_FANoLogOut

to handle SubmitRecord_withoutClosingAI_ForHygiene
SubmitRecord_withoutClosingAI_Second_CCPL

end SubmitRecord_withoutClosingAI_ForHygiene

to handle SubmitRecord_withoutClosingAI_Second_CCPL
    OpenDependentRecord1
	PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
	VerifyErrorPromptForNotClosing_AI
end SubmitRecord_withoutClosingAI_Second_CCPL
to handle LoginToApplication_Assessor_AssessmentItemClosedComplete

//AssessmentItem_ClosedComplete
AssessmentItem_ClosedComplete_Second_Hygiene
end LoginToApplication_Assessor_AssessmentItemClosedComplete

to handle LogIntoApplication_CC_ForSecondRecord

LoginToApplication_CC

end LogIntoApplication_CC_ForSecondRecord

to handle Open_CC_AssignQA

//SearchRecord_AssignQA
SearchRecord_AssignQA_second_Hygiene
end Open_CC_AssignQA

to handle ProgressCC_To_PendingApprovalState_FANo

//PrepareImpactAssessmentActionPlan_PendingQualityApproval
PrepareImpactAssessmentActionPlan_CCPL_PendingQualityApproval
end ProgressCC_To_PendingApprovalState_FANo

to handle PrepareImpactAssessmentActionPlan_CCPL_PendingQualityApproval

PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
end PrepareImpactAssessmentActionPlan_CCPL_PendingQualityApproval

to handle PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
	try
	(*Put "ChangeNotRequired" into global PIAverdict
		Put "Raised In Error" into global ReasonForClosing*)
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
		Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			Typetext  "Hygiene"
			Typetext downArrow, return
			click imagelocation(text:"Yes", waitFor:100,SearchRectangle:ScreenPart("Center"))+[40,0](*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
		if global PIAverdict is "ChangeNotRequired"
			Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
			click imagelocation(text:"Justification for Closing",searchrectangle:ScreenPart("Center"))+[120,0]
			
			typetext"testing"
			wait 3
			//Click imageName:"ReasonforClosingNotProgressed", waitFor:20
			Typetext tabKey
			//Click imageName:"ReasonforClosingNotProgressed_textbox", waitFor:10
			wait 2
			Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			
			
			Typetext global ReasonForClosing
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
			Put "Change Coordinator Select Verdict as CloseChangeControl/ChangeNotRequired" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
			
			
		else if global PIAverdict is "SubmitForApproval"
			click item 2 of everyimagelocation(text:"Submit For Approval",SearchRectangle:ScreenPart("Center"))
			Typetext tabKey
			Typetext"testing"
			(*Click imageName:"ImpactAssessmentConclusionSummary", waitFor:50
			Typetext "test"*)
			Typetext tabKey
			Typetext "test"
			Typetext tabKey
			Typetext "test"
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText global FormalRiskAssessmentRequired
			TypeText downArrow, return
			TypeText tabKey
			TypeText ControlKey, a
			Typetext Backspace
			TypeText "Low"
			TypeText downArrow, return
			put "Change Coordinator Select Verdict as Submit for Approval" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click imageName:"complete", waitFor:120
			wait 10
			
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try
	
	
end PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA

//E2EQMS-TS008-FP-PL CC
to handle OpenCC_AssignFA_CloseCC_ConfirmJustificationReasonMandatory

//PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_withFA
SearchRecord
AssignUser_Teams_FA
OpenRecord_PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields

end OpenCC_AssignFA_CloseCC_ConfirmJustificationReasonMandatory


to handle OpenRecord_PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields

PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields
end OpenRecord_PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields

to handle PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithFA
	//Click imageName:"complete", waitFor:120
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
		Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			Typetext "Hygiene"
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
	//if global PIAverdict is "ChangeNotRequired"
	Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
	Click imageName:"complete", waitFor:120
	wait 2
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Justification")
		insert "Justification" into MandatoryFields
	else
		insert "Justification" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Reason")
		insert "Reason" into MandatoryFields
	else
		insert "Reason" into NonMandatoryFields
	end if
	
	if number of items of MandatoryFields is 2
		Put "Justification and Reason fields are Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
	//end if
	
end PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithFA

to handle PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithoutFA
	//Click imageName:"complete", waitFor:120
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
		Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			Typetext "Hygiene"
			Typetext downArrow, return
			click imagelocation(text:"Yes", waitFor:100,SearchRectangle:ScreenPart("Center"))+[40,0](*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
	//if global PIAverdict is "ChangeNotRequired"
	Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
	Click imageName:"complete", waitFor:120
	wait 2
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Justification")
		insert "Justification" into MandatoryFields
	else
		insert "Justification" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Reason")
		insert "Reason" into MandatoryFields
	else
		insert "Reason" into NonMandatoryFields
	end if
	
	if number of items of MandatoryFields is 2
		Put "Justification and Reason fields are Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
	//end if
	
end PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields_Hygiene_WithoutFA

to handle PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields
	//Click imageName:"complete", waitFor:120
	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
	click imagelocation(text:"Global Business Unit",searchrectangle:ScreenPart("Center"))+[120,30]
		Typetext controlKey,a
			Typetext backspace
			Typetext backspace
			wait 2
			Typetext global CCPLGBU
			Typetext downArrow, return
			click text:global FA_Require_Not, waitFor:100,SearchRectangle:ScreenPart("BottomHalf")(*,searchrectangle:[bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf")),bottomleft of imagerectangle(text:"Function Approvers Required",searchrectangle:ScreenPart("BottomHalf"))+[300,100]]*)
			
			wait 3
	//if global PIAverdict is "ChangeNotRequired"
	Click text:"Change not required", waitFor:120,searchrectangle:ScreenPart("Center")
	Click imageName:"complete", waitFor:120
	wait 2
	Put [] into NonMandatoryFields
	Put [] into MandatoryFields

	if ImageFound(text:"Justification")
		insert "Justification" into MandatoryFields
	else
		insert "Justification" into NonMandatoryFields
	end if
	
	if ImageFound(text:"Reason")
		insert "Reason" into MandatoryFields
	else
		insert "Reason" into NonMandatoryFields
	end if
	
	if number of items of MandatoryFields is 2
		Put "Justification and Reason fields are Mandatory" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog		
		
	else
		Put "Non Mandatory fields are "&NonMandatoryFields into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
	end if
	
	//end if
	
end PrepareImpactAssessmentActionPlan_CCPL_VerifyMandatoryFields
to handle FillJustificationReason_ProgressTo_PendingFunctionClosureApproval

//PrepareImpactAssessmentActionPlan_Verdict
PrepareImpactAssessmentActionPlan_Verdict_CCPL
end FillJustificationReason_ProgressTo_PendingFunctionClosureApproval

to handle OpenCC_SubmitForApproval_To_PendingQualityClosureApproval

ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed

end OpenCC_SubmitForApproval_To_PendingQualityClosureApproval

to handle OpenCC_ApproveClosure_To_ChangeNotProgressed

ProgressTo_ChangeNotProgressed_CCPL

end OpenCC_ApproveClosure_To_ChangeNotProgressed

to handle SearchRecord_IAAP_VerifyGBUHygiene_CC_QA_Originator
OpenDependentRecord1
	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHygiene_CC_QA_Originator

to handle OpenCC_CloseCCWithoutFA_ConfirmJustificationReasonMandatory

//PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed
PrepareImpactAssessmentActionPlan_VerifyMandatoryFields_ChangeNotProgressed_Second
end OpenCC_CloseCCWithoutFA_ConfirmJustificationReasonMandatory

to handle FillJustificationReason_ProgressTo_PendingQualityClosureApproval

//PrepareImpactAssessmentActionPlan_Verdict_withoutFA
PrepareImpactAssessmentActionPlan_Verdict_CCPL_withoutFA
end FillJustificationReason_ProgressTo_PendingQualityClosureApproval

to handle OpenCC_ApproveClosure_To_ChangeNotProgressed_Second

//ProgressTo_ChangeNotProgressed_withoutFA
ProgressTo_ChangeNotProgressed_withoutFA_CCPL
end OpenCC_ApproveClosure_To_ChangeNotProgressed_Second

to handle SearchRecord_IAAP_VerifyGBUHygiene_FA_CC_QA_Originator
OpenDependentRecord2
	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_IAAP_VerifyGBUHygiene_FA_CC_QA_Originator

to handle OpenCC_CloseCC_ConfirmJustificationReasonMandatory_Hygiene

//LoginToApplication_CC_VerifyMandatoryFields

LoginToApplication_CC_VerifyMandatoryFields_CCPL_withFA
end OpenCC_CloseCC_ConfirmJustificationReasonMandatory_Hygiene

to handle FillJustificationReason_ProgressTo_PendingFunctionClosureApproval_Hygiene

PrepareImpactAssessmentActionPlan_VerdictwithFA_CCPL
VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL


end FillJustificationReason_ProgressTo_PendingFunctionClosureApproval_Hygiene

to handle OpenCC_SubmitForApproval_To_PendingQualityClosureApproval_Hygiene

//ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed
ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_hygiene

end OpenCC_SubmitForApproval_To_PendingQualityClosureApproval_Hygiene

to handle ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_hygiene

ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_CCPL
end ProgressTo_PendingQualityClosureApproval_ChangeNotProgressed_hygiene

to handle OpenCC_ApproveClosure_To_ChangeNotProgressed_Third

ProgressTo_ChangeNotProgressed_CCPL_Hygiene

end OpenCC_ApproveClosure_To_ChangeNotProgressed_Third




//E2EQMS-TS038-FP-PL-CC
to handle OpenCC_Assign2FPA_InImplementation

SearchRecord_Assign2PFAs

end OpenCC_Assign2FPA_InImplementation

to handle VerifyDetails_Of_2FPA_AreVisible

CC_PostFunction_Titles_status

end VerifyDetails_Of_2FPA_AreVisible

to handle Progress_AssociatedIA_To_ClosedComplete

//ProgressIA_ToClosedComplete
ProgressIA_ToClosedComplete_CCPL
end Progress_AssociatedIA_To_ClosedComplete

(*to handle WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview

LoginToApplication_CC_ChangeCoordinatorReview

end WaitMnts_VerifyCC_AutomaticallyMoveToChangeCoordiantorReview*)

to handle ProgressCC_To_PFPA_FromCCReview

ImplementTheChange_PendingFunctionPostApproval

end ProgressCC_To_PFPA_FromCCReview

to handle OpenCC_ByFirstFPA

SearchRecord

end OpenCC_ByFirstFPA

to handle ApproveCC_ByFirstFPA

FAFinalApproval

end ApproveCC_ByFirstFPA

to handle ConfirmThat_CCStillIn_PFPA

VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL

end ConfirmThat_CCStillIn_PFPA

to handle OpenCC_BySecondFPA

SearchRecord

end OpenCC_BySecondFPA

to handle ApproveCC_SecondFPA_ProgressTo_PQPA

//FAFinalApproval_PendingQualityPostApproval
FAFinal_PendingQualityPostApproval
end ApproveCC_SecondFPA_ProgressTo_PQPA




//E2EQMS-TS040-FP-PL-CC
to handle SearchRecord_Draft_VerifyGBUHygiene
OpenDependentRecord1
	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
		
end SearchRecord_Draft_VerifyGBUHygiene 

to handle AssignCC_CCPL_InDraft

AssignUser_Teams_CC

end AssignCC_CCPL_InDraft

to handle AssignQA_SameAs_CC_VerifyError

AssignUser_Teams_QA_CC
	
	LogOut
	LoginToApplication_CC
	OpenDependentRecord1
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	//VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	OpenDependentRecord1 
	OpenRecord_AI_PENDINGASSESSMENT
	//VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	OpenDependentRecord1
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	OpenDependentRecord1
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	
	PrepareImpactAssessmentActionPlan_CCPL_Hygiene_NoFA
	VerifyErrorMessage_NotToAddSameUser_QA




(*
wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 5
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 5
	(*put "Function Approver" into Role*)
	Click imagelocation(text:"Quality Approver",searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,3]
	wait 5
	Typetext controlkey,a
	Typetext backspace
	wait 5
	Typetext "Nutrition CC 1 Change Coordinator"
	
	if imagefound(text:"No Matches found") then
		Log "Application role selection is invalid for the user error message displayed"
		CaptureAtLog
		Click text:"Cancel",waitfor:30,SearchRectangle:ScreenPart("topRightQuadrant")
	else
		logError "User who is not part of Quality Approver is added as QA"
		CaptureAtLog
	end if *)

end AssignQA_SameAs_CC_VerifyError

to handle AssignQA_AppropriatePermissions

AssignUser_Teams_QA

end AssignQA_AppropriatePermissions

to handle SearchRecord_Draft_VerifyGBUHealth
SearchRecord
Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
		
end SearchRecord_Draft_VerifyGBUHealth

to handle AssignCC_CCPL_InDraft_ForHealth

AssignUser_Teams_CC

end AssignCC_CCPL_InDraft_ForHealth

to handle AssignFA_GBUHealth

AssignUser_Teams_FA

end AssignFA_GBUHealth

to handle AssignQA_GBUHealth

AssignUser_Teams_QA

end AssignQA_GBUHealth

to handle RemoveAssignmentOfFA_AssignedPreviously

//RemoveUserFromTeam "Function Approver"
RemoveUserFromTeam_FunctionApprover
end RemoveAssignmentOfFA_AssignedPreviously

to handle AssignFA_SameAs_CC_VerifyError

AssignUser_Teams_FA_CC
	
	CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	//VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord
	OpenRecord_AI_PENDINGASSESSMENT
	//VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	//VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	//VerifyLifeCycleState_Draft
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	//Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
	PrepareImpactAssessmentActionPlan_CCPL
	VerifyErrorMessage_NotToAddSameUser
(*wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 5
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 5
	(*put "Function Approver" into Role*)
	Click imagelocation(text:"Function Approver",searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,3]
	wait 5
	Typetext controlkey,a
	Typetext backspace
	wait 5
	Typetext "Nutrition CC 1 Change Coordinator"
	
	if imagefound(text:"No Matches found") then
		Log "Application role selection is invalid for the user error message displayed"
		CaptureAtLog
		Click text:"Cancel",waitfor:30,SearchRectangle:ScreenPart("topRightQuadrant")
	else
		logError "User who is not part of Function Approver is added as QA"
		CaptureAtLog
	end if*)

end AssignFA_SameAs_CC_VerifyError

to handle AssignFA_AppropriatePermissions

AssignUser_Teams_FA

end AssignFA_AppropriatePermissions

to handle ProgressCC_To_IAAP_ByOriginator

VerifyLifeCycleState_IMPACTASSESSMENTACTIONPLANNING

end ProgressCC_To_IAAP_ByOriginator

to handle OpenCC_IAAP_ByFA

SearchRecord

end OpenCC_IAAP_ByFA

to handle Verify_FA_Cannot_Create_IA

VerifyCannotRaise_ImplementationAction

end Verify_FA_Cannot_Create_IA

to handle VerifyFA_CannotEditDataOfCC

CannotEdit_GeneralInformation

end VerifyFA_CannotEditDataOfCC

to handle OpenCC_IAAP_ByCC

SearchRecord

end OpenCC_IAAP_ByCC

to handle Assign_2FA_ByCC_inIAAP

wait 3
Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,30]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Nutrition CC 2 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50
	
	wait 3
	Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
	wait 3
	WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 2
	put "Function Approver" into Role
	Click imagelocation(text:Role,searchrectangle:[remotescreensize()*[0.2,0.2],remotescreensize()])+[150,40]
	wait 2
	(*	Typetext controlkey,a
	Typetext backspace*)
	wait 1
	Typetext "Health CC 1 Function Approver"
	wait 1
	typetext downarrow,return
	click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
	wait 3
	//WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
	put Role&" Assigned successfully" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	wait 15
	ScrollWheelUp 50

end Assign_2FA_ByCC_inIAAP

to handle CreateAI_ClosedComplete_CreateIA

  CreateAI_and_IA
//CreateAI_and_IA_SecondRecord
end CreateAI_ClosedComplete_CreateIA

(*to handle ProgressCC_To_PendingFunctionApproval

SearchRecord_Fill_Product_AndLocationInformation

end ProgressCC_To_PendingFunctionApproval *)

to handle OpenCC_PendingFunctionApproval_ByPreviousFA

SearchRecord

end OpenCC_PendingFunctionApproval_ByPreviousFA

to handle Verify_PreviousFA_Cannot_Create_IA

VerifyCannotRaise_ImplementationAction

end Verify_PreviousFA_Cannot_Create_IA

to handle VerifyPreviousFA_CannotEditDataOfCC

CannotEdit_GeneralInformation

end VerifyPreviousFA_CannotEditDataOfCC

to handle ApproveCC_StillIn_PendingFunctionApproval

FunctionApprovalOfChangeControl_PendingFunctionApproval

end ApproveCC_StillIn_PendingFunctionApproval

to handle OpenCC_PendingFunctionApproval_BySecondFA

SearchRecord

end OpenCC_PendingFunctionApproval_BySecondFA

to handle ApproveCC_StillIn_PendingFunctionApproval_Second

FunctionApprovalOfChangeControl_PendingFunctionApproval_second

end ApproveCC_StillIn_PendingFunctionApproval_Second

to handle OpenCC_PendingFunctionApproval_ByThirdFA

SearchRecord

end OpenCC_PendingFunctionApproval_ByThirdFA

to handle ReAssignFA_ToFourthFA

ReassignFAByOtherFA
CancelTask_FromCogWheel_WorkFlowTimeLine
end ReAssignFA_ToFourthFA

to handle PresentFA_CannotApproveCC
Logout
LoginToApplication "Function.cc.1.H@sb-reckitt.com","rbQone@3test"
SearchRecord
CannotCompleteTask

end PresentFA_CannotApproveCC

to handle OpenCC_PendingFunctionApproval_byFourthFA

SearchRecord

end OpenCC_PendingFunctionApproval_byFourthFA

to handle ApproveCC_ByFourthFA_ProgressTo_pendingQualityApproval

try
		//Put "Approved" into global FAverdict
		//Click imageName:"FunctionApprovalofChangeContro", waitFor:120
		Click text:"Complete", waitFor:120,Searchrectangle:ScreenPart("TopRightQuadrant")
		
		wait 3
		if global FAverdict is "Approved"
			Click text:"Approved", waitFor:120
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"testing"
			Click ImageLocation(text:"User Name",SearchRectangle:ScreenPart("BottomHalf"))+[0,30]
			TypeText "Function.cc.2.H@sb-reckitt.com"
			
			wait 2
			//Click ImageLocation(text:"Password",SearchRectangle:ScreenPart("Center"))+[0,30]
			TypeText tabKey
			TypeText "rbQone@3test"
			wait 2
			Click imageName:"Complete", waitFor:120
			
			Put "FunctionApproverApprovedAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
			
		else if global FAverdict is "Rejected"
			click text:"Rejected",SearchRectangle:ScreenPart("Center")
			click imagelocation(text:"Comments",searchrectangle:ScreenPart("Center"))+[120,0]
			TypeText"Testing rejected"
			Click imageName:"Complete", waitFor:120
			
			Put "FunctionApproverRejectAssessment" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "ApprovedandRejectedVerdictfieldsAreNotThere" into global Vstep
			Logerror global Vstep
			CaptureAtLog
			
		end if
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
end ApproveCC_ByFourthFA_ProgressTo_pendingQualityApproval

to handle LoginToApplication_ChangeCordinator_to_Reassign

 end LoginToApplication_ChangeCordinator_to_Reassign


//E2EQMS-TS041-FP-PL-CC
to handle SearchRecord_Draft_VerifyGBUHealth_AssignCCQAFA

	Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Originator is"&global Originator_Username  into global Vstep
	Log global Vstep
	
	Put "Change Control Change Coordinator is"&global CCUserID  into global Vstep
	Log global Vstep
	
	Put "Change Control Quality Approver is"&global QA  into global Vstep
	Log global Vstep
	
	Put "Change Control Function Approver is"&global QA  into global Vstep
	Log global Vstep

end SearchRecord_Draft_VerifyGBUHealth_AssignCCQAFA

to handle VerifyCC_In_IAAPState

AssignToChangeCordinator_IAAP

end VerifyCC_In_IAAPState

(*to handle OpenCC_IAAP_ByCC

SearchRecord

end OpenCC_IAAP_ByCC*)

to handle VerifyError_ForNoRiskAssessment_FillJustification



NavigateToImpactAssessmentOutputSection
EditImpactAssessmentOutput_withoutJustification_CCPL




end VerifyError_ForNoRiskAssessment_FillJustification

to handle CreateAI_and_IA_Fill_Product_LocationInformation
CreateAssessmentItem
	OpenRecord_AI_Draft
	//VerifyLifeCycleState_Draft
	//StartImpactAssessment
	AssignUser_Teams_Assessor
	VerifyLifeCycleState_PENDINGASSESSMENT
	LogOut
	
	LoginToApplication_Assessor
	SearchRecord 
	OpenRecord_AI_PENDINGASSESSMENT
	VerifyLifeCycleState_PENDINGASSESSMENT
	AssessmentOfChangeControl
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	CreateImplementationAction
	OpenRecord_IA_Draft
	
	AssignUser_Teams_ActionOwner
	SearchRecord
	NavigateToAffectedLocationInformation
	CreateAffectedLocationInformation
	Add_ImpactedProduct
	NavigateToImpactAssessmentOutputSection
	EditImpactAssessmentOutput
end CreateAI_and_IA_Fill_Product_LocationInformation

(*to handle VerifyError_ForNoRiskAssessment_FillJustification

VerifyErrorMessage_ToFillJustification

end VerifyError_ForNoRiskAssessment_FillJustification
*)
to handle EditImpactAssessmentOutput_withoutJustification_CCPL



try

(* Put "Built-In" into global FormalRiskAssessmentRequired
Put "Low" into global OverAllRisk*)

click Image:"edit_img",waitfor:120,SearchRectangle:ScreenPart("topRightQuadrant")
waitfor 120,text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf")
click ImageLocation(text:"Implementation success",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
Typetext controlKey,a
Typetext backspace
Typetext "Test"

click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
(*Typetext global FormalRiskAssessmentRequired
Typetext downArrow, return*)
wait 2
// deleting previous value
set the SearchRectangle to [ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-5],ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[700,150]]



repeat 3 times
if ImageFound(image:"RiskAssessmentClosebutton")
click FoundImageLocation()

end if
wait 1
end repeat
set the SearchRectangle to []




click text:global FormalRiskAssessmentRequired,SearchRectangle:ScreenPart("LeftHalf")
wait 2
click ImageLocation(text:"Formal Risk Assessment",SearchRectangle:ScreenPart("LeftHalf"))+[0,-20]

click ImageLocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("LeftHalf"))+[200,2]
Typetext controlKey,a
Typetext backspace

wait 2
click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[200,1]
wait 1
//OverAllRisk
Typetext controlKey,a
Typetext backspace
click text:global OverAllRisk,SearchRectangle:ScreenPart("RightHalf")
click ImageLocation(text:"Overall Risk",SearchRectangle:ScreenPart("RightHalf"))+[0,-21]
wait 5

click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
wait 5
VerifyErrorMessage_ToFillJustification
(*
if ImageFound(imageName:"edit_img", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
Put "ImpactAssessmentOutPutEditedSuccessfully" into global Vstep
Log global Vstep
W_App_CommonHandlers.CaptureAtLog
else
Put "ImpactAssessmentOutPutNotEditedSuccessfully" into global Vstep
LogError global Vstep
W_App_CommonHandlers.CaptureAtLog
end if*)

Catch theException
LogError theException
W_App_CommonHandlers.CaptureAtLog
//
End try

end EditImpactAssessmentOutput_withoutJustification_CCPL

to handle CreateAIComplete_CreateIAAssignAO_ByCC



//CreateAI_and_IA_Fill_Product_LocationInformation
CreateAI_and_IA_Fill_Product_LocationInformation_CCPL



end CreateAIComplete_CreateIAAssignAO_ByCC



to handle CreateAI_and_IA_Fill_Product_LocationInformation_CCPL
CreateAssessmentItem
OpenRecord_AI_Draft
//VerifyLifeCycleState_Draft
//StartImpactAssessment
AssignUser_Teams_Assessor
VerifyLifeCycleState_PENDINGASSESSMENT
LogOut

LoginToApplication_Assessor
SearchRecord
OpenRecord_AI_PENDINGASSESSMENT
VerifyLifeCycleState_PENDINGASSESSMENT
AssessmentOfChangeControl
VerifyLifeCycleState_CLOSEDCOMPLETE
LogOut

LoginToApplication_CC
SearchRecord
CreateImplementationAction
OpenRecord_IA_Draft

AssignUser_Teams_ActionOwner
SearchRecord
NavigateToAffectedLocationInformation
CreateAffectedLocationInformation
//Add_ImpactedProduct
wait 5


end CreateAI_and_IA_Fill_Product_LocationInformation_CCPL

to handle EditCC_NoFormalRiskRequired_FillJustification

//EditImpactAssessmentOutput_Justification
EditImpactAssessmentOutput
end EditCC_NoFormalRiskRequired_FillJustification

to handle SubmitCC_ProgressTo_PendingFunctionApproval

PrepareImpactAssessmentActionPlan_PendingFunctionApproval

end SubmitCC_ProgressTo_PendingFunctionApproval

to handle OpenCC_PendingFunctionApproval_ByFA

SearchRecord

end OpenCC_PendingFunctionApproval_ByFA

to handle RegressCCTo_IAAP_from_PendingFunctionApproval

FunctionApprovalOfChangeControl_IMPACTASSESSMENTACTIONPLANNING

end RegressCCTo_IAAP_from_PendingFunctionApproval

to handle OpenCC_IAAP_ByCC_Second

SearchRecord

end OpenCC_IAAP_ByCC_Second

to handle EditCC_BuiltInToolforFormalrisk

EditImpactAssessmentOutput_withBuiltInTool

end EditCC_BuiltInToolforFormalrisk

to handle SubmitCC_VerifyError_RiskItemRequired

PrepareImpactAssessmentActionPlan_CCPL_Progress_Prepopulate
VerifyErrorPromptTo_CreateRiskAssessment

end SubmitCC_VerifyError_RiskItemRequired

to handle CreateRiskItem_ByCC

Navigate_and_CreateRiskAssessment

end CreateRiskItem_ByCC

to handle SubmitCC_ProgressTo_PendingFunctionApproval_Second

//PrepareImpactAssessmentActionPlan_PendingFunctionApproval
PrepareImpactAssessmentActionPlan_CCPL_Progress_Prepopulate
end SubmitCC_ProgressTo_PendingFunctionApproval_Second

to handle VerifyImpactAssessmentOutput_CannotRaiseRiskAssessment_ForCC

CreateButtonNotAvailable_RiskAssessment

end VerifyImpactAssessmentOutput_CannotRaiseRiskAssessment_ForCC

to handle OpenCC_PendingFunctionApproval_ByFA_Second

SearchRecord

end OpenCC_PendingFunctionApproval_ByFA_Second

to handle VerifyImpactAssessmentOutput_CannotRaiseRiskAssessment_ForFA

CreateButtonNotAvailable_RiskAssessment

end VerifyImpactAssessmentOutput_CannotRaiseRiskAssessment_ForFA

to handle SubmitCC_ProgressTo_PendingQualityApproval


SearchRecord
VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
FunctionApprovalOfChangeControl_second
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
//ProgressTo_PendingQualityApproval

end SubmitCC_ProgressTo_PendingQualityApproval

to handle OpenCC_PendingQualityApproval_ByQA

SearchRecord

end OpenCC_PendingQualityApproval_ByQA

to handle SubmitCC_ProgressTo_PendingImplementation

ProgressTo_InImplementation

end SubmitCC_ProgressTo_PendingImplementation

to handle OpenCC_PendingImplemenatation_ByCC

SearchRecord

end OpenCC_PendingImplemenatation_ByCC

to handle ConfirmCC_CanRaiseAndEditRiskAssessment

Navigate_and_CreateRiskAssessment

end ConfirmCC_CanRaiseAndEditRiskAssessment




//E2EQMS-TS004-FP-PL
to handle SearchLead_Inimplementation_2Dependent_Approved

(*SearchRecord
OpenDependentRecord1
OpenDependentRecord2*)

SearchRecord
OpenDependentRecord1
VerifyLifeCycleState "Dependent - Approved"

OpenDependentRecord2
VerifyLifeCycleState "Dependent - Approved"

end SearchLead_Inimplementation_2Dependent_Approved

to handle OpenDependentRecord1

	try
		wait 4
		//	Put "Deviation" into global RecordType
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.3]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText global ChildRecordID1
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		wait 20
		
		if imagefound(text:global ChildRecordID1, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
end OpenDependentRecord1
	
to handle OpenDependentRecord2
	try
		wait 4
		//	Put "Deviation" into global RecordType
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText global ChildRecordID2
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		wait 20
		
		if imagefound(text:global ChildRecordID2, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
End try

end OpenDependentRecord2

to handle OpenLead_Inimplementation_RegressTo_IAAP

ImplementTheChange_IMPACTASSESSMENTACTIONPLANNING

end OpenLead_Inimplementation_RegressTo_IAAP

to handle Verify_2dependent_MoveTo_PreApproved

OpenDependentRecord1
VerifyLifeCycleState "Dependent - Pre-Approved"
OpenDependentRecord2
VerifyLifeCycleState "Dependent - Pre-Approved"

end Verify_2dependent_MoveTo_PreApproved

to handle ProgressLead_From_IAAP_To_Inimplementation_Verify_2dependent_MoveTo_ApprovedState

	SearchRecord
	PrepareImpactAssessmentActionPlan
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	LogOut
	
	LoginToApplication_FA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONAPPROVAL
	FunctionApprovalOfChangeControl
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
	QualityApprovalOfChangeControl
	VerifyLifeCycleState_INIMPLEMENTATION
	LogOut
	
	LoginToApplication_CC
	OpenDependentRecord1
	OpenDependentRecord2

end ProgressLead_From_IAAP_To_Inimplementation_Verify_2dependent_MoveTo_ApprovedState




///E2EQMS-TS003-FP-PL
to handle SearchLead_Inimplementation_3Dependent_Approved

SearchRecord
OpenDependentRecord1
OpenDependentRecord2
OpenDependentRecord3

end SearchLead_Inimplementation_3Dependent_Approved

to handle OpenDependentRecord3
	try
		wait 4
		//	Put "Deviation" into global RecordType
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText global ChildRecordID3
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		wait 20
		
		if imagefound(text:global ChildRecordID3, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
End try

end OpenDependentRecord3

to handle OpenLead_InImplementation_ConfirmUnabletoDeleteDependentCC_InGroup

SearchRecord
Confirm_DependentCC_CannotRemoved

end OpenLead_InImplementation_ConfirmUnabletoDeleteDependentCC_InGroup

to handle OpenDependentCC_ProgressTo_PendingFunctionClosureApproval

OpenDependentRecord1
ImplementTheChange
VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL

end OpenDependentCC_ProgressTo_PendingFunctionClosureApproval

to handle ProgressTo_NotImplemented_VerifyLeadCC_and_DependentCCs

LogOut
LoginToApplication_PFA
OpenDependentRecord1
FunctionApprovalOfCC_Closure_ChangeNotImplemented
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
LogOut
LoginToApplication_QA
OpenDependentRecord1
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
QualityApprovalOfCC_Closure_ChangeNotImplemented
VerifyLifeCycleState_CHANGENOTIMPLEMENTED
SearchRecord
OpenDependentRecord2

end ProgressTo_NotImplemented_VerifyLeadCC_and_DependentCCs

to handle ReturnToLeadCC_ProgressTo_pendingFunctionClosureApproval

LogOut
LoginToApplication_CC
SearchRecord
ImplementTheChange
VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
//OpenDependentRecord2

end ReturnToLeadCC_ProgressTo_pendingFunctionClosureApproval

to handle ConfirmAssociateddependentCCs_MovedTo_DependentPendingClosureApproval

(*LogOut
LoginToApplication_PFA
OpenDependentRecord1
FunctionApprovalOfCC_Closure_ChangeNotImplemented
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
LogOut
LoginToApplication_QA
OpenDependentRecord1
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
QualityApprovalOfCC_Closure_ChangeNotImplemented
VerifyLifeCycleState_CHANGENOTIMPLEMENTED
OpenDependentRecord2
VerifyLifeCycleState_CHANGENOTIMPLEMENTED*)

OpenDependentRecord1
VerifyLifeCycleState "Dependent - Approved"
OpenDependentRecord2
VerifyLifeCycleState "Dependent - Approved"
OpenDependentRecord3
VerifyLifeCycleState "Dependent - Approved"
end ConfirmAssociateddependentCCs_MovedTo_DependentPendingClosureApproval

to handle CompleteByFAandQA_To_ClosedNotImplemented_VerifyDependentCCs
	LogOut

	LoginToApplication_PFA
	SearchRecord
	FunctionApprovalOfCC_Closure_ChangeNotImplemented
	VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
	Logout
	LoginToApplication_QA
	SearchRecord
	QualityApprovalOfCC_Closure_ChangeNotImplemented
	VerifyLifeCycleState_CHANGENOTIMPLEMENTED
	
	
	OpenDependentRecord1
	VerifyLifeCycleState_CHANGENOTIMPLEMENTED	
	OpenDependentRecord2
	VerifyLifeCycleState_CHANGENOTIMPLEMENTED
	OpenDependentRecord3
	VerifyLifeCycleState_CHANGENOTIMPLEMENTED
	Logout
end CompleteByFAandQA_To_ClosedNotImplemented_VerifyDependentCCs


//E2EQMS-TS002-FP-PL
to handle Search3Lead_DraftState

	Put "Change Control Lead Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID1 is"&global ChildRecordID  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID2 is"&global ChildRecordID2  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID3 is"&global ChildRecordID3  into global Vstep
	Log global Vstep

end Search3Lead_DraftState

to handle SelectOneAsLead_Other2DependentInGroup_AssignCC_As_SameUser_IAAP

//SearchRecord
NavigateToSectionFromLeftPane "Dependent Change Control"
wait 3
Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

click ImageLocation(text:"Dependent Change",searchrectangle:ScreenPart("Center"))+[100,0]
	wait 2
	Typetext global ChildRecordID1
	Typetext downArrow
	Typetext return
click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:global ChildRecordID1, waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Dependent Change Control Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Dependent Change Control Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	ScrollWheelUp 50

NavigateToSectionFromLeftPane "Dependent Change Control"
wait 3
Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

click ImageLocation(text:"Dependent Change",searchrectangle:ScreenPart("Center"))+[100,0]
	wait 2
	Typetext global ChildRecordID2
	Typetext downArrow
	Typetext return
click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:global ChildRecordID2, waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Dependent Change Control Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Dependent Change Control Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	ScrollWheelUp 50
	
AssignUser_Teams_CC
LogOut

end SelectOneAsLead_Other2DependentInGroup_AssignCC_As_SameUser_IAAP

to handle ProgressLead_From_IAAP_To_PendingFunctionClosureApprovalState

LoginToApplication_CC
SearchRecord
AssignUser_Teams_FA
AssignUser_Teams_QA
PrepareImpactAssessmentActionPlan_CCPL
VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL

end ProgressLead_From_IAAP_To_PendingFunctionClosureApprovalState

to handle Verify_2dependent_MoveTo_DependentPendingClosureApprovalState

OpenDependentRecord1
OpenDependentRecord2

end Verify_2dependent_MoveTo_DependentPendingClosureApprovalState

to handle ProgressLead_PendingFunctionClosureApproval_To_ClosedNotProgressed

LogOut
LoginToApplication_FA
SearchRecord
VerifyLifeCycleState_PENDINGFUNCTIONCLOSUREAPPROVAL
FunctionApprovalOfCC_Closure_ChangeNotProgressed
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
LogOut
LoginToApplication_QA
SearchRecord
VerifyLifeCycleState_PENDINGQUALITYCLOSUREAPPROVAL
QualityApprovalOfCC_Closure_ChangeNotProgressed_CCPL
VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED

end ProgressLead_PendingFunctionClosureApproval_To_ClosedNotProgressed

to handle Verify_2dependent_MoveTo_ClosedNotProgressed

OpenDependentRecord1
VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED
OpenDependentRecord2
VerifyLifeCycleState_CLOSEDCHANGENOTPROGRESSED

end Verify_2dependent_MoveTo_ClosedNotProgressed




//E2EQMS-TS001-DR-PL-CC
to handle AssignQA_PartOfQAGroup

AssignUser_Teams_QA

end AssignQA_PartOfQAGroup

to handle Location_Title_ofFA_Visible

LoginToApplication_CC
SearchRecord
CC_FunctionApprover_Title_status

end Location_Title_ofFA_Visible

to handle Assign_3FA_withDifferentAccounts

Assign_3FunctionApprovers

end Assign_3FA_withDifferentAccounts

to handle AssignedFAandFPA_asDifferentToCC

AssignUser_Teams "Nutrition CC 1 UAT Change Coordinator","Function Approver" 
	
AssignUser_Teams "Nutrition CC 1 UAT Change Coordinator","Function Post-Approver"

end AssignedFAandFPA_asDifferentToCC

to handle VerifyError_For_IfAssignCCasFAorFPA
	
LogOut
LoginToApplication_CC
SearchRecord	
PrepareImpactAssessmentActionPlan
VerifyErrorPromptToAssignFunctionApprover

end VerifyError_For_IfAssignCCasFAorFPA

to handle Location_Title_ofQA_Visible

VerifyQA_CC_Title

end Location_Title_ofQA_Visible

to handle AssignQA_NotPartOfQAGroup

Assign_NonQA_AsQualityApprover

end AssignQA_NotPartOfQAGroup

to handle FillOtherDetails_ProductLocation

AddProduct_Location

end FillOtherDetails_ProductLocation

to handle Location_Title_ofCC_Visible

VerifyCC_Title

end Location_Title_ofCC_Visible

to handle AssignCC_PartOfCCGroup

AssignUser_Teams_CC

end AssignCC_PartOfCCGroup

to handle AssignCC_NotPartOfCCGroup

VerifyAssign_CC_Unkonwn

end AssignCC_NotPartOfCCGroup

to handle RaiseNewProductCC_Draft

Put "Change Control Record ID is"&the suitevariables.RecordId  into global Vstep
Log global Vstep

end RaiseNewProductCC_Draft

to handle LaunchAndLoginToApplication_Originator_PL

	PreExecution
	ChangeControlPLUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_Originator
	
end LaunchAndLoginToApplication_Originator_PL

to handle LaunchAndLoginToApplication_CC_PL

	PreExecution
	ChangeControlPLUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_CC
	
end LaunchAndLoginToApplication_CC_PL

to handle LaunchAndLoginToApplication_QA_PL

	PreExecution
	ChangeControlPLUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_QA
	
end LaunchAndLoginToApplication_QA_PL

to handle LaunchAndLoginToApplication_PFA_PL

	PreExecution
	ChangeControlPLUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_PFA
	
end LaunchAndLoginToApplication_PFA_PL

to handle LaunchAndLoginToApplication_FA_PL

	PreExecution
	ChangeControlPLUATFetchingData
	ConnectToSUT
	LaunchApplication
	LoginToApplication_FA
	
end LaunchAndLoginToApplication_FA_PL




//E2EQMS-TS001-FP-PL
to handle 4SKU_ProductCCRecords_AreInDraft

Put "Change Control Lead Record ID is"&the suitevariables.RecordId  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID1 is"&global ChildRecordID  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID2 is"&global ChildRecordID2  into global Vstep
	Log global Vstep
	
	Put "Change Control Dependent Record ID3 is"&global ChildRecordID3  into global Vstep
	Log global Vstep

end 4SKU_ProductCCRecords_AreInDraft

to handle ConfirmLeadanddependentCC_FieldsAreIn_GeneralInfo

SearchRecord
NavigateToSectionFromLeftPane "General Information"

put ReadText(topRight of ImageRectangle(text:"Lead CC"),ImageLocation(text:"Lead CC")+[300,30]) into LeadCCNo
put ReadText(topRight of ImageRectangle(text:"Dependent CC"),ImageLocation(text:"Dependent CC")+[300,30]) into DependentCCNo
	
	if LeadCCNo is "No" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if
	
	if DependentCCNo is "No" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if

end ConfirmLeadanddependentCC_FieldsAreIn_GeneralInfo

to handle ExpandDependentCCSection_VerifyCreateButton

NavigateToSectionFromLeftPane "Dependent Change Control"
CreateButtonAvailable

end ExpandDependentCCSection_VerifyCreateButton

to handle ClickCreate_VerifyLeadandDependentCC

Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

	if imagefound(text:the suitevariables.RecordId, waitFor:10,SearchRectangle:ScreenPart("Center"))
			
			put "Lead Change Control is pre populated" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else 
			put "Lead Change Control is not pre populated" into global Vstep
			Log global Vstep
			CaptureAtLog
						
		end if

end ClickCreate_VerifyLeadandDependentCC

to handle In_DependentCCField_VerifyTheRecords

Click imageName:"Snoolbar", waitFor:60
wait 5
put "Dependent Change Control popup displayed" into global Vstep
	Log global Vstep
	CaptureAtLog

end In_DependentCCField_VerifyTheRecords

to handle SelectOneCC_and_Save

click imagelocation(text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf"))+[0,25]
Typetext global ChildRecordID
Typetext return
wait 4
click imagelocation(text:"Record ID",SearchRectangle:ScreenPart("Center"))+[0,31]
wait 2
click imagelocation(text:"Close",waitfor:120,searchrectangle:ScreenPart("BottomHalf"))
wait 4
click item 2 of EveryImageLocation(text:"Save",waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant"))

end SelectOneCC_and_Save

to handle RefreshBrowser_LeadCCFieldasYes

TypeText F5
NavigateToSectionFromLeftPane "General Information"

put ReadText(topRight of ImageRectangle(text:"Lead CC"),ImageLocation(text:"Lead CC")+[300,30]) into LeadCCYes
	
	if LeadCCYes is "Yes" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if

end RefreshBrowser_LeadCCFieldasYes

to handle In_DependentCCSection_VerifyTheFields

OpenChildRecord_withRecordIDReference

if imagefound(text:"Lead Change Control", waitFor:10,SearchRectangle:ScreenPart("Center")) and if imagefound(text:"Dependent Change Control", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"SKU Number", waitFor:10,SearchRectangle:ScreenPart("Center")) and if imagefound(text:"Product Description", waitFor:10,SearchRectangle:ScreenPart("Center")) and if imagefound(text:"Market Sold", waitFor:10,SearchRectangle:ScreenPart("Center"))
			
	put "Fields are displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
	Click FoundImageLocation()
else 
	put "Fields are not displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
						
end if

VerifyLifeCycleState "Dependent"

end In_DependentCCSection_VerifyTheFields

to handle OpenDependentCC_IsIn_DependentPreapproved

click ImageLocation(text:"Dependent Change Control",searchrectangle:ScreenPart("LeftHalf"))+[70,0]
wait 5
VerifyLifeCycleState "Dependent"

end OpenDependentCC_IsIn_DependentPreapproved

to handle LeadCCNo_DependentCCyes

NavigateToSectionFromLeftPane "General Information"

put ReadText(topRight of ImageRectangle(text:"Dependent CC"),ImageLocation(text:"Dependent CC")+[300,30]) into DependentCCYes
	
	if DependentCCYes is "Yes" then
		
		put "Value displayed as expected" into global Vstep
		
		Log global Vstep
		CaptureAtLog
	else 
		put "Value not displayed as expected" into global Vstep
		LogError global Vstep
		
		CaptureAtLog
		
	end if

end LeadCCNo_DependentCCyes

to handle LocateLeadCC_VerifyDependencyState

NavigateToSectionFromLeftPane "Lead Change Control"
OpenChildRecord_withRecordIDReference
VerifyLifeCycleState "Dependent"

end LocateLeadCC_VerifyDependencyState

to handle VerifySections_NonEditable_inDependentPreApproved

click ImageLocation(text:"Dependent Change Control",searchrectangle:ScreenPart("LeftHalf"))+[70,0]
wait 5

if imagefound(text:"General Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Affected Location Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Impacted Product Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Key Milestones", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Record Details", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
			
	put "Sections are displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
	Click FoundImageLocation()
else 
	put "Sections are not displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
						
end if

end VerifySections_NonEditable_inDependentPreApproved

to handle OpenOtherCC_ProgressTo_IAAP

OpenDependentRecord2
AssignUser_Teams_CC

end OpenOtherCC_ProgressTo_IAAP

to handle ReturnToLeadCC_VerifyLeadCC_hasTworecords

SearchRecord

NavigateToSectionFromLeftPane "Dependent Change Control"
wait 3
Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

click ImageLocation(text:"Dependent Change Control",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
	wait 2
	Typetext global ChildRecordID2
	
click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:global ChildRecordID2, waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Dependent Change Control Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Dependent Change Control Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	ScrollWheelUp 50

end ReturnToLeadCC_VerifyLeadCC_hasTworecords

to handle ConfirmCC_RegressedTo_DependentpreApproved

OpenDependentRecord2
VerifyLifeCycleState "Dependent"

end ConfirmCC_RegressedTo_DependentpreApproved

to handle Confirm_MentionedSections_VisibleForCC

if imagefound(text:"General Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Affected Location Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Impacted Product Information", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Key Milestones", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Record Details", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Site Area(s) & Sub-Area(s)", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Attachments", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Associated Records", waitFor:10,SearchRectangle:ScreenPart("LeftHalf")) and if imagefound(text:"Lead Change Control", waitFor:10,SearchRectangle:ScreenPart("LeftHalf"))
			
	put "Sections are displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
	Click FoundImageLocation()
else 
	put "Sections are not displayed as expected" into global Vstep
	Log global Vstep
	CaptureAtLog
						
end if

end Confirm_MentionedSections_VisibleForCC

to handle OpenFourthCC_VerifyCCPL_InDraft

OpenDependentRecord3
NavigateToSectionFromLeftPane "Dependent Change Control"
wait 3
Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

click ImageLocation(text:"Dependent Change Control",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
	wait 2
	Typetext the suitevariables.RecordId
	
//click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:"No matches Found", waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Dependent Change Control Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Dependent Change Control Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
wait 5

Click text:"Cancel", waitFor:120,searchRectangle:ScreenPart("BottomRightQuadrant")
	
end OpenFourthCC_VerifyCCPL_InDraft

to handle ReturnLeadCC_AssignCC_progressToIAAP_NavigateDependentCC

SearchRecord

NavigateToSectionFromLeftPane "Dependent Change Control"
wait 3
Click text:"Create", waitFor:120,searchRectangle:ScreenPart("TopLeftQuadrant")
WaitFor 30, text:"Create Change Control Dependency",searchrectangle:ScreenPart("Center")

click ImageLocation(text:"Dependent Change Control",searchrectangle:ScreenPart("TopRightQuadrant"))+[100,0]
	wait 2
	Typetext global ChildRecordID3
	
click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
		
		wait 3
		if ImageFound(text:global ChildRecordID3, waitFor:120,SearchRectangle:ScreenPart("Center"))
			Put "Dependent Change Control Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Dependent Change Control Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
	ScrollWheelUp 50

end ReturnLeadCC_AssignCC_progressToIAAP_NavigateDependentCC

to handle PossibleToRemove_DependentCC_AlsoRemovesSection

NavigateToSectionFromLeftPane "Dependent Change Control"
OpenChildRecord_withRecordIDReference
wait 5
Click imageName:"CogWheelNew", waitFor:120

if ImageFound(text:"Delete", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "Dependent Change Control can be deleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
	else
			Put "Dependent Change Control can not be deleted" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	end if

end PossibleToRemove_DependentCC_AlsoRemovesSection

to handle OpenCC_ConfirmLeadandDependentCCReset

OpenDependentRecord1
NavigateToSectionFromLeftPane "General Information"

end OpenCC_ConfirmLeadandDependentCCReset

to handle ReturnLeadCC_progressToIAAP_NavigateDependentCC

ProgressFrom_IAandAP_ToPendingFunctionApproval
LogOut
LoginToApplication_FA
ProgressTo_PendingQualityApproval
LogOut

end ReturnLeadCC_progressToIAAP_NavigateDependentCC

to handle VerifyDependentCCRecords_In_dependentPreApproved

OpenDependentRecord2
OpenDependentRecord3

end VerifyDependentCCRecords_In_dependentPreApproved

to handle CompleteApproval_ProgressLeadCC_To_InImplementation

LoginToApplication_CC
SearchRecord
QualityApprovalOfChangeControl_InImplementation
OpenDependentRecord2
OpenDependentRecord3

end CompleteApproval_ProgressLeadCC_To_InImplementation

to handle ExpandDependentCCSection_VerifyCreateButtonNotAvailable

SearchRecord
NavigateToSectionFromLeftPane "Dependent Change Control"
CreateButtonNotAvailable

end ExpandDependentCCSection_VerifyCreateButtonNotAvailable

to handle Confirm_DependentCC_CannotRemoved
NavigateToSectionFromLeftPane "Dependent Change Control"
OpenChildRecord_withRecordIDReference
wait 5
Click imageName:"CogWheelNew", waitFor:120

if ImageFound(text:"Delete", waitFor:120,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put "Dependent Change Control can be deleted" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
	else
			Put "Dependent Change Control can not be deleted" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
end if

end Confirm_DependentCC_CannotRemoved

to handle CloseLeadCC_ProgressTo_ClosedImplemented_VerifyDependentCC

	LogOut
	
	LoginToApplication_ActionOwner
	SearchRecord 
	OpenRecord_IA_WORKINPROGRESS
	VerifyLifeCycleState_WORKINPROGRESS
	ImplementationActionTobeCompleted
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut
	
	LoginToApplication_CC
	SearchRecord
	VerifyLifeCycleState_CHANGECOORDINATORREVIEW
	ImplementTheChange
	ReviewTheImplementationOfTheChange
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	LogOut
	
	LoginToApplication_PFA
	SearchRecord
	VerifyLifeCycleState_PENDINGFUNCTIONPOSTAPPROVAL
	FAFinalApproval
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	LogOut
	
	LoginToApplication_QA
	SearchRecord
	VerifyLifeCycleState_PENDINGQUALITYPOSTAPPROVAL
	QualityPostApprovalOfChangeControl
	VerifyLifeCycleState_CLOSEDIMPLEMENTED
	LogOut

end CloseLeadCC_ProgressTo_ClosedImplemented_VerifyDependentCC


//Dev New
to handle VerifyIndicationStatus_AsRed LeftMenuTab
	try
		click text:LeftMenuTab,searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]

		waitfor 50,text:"ICON",seaechrectangle:ScreenPart("Center")
		if imagefound(image:"RedIndicationStatus",searchrectangle:(bottomleft of imagerectangle(text:"ICON"),bottomleft of imagerectangle(text:"ICON")+(150,140))) //take image RedIndicationStatus
			put "The Object Indication Status displayed in Red" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog
		else
			put "The Object Indication Status not displayed in Red" into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
		end if 
		
	Catch theException
		
		Log theException
		
		CaptureAtLog
		
		
	End try
end VerifyIndicationStatus_AsRed
//
to handle VerifySKUProductIndicationStatus_AsRed
	VerifyIndicationStatus_AsRed "Impacted product Information"
end VerifySKUProductIndicationStatus_AsRed

//
to handle VerifyFormulationDeviceIndicationStatus_AsRed
	VerifyIndicationStatus_AsRed "Formulation"
end VerifyFormulationDeviceIndicationStatus_AsRed
//
to handle VerifySemiFinishedMaterialIndicationStatus_AsRed
	VerifyIndicationStatus_AsRed "Semi-Finished Material"
end VerifySemiFinishedMaterialIndicationStatus_AsRed
//
to handle VerifyRawMaterialIndicationStatus_AsRed
	VerifyIndicationStatus_AsRed "Raw Material"
end VerifyRawMaterialIndicationStatus_AsRed

//
to handle VerifyPackagingMaterial_Menu_Unavailable
	if imagefound(text:"Packaging Material",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]])
		put "Packaging Material object is not hidden" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
	else
		put "Packaging Material object is hidden" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
	end if
end VerifyPackagingMaterial_Menu_Unavailable


//

to handle VerifyIndicationStatus_AsGreen
	try
		
		
		waitfor 50,text:"ICON",seaechrectangle:ScreenPart("Center")
		if imagefound(image:"GreenIndicationStatus",searchrectangle:(bottomleft of imagerectangle(text:"ICON"),bottomleft of imagerectangle(text:"ICON")+(150,140))) ////take image GreenIndicationStatus
			put "The Object Indication Status displayed in Green" into global Vstep
			
			Log global Vstep
			
			CaptureAtLog
		else
			put "The Object Indication Status not displayed in Green" into global Vstep
			
			Logerror global Vstep
			
			CaptureAtLog
		end if 
		
	Catch theException
		
		Log theException
		
		CaptureAtLog
		
		
	End try
end VerifyIndicationStatus_AsGreen
to handle Remove_ProductObject_RedStatus
	try
		waitfor 10,image:"RedIndicationStatus",searchrectangle:(bottomleft of imagerectangle(text:"ICON"),bottomleft of imagerectangle(text:"ICON")+(150,140))
		
		Moveto imagelocation(image:"RedIndicationStatus",searchrectangle:[bottomleft of imagerectangle(text:"ICON"),bottomleft of imagerectangle(text:"ICON")+[150,140]])+[-155,0]
		
		wait 1
		click image:"SettingsIconSection",searchrectangle:[bottomleft of imagerectangle(text:"ICON")+[-200,0],bottomleft of imagerectangle(text:"ICON")+[0,400]]
		
		click text:"Delete",searchrectangle:[bottomleft of imagerectangle(text:"ICON")+[-200,0],bottomleft of imagerectangle(text:"ICON")+[200,400]]

		waitfor 30,text:"Delete Record",searchrectangle:ScreenPart("Center")
		click image:"continue",searchrectangle:ScreenPart("Center")
		wait 2
		if imagefound(image:"RedIndicationStatus",searchrectangle:ScreenPart("Center"))
			put "The Record Object is not removed from the list" into global Vstep
			
			
			Logerror global Vstep
			CaptureAtLog
		else
			put "The Record Object removed from the list" into global Vstep
			
			
			Log global Vstep
			CaptureAtLog
		end if
	Catch theException
		
		Log theException
		
		CaptureAtLog
		
		
	End try
end Remove_ProductObject_RedStatus

//
to handle NavigateToImpactedProductInformationSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Impacted product Information"
	
end NavigateToImpactedProductInformationSection

to handle NavigateToFormulationsDevicesSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Formulation"
	
end NavigateToFormulationsDevicesSection

to handle NavigateToSemiFinishedMaterialSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Semi-Finished Material"
	
end NavigateToSemiFinishedMaterialSection

to handle NavigateToRawMaterialSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Raw Material"
	
end NavigateToRawMaterialSection

to handle NavigateToPackagingMaterialSection
	W_App_CommonHandlers.NavigateToSectionFromLeftPane "Packaging Material"
	
end NavigateToPackagingMaterialSection


to handle Add_ProductObject
	try
		Click text:"Add", waitFor:30,SearchRectangle:[RemoteScreenSize()*[0.15,0.2],RemoteScreenSize()]
		
		
		WaitFor 70, text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf")
		
		
		Put "Search Product or Object popup displayed" into global Vstep
		
		
		Log global Vstep
		
		
		CaptureAtLog
		click imagelocation(text:"Code",SearchRectangle:ScreenPart("Center"))+[0,31]
		
		
		wait 2
		
		click imagelocation(text:"Cancel",waitfor:50,searchrectangle:ScreenPart("BottomHalf"))+[40,0] 
		
		wait 4
		
		WaitFor 30,text:"Add",SearchRectangle:[RemoteScreenSize()*[0.15,0.2],RemoteScreenSize()]
		waitfor 30,image:"GreenIndicationStatus",searchrectangle:[bottomleft of imagerectangle(text:"ICON"),bottomleft of imagerectangle(text:"ICON")+[150,140]]		
		Put "Product or Object added successfully and Indication Status displayed in Green" into global Vstep
		
		
		Log global Vstep
		
		CaptureAtLog
		
	Catch theException
		
		Log theException
		CaptureAtLog
		
	End try
	
end Add_ProductObject


to handle VerifyErrorToRemoveProductObject
	try
		
		waitfor 30,text:"Error",searchrectangle:ScreenPart("Center")
		
		if imagefound(text:"Validate that: Product Information Section"&newline&"equals the valid Product / Material / Brand"&newline&"Specific field in General Information and"&newline&"Remove any objects highlighted as errors",searchrectangle:ScreenPart("Center"))
			Put "Error message displayed and stating that to remove any objects highlighted as errors" into global Vstep
			Log global Vstep
			
			CaptureAtLog
			
			Click image:"OKButtonPopup",searchrectangle:ScreenPart("Center")
		else
			Put "Error message not displayed and not stating that to remove any objects highlighted as errors" into global Vstep
			
			
			Logerror global Vstep
			
			
			CaptureAtLog
			
		end if
		
	Catch theException
		
		
		Log theException
		
		
		CaptureAtLog
		
	End try
end VerifyErrorToRemoveProductObject




//E2EQMS-TS024-FP-DV
to handle CreateReferenceRecord_Dev
	CreateReferenceRecord "Deviation"
end CreateReferenceRecord_Dev

to handle OpenDevReference_ConfirmRelatedLink

NavigateToSectionFromLeftPane "Associated Records"
OpenChildRecord_withReferenceObject
//ConfirmRelatedLink

	put ReadText(topRight of ImageRectangle(text:"Related Deviation",searchrectangle:ScreenPart("TopLeftQuadrant"))+[0,-5],ImageLocation(text:"Related Deviation",searchrectangle:ScreenPart("TopLeftQuadrant"))+[300,30]) into existingId
		Log existingId
		if existingId is not ""
			click ImageLocation(text:"Related Deviation",searchrectangle:ScreenPart("TopLeftQuadrant"))+[70,0]
			put "Related Deviation available" into global Vstep
			Log global Vstep
			CaptureAtLog
			wait 3
			
			
			//Set the searchrectangle to []
			WaitFor 20, text:"Record Id"
			if ImageFound(text:existingId, waitFor:10) or if imagefound(text:"Related Deviation",searchrectangle:ScreenPart("TopLeftQuadrant"))
				put "Related Deviation details page is  displaing" into global Vstep
				Log global Vstep
				CaptureAtLog
			else
				put "Related Deviation details page is not  displaing" into global Vstep
				LogError global Vstep
				CaptureAtLog
			end if
		else
			put "Related Deviation not available" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if

end OpenDevReference_ConfirmRelatedLink

to handle SearchRecord_AssignDC

SearchRecord
AssignUser_Teams_DeviationCoordinator
VerifyLifeCycleState_INPROGRESS

end SearchRecord_AssignDC

to handle NavigateInvestigationSummary_VerifyRepeatOccurance

NavigateToInvestigationSummary
VerifyRepeatOccurance

end NavigateInvestigationSummary_VerifyRepeatOccurance

//OpenChildRecord_withReferenceObject
to handle OpenChildRecord_withReferenceObject
	try
		waitfor 50,text:"Show in tab",Searchrectangle:ScreenPart("TopHalf")
		
		if imagefound(text:"Reference Object ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			click imagelocation(text:"Reference Object ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))+[-9,38]
			
			wait 2
			waitfor 50,text:"Details",Searchrectangle:ScreenPart("TopLeftQuadrant")
			Put "Child records Details page displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Child records are not availablein the section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
end OpenChildRecord_withReferenceObject

to handle VerifyRepeatOccurance

click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
WaitFor 30, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("LeftHalf")

	if imagefound(imageName:"RepeatOccuranceNo",Searchrectangle:ScreenPart("LeftHalf"))
		Put "Repeat Occurance is displayed as No" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Repeat Occurance is not displayed as No" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if

end VerifyRepeatOccurance

to handle EditRepeatOccurance

click text:"Yes",SearchRectangle:ScreenPart("Center")
click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")

end EditRepeatOccurance

to handle EditRepeatOccurance_CreateReferenceObj_withNewDev

EditRepeatOccurance
CreateReferenceRecord_DevNew

end EditRepeatOccurance_CreateReferenceObj_withNewDev

to handle CreateReferenceRecord_DevNew

	try
		
		NavigateToSectionFromLeftPane "Associated Records"
		wait 3
		click text:"Create",waitfor:30,SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 50, text:"Create Change Control Reference Object",SearchRectangle:ScreenPart("Center")
		
		click  imagelocation(text:"Reference Object Type",waitfor:50,SearchRectangle:ScreenPart("Center"))+[200,0]
		
		Typetext Reference_object_type
		wait 2
		Typetext downArrow,return
		wait 2
		
		Typetext tabKey
		Typetext"testing"
		
		Click imageName:"RelatedProcess", waitFor:20
		wait 7
		Typetext downArrow
		Typetext downArrow,downArrow, return
		wait 2
		TypeText controlKey,a
		TypeText controlKey,c
		Put RemoteClipboard() into global relatedRecordId
		//Log global relatedRecordId
		
		
		click item 2 of everyimagelocation(text:"Save",waitfor:20,SearchRectangle:ScreenPart("BottomRightQuadrant"))
		wait 2
		
		if ImageFound(text:"Reference Object Type", waitFor:20,SearchRectangle:ScreenPart("Center"))
			Put "ReferenceObjectAddedSuccessfully"&global relatedRecordId into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "ReferenceObjectIsNotAddedSuccessfully"&global relatedRecordId into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
		
		ScrollWheelUp 50
		wait 2
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try

end CreateReferenceRecord_DevNew


//E2EQMS-TS052-FP-DV
to handle AssignUser_DCAndQA

AssignUser_Teams_DeviationCoordinator
AssignUser_Teams_QA
VerifyLifeCycleState_INPROGRESS

end AssignUser_DCAndQA

to handle SearchRecord_Dev_InProgress_PendingQuality_withoutImpactedProduct

	SearchRecord	
	VerifyLifeCycleState_INPROGRESS	
	NavigateToRootCauseIdentified	
	CreateRootCausesIdentified
	
	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord
	
	NavigateToCapaRequirements
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	NavigateToCapaItems
	CreateCapaItem
	
	NavigateToInvestigationSummary	
	EditInvestigationSummary	
	NavigateToAffectedLocationInformation	
	CreateAffectedLocationInformation	
	(*Add_ImpactedProduct*)	
	CompleteInvestigationRCAActionPlan	
		
end SearchRecord_Dev_InProgress_PendingQuality_withoutImpactedProduct

to handle VerifyErrorPrompt_ToCreateImpactedProduct

	if ImageFound(text:"Validate that: NCRs-Products: At least one", waitFor:20,searchrectangle:ScreenPart("Center")) and if ImageFound(text:"record exists", waitFor:20,searchrectangle:ScreenPart("Center"))
		Put "ErrorPupupDisplayedAsExpected" into global Vstep
		Log global Vstep
		CaptureAtLog
		
		
	else
		Put "ErrorPupupNotDisplayedAsExpected" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	try
		wait 2
		Click imageName:"OKButtonPopup", waitFor:10
		
	Catch theException
		LogError theException
		CaptureAtLog
		//
	End try

end VerifyErrorPrompt_ToCreateImpactedProduct

to handle CreateImpactedProduct_ProgressToPendingQuality

Add_ImpactedProduct
CompleteInvestigationRCAActionPlan
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end CreateImpactedProduct_ProgressToPendingQuality

to handle SearchRecord_ProgressPendingQuality_ToInProgress

SearchRecord
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
Dev_PendingQualityApproval_Task
VerifyLifeCycleState_INPROGRESS

end SearchRecord_ProgressPendingQuality_ToInProgress

to handle SearchRecord_Edit_BrandSpecific_NotProduct_ProgressToPendingQuality

SearchRecord
Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct
CompleteInvestigationRCAActionPlan
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end SearchRecord_Edit_BrandSpecific_NotProduct_ProgressToPendingQuality

to handle Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct

	Edit_CC_GeneralInformation "Brand Specific","Not Product / Material / Brand Specific"
	
end Edit_CC_GeneralInformation_BrandSpecific_BrandNotProduct


//E2EQMS-TS039-FP-DV
to handle CreateMitigation_AssignAO_InProgress

NavigateToMitigationAction
CreateMitigationActions
OpenRecord_Draft 
VerifyLifeCycleState_Draft
AssignUser_Teams_MAActionOwner
VerifyLifeCycleState_INPROGRESS

end CreateMitigation_AssignAO_InProgress

to handle ReassignAO_WhenMAIsInProgressState
	W_App_CommonHandlers.ReassignTaskToOtherUser "Nutrition DEV 2 UAT Action Owner"
end  ReassignAO_WhenMAIsInProgressState

to handle LogOut_LoginToApplication_ReassignNewAO

LogOut
LoginToApplication_ActionOwner
SearchRecord
VerifyLifeCycleState_INPROGRESS
ReassignAO_WhenMAIsInProgressState

end LogOut_LoginToApplication_ReassignNewAO

to handle VerifyAO_FunctionAndLocation


end VerifyAO_FunctionAndLocation

to handle VerifyNotification_ForReassign_ToNewAO

end VerifyNotification_ForReassign_ToNewAO


//E2EQMS-TS041b-FP-CI
to handle VerifyNewDateIn_GeneralInformation

	NavigateToSectionFromLeftPane"General Information"
	if ImageFound(text: global NewDateDue, waitFor:30,searchrectangle:[ImageLocation(text:"Date Due")+[-125,-10],ImageLocation(text:"Date Due")+[180,200]])
		put "DateDueExtensionUpdatedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		
	else
		put "DateDueExtensionUpdatedUnSuccessfully" into global Vstep
		LogError global Vstep
		CaptureAtLog
	end if
	
ScrollWheelUp 20
	
end VerifyNewDateIn_GeneralInformation

to handle FromLogin_ActionOwner_CreateDateDueExtension_LogOut

LoginToApplication_ActionOwner
//SearchRecord
	try
		wait 4
		//	Put "Deviation" into RecordId
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText RecordId
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		
		
		if imagefound(text:RecordId, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try

VerifyLifeCycleState_ClosedApproved
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS
CreateDateDueExtension_VerifyError_ToFillMandatoryFields
CreateDateDueExtension_FillMandatoryFields
VerifyNewDateIn_GeneralInformation
LogOut

end FromLogin_ActionOwner_CreateDateDueExtension_LogOut



//E2EQMS-TS051-DR-DV
to handle SelectingQMSProcess_VerifyAffectedLocationFieldValues

SelectingQMSProcess
VerifyAffectedLocationFieldValues

end SelectingQMSProcess_VerifyAffectedLocationFieldValues


to handle CreateDev_withAffectedLocationTypeValues

	try			
		
		Click imagelocation(text:"Title", waitFor:50,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Site"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
		(*	Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationImpactedLocation
Click ImageLocation(text:"Impacted Location",SearchRectangle:ScreenPart("Center"))+[240,50]

//regulatory classification class required Regulatory Classification
Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[200,0]
Typetext global DeviationRegulatoryClassification
Click ImageLocation(text:"Regulatory Classification",SearchRectangle:ScreenPart("Center"))+[240,28]*)
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "SKU"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try

end CreateDev_withAffectedLocationTypeValues

to handle VerifySiteAreaSection_CreateSiteObject

NavigateToSectionFromLeftPane "Site Area(s) & Sub-Area(s)"

try

	wait 3
	click text:"Create",waitfor:30,SearchRectangle:ScreenPart("TopLeftQuadrant")
	click ImageLocation(text:"Site",searchrectangle:ScreenPart("Center"))+[100,0]
	wait 2
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("BottomHalf"))
	
	if ImageFound(text:"Show in Tab", waitFor:50)
			Put"Site Area added successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Site Area added not successfully" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if

	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
		

end VerifySiteAreaSection_CreateSiteObject



//E2EQMS-TS001-DR-DV-IA
to handle Navigate_CreateInvestigationAction_VerifyPopup

NavigateToInvestigationAction
CreateInvestigationAction_VerifyPopup

end Navigate_CreateInvestigationAction_VerifyPopup

to handle VerifyFields_VerifyErrorToFillMandatory_Inv

			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Title")
				insert "Title" into MandatoryFields
			else
				insert "Title" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Description")
				insert "Description" into MandatoryFields
			else
				insert "Description" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Date Due")
				insert "Date Due" into MandatoryFields
			else
				insert "Date Due" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 3
				Put "Title, Description and Date Due are displayed" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Title, Description and Date Due are not displayed" into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Title"),topleft of imageRectangle(text:"Title")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Title" into ErrorMessagesDisplayForFields
	else
		insert "Title" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Description"),topleft of imageRectangle(text:"Description")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Description" into ErrorMessagesDisplayForFields
	else
		insert "Description" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Date Due"),topleft of imageRectangle(text:"Date Due")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Date Due" into ErrorMessagesDisplayForFields
	else
		insert "Date Due" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	//Click text:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomHalf")
			

end VerifyFields_VerifyErrorToFillMandatory_Inv

to handle CreateInv_VerifyErrorForSelectingDateDue_MoreThanDev

try

		click ImageLocation(text:"Title",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext "testsd"
		Typetext tabkey
		Typetext"TestDsc"
		
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "30 Sep 2021"
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		
		Put "Investigation Deatails Entered with Date Due more than Deviation " into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		

	if ImageFound(text:"Due Date needs to be before", waitFor:10,searchrectangle:ScreenPart("Center")) and if ImageFound(text:"Deviation Due Date", waitFor:10,searchrectangle:ScreenPart("Center"))
		Click imageName:"Cancel", waitFor:30
		
		Put "Error message displayed for entering Date Due later than Deviation Date Due" into  global Vstep
		Log  global Vstep
		CaptureAtLog
	else
		Put "Error message not displayed for entering Date Due later than Deviation Date Due" into  global Vstep
		LogError  global Vstep
		CaptureAtLog
		//
	end if
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try
	
end CreateInv_VerifyErrorForSelectingDateDue_MoreThanDev

to handle CreateInv_withDateDuebefore_DevDateDue

try
	
	Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext Controlkey,a
		Typetext Backspace 
		Typetext "23 Jul 2021"
	Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
	
	click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
	
	Put "Investigation Action created successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
end try

end CreateInv_withDateDuebefore_DevDateDue

to handle Assign_INVActionOwner_InProgress

AssignUser_Teams_INVActionOwner
VerifyLifeCycleState_INPROGRESS

end Assign_INVActionOwner_InProgress

to handle CreateDateDueExtension_VerifyNewDateIn_GeneralInformation

CreateDateDueExtension_FillMandatoryFields
VerifyNewDateIn_GeneralInformation

end CreateDateDueExtension_VerifyNewDateIn_GeneralInformation

to handle CompleteInv_withoutActionSummary_verifyError

	wait 2
	Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
	WaitFor 30, text:"Complete Investigation Action",searchrectangle:ScreenPart("Center")

			Click text:"Complete Action", waitFor:50,searchRectangle:ScreenPart("Center")
			//Click imagelocation(text:"Investigation Action Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			//wait 2
			//Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Investigation Action without Action Summary" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	Set the searchrectangle to [topleft of imageRectangle(text:"Investigation Action Summary"),topleft of imageRectangle(text:"Investigation Action Summary")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Investigation Action Summary" into ErrorMessagesDisplayForFields
	else
		insert "Investigation Action Summary" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Investigation Action Summary" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for Investigation Action Summary" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if		
		
						
end CompleteInv_withoutActionSummary_verifyError

to handle CompleteInv_withActionSummary

		Click imagelocation(text:"Investigation Action Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			wait 2
			Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Investigation Action with Action Summary" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog

end CompleteInv_withActionSummary

to handle CompleteInv_withActionSummary_LogOut

CompleteInv_withActionSummary
LogOut

end CompleteInv_withActionSummary_LogOut

to handle CreateThirdInv_progresstoinProgress_LogOut

CreateThirdInvestigationActionprogresstoWorkinProgres
LogOut

end CreateThirdInv_progresstoinProgress_LogOut

to handle LoginAO_ProgressInvTo_PendingInfo

	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToInvestigationAction
	OpenRecord_Inprogress
	VerifyLifeCycleState_INPROGRESS
	CompleteInvestigationAction
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	LogOut

end LoginAO_ProgressInvTo_PendingInfo

to handle LogIn_DC_OpenInvRecord_PendingInfo

	LoginToApplication_DC
	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	NavigateToInvestigationAction
	OpenRecord_PENDINGMOREINFORMATION

end LogIn_DC_OpenInvRecord_PendingInfo

to handle VerifyFunction_Location_Title_DC


end VerifyFunction_Location_Title_DC

to handle VerifyFunction_Location_Title_AO_Inv


end VerifyFunction_Location_Title_AO_Inv

to handle VerifyFunction_Location_Title_AO_MA


end VerifyFunction_Location_Title_AO_MA






//E2EQMS-TS001-DR-MA
to handle CompleteMA_withoutActionSummary_verifyError

	try
		wait 2
		Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Complete Mitigation Action",searchrectangle:ScreenPart("Center")
		
		if global CompleteMitigationActionVerdict is "Complete Action"
			Click text:"Complete Action", waitFor:50,searchRectangle:ScreenPart("Center")
			//Click imagelocation(text:"Action Completion Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			//wait 2
			//Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Mitigation Action" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	Set the searchrectangle to [topleft of imageRectangle(text:"Action Completion Summary"),topleft of imageRectangle(text:"Action Completion Summary")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Action Completion Summary" into ErrorMessagesDisplayForFields
	else
		insert "Action Completion Summary" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for Action Completion Summary" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for Investigation Action Summary" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if		
		
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try	
	
end CompleteMA_withoutActionSummary_verifyError

to handle CompleteMA_withActionSummary

		Click imagelocation(text:"Action Completion Summary", waitFor:50,searchRectangle:ScreenPart("Center"))+[0,40]
			wait 2
			Typetext"Test Action Completion Summary"
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "Action Owner Completes Mitigation Action with Action Summary" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog

end CompleteMA_withActionSummary

to handle CompleteMA_withActionSummary_LogOut

CompleteMA_withActionSummary
LogOut

end CompleteMA_withActionSummary_LogOut

to handle CreatesecondMA_ProgresstoWorkinProgress_Logout

	SearchRecord 
	NavigateToMitigationAction
	CreateMitigationActions
	OpenRecord_Draft
	VerifyLifeCycleState_Draft
	//SubmitInvestigationAction
	AssignUser_Teams_INVActionOwner //assignActionowner
	VerifyLifeCycleState_INPROGRESS
	LogOut
	
end CreatesecondMA_ProgresstoWorkinProgress_Logout

to handle LoginAO_OpenSecondMitigationAction

	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_Inprogress
	VerifyLifeCycleState_INPROGRESS
	
end LoginAO_OpenSecondMitigationAction

to handle CreateThirdMA_progresstoinProgress_LogOut

	SearchRecord	
	NavigateToMitigationAction	
	CreateMitigationActions	
	OpenRecord_Draft	
	VerifyLifeCycleState_Draft
	AssignUser_Teams_MAActionOwner	
	VerifyLifeCycleState_INPROGRESS
	LogOut

end CreateThirdMA_progresstoinProgress_LogOut

to handle LoginAO_ProgressMATo_PendingInfo

	LoginToApplication_ActionOwner
	SearchRecord
	NavigateToMitigationAction
	OpenRecord_Inprogress
	VerifyLifeCycleState_INPROGRESS
	CompleteMitigationAction
	VerifyLifeCycleState_PENDINGMOREINFORMATION
	LogOut

end LoginAO_ProgressMATo_PendingInfo

to handle LogIn_DC_OpenMARecord_PendingInfo

	LoginToApplication_DC
	SearchRecord
	VerifyLifeCycleState_INPROGRESS
	NavigateToMitigationAction
	OpenRecord_PENDINGMOREINFORMATION

end LogIn_DC_OpenMARecord_PendingInfo

to handle MA_PendingInfo_Cancel_FillJustificationAndReason_LogOut

MA_PendingInfo_Cancel_FillJustificationAndReason
LogOut

end MA_PendingInfo_Cancel_FillJustificationAndReason_LogOut



//E2EQMS-TS046b-FP-DV
to handle Navigate_EditInvestigationSummary

	NavigateToInvestigationSummary	
	EditInvestigationSummary   //need to check test data in csv file
	
end Navigate_EditInvestigationSummary

to handle Edit_GeneralInformation_RelatesToMedicineField

		NavigateToSectionFromLeftPane "General Information"
		click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
		//Click ImageLocation(text:"Relates to Medicine / Medical Device")+[100,0]
		Click ImageLocation(text:"Yes",SearchRectangle:ScreenPart("RightHalf"))
		Put "Medical Device field is updated successfully" into global Vstep
		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		Click (text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		
		
end Edit_GeneralInformation_RelatesToMedicineField

to handle Edit_GeneralInformation_RelatesToMedicineField_CreateDateDueExtension

Edit_GeneralInformation_RelatesToMedicineField
DateDueExtension_NotUpdatedDateDue
	

end Edit_GeneralInformation_RelatesToMedicineField_CreateDateDueExtension

to handle DateDueExtension_NotUpdatedDateDue

	try
		NavigateToSectionFromLeftPane"General Information"
		put ReadText(topRight of ImageRectangle(text:"Date Due",searchrectangle:ScreenPart("Center")),ImageLocation(text:"Date Due",searchrectangle:ScreenPart("Center"))+[120,25]) into ExistingDateDue
		//Log ExistingDateDue
		split ExistingDateDue by " "
		put item 1 of ExistingDateDue into ExistingDateDue_Day
		//Log ExistingDateDue_Day
		put item 2 of ExistingDateDue into ExistingDateDue_Month
		//Log ExistingDateDue_Month
		put item 3 of ExistingDateDue into ExistingDateDue_Year
		//Log ExistingDateDue_Year
		put ExistingDateDue_Day+1 into NewDateDue_Day
		//Log NewDateDue_Day
		
		put NewDateDue_Day&&ExistingDateDue_Month&&ExistingDateDue_Year into global NewDateDue
		//Log NewDateDue
		// need to impl script to handle date after 28,30,31 feb,...
		
		
		
		NavigateToSectionFromLeftPane"Date Due Amendment"
		click text:"Create",SearchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 50, text:"Justification for",SearchRectangle:ScreenPart("BottomHalf")
		click ImageLocation(text:"Date Due Changed to")+[120,0]
		wait 1
		typetext global NewDateDue
		typetext tabkey
		typetext "delivery timing"
		wait 1
		typetext downArrow
		typetext return
		typetext tabkey
		
		typetext"Test"
		click item 2 of everyimagelocation(text:"Save",searchrectangle:Screenpart("BottomHalf"))
		wait 9
		// Put "29 Mar 2021" into NewDateDue
		click ImageLocation(text:"Date Due Changed to")
		if ImageFound(text:global NewDateDue, waitFor:30,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
			put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
			
		else
			put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
		
		NavigateToSectionFromLeftPane"General Information"
		ScrollWheelUp 50
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try

end DateDueExtension_NotUpdatedDateDue

to handle OpenDateDueExtension_VerifyRedMark

NavigateToSectionFromLeftPane"Date Due Amendment"
OpenDateDueExtension
VerifyLifeCycleState_PendingApproval

		if ImageFound(image:"RedMark", waitFor:50,searchrectangle:ScreenPart("RightHalf")
				Put "Red exclamation mark symbol is displayed on the screen" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
				
			else
				Put "Red exclamation mark symbol is not displayed on the screen" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
	
end OpenDateDueExtension_VerifyRedMark

to handle OpenDateDueExtension

	try
		//Put "In Progress" into State
		Click text:"Record ID",waitFor:30,SearchRectangle:ScreenPart("LeftHalf")
		wait 4
		
		
		//if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
		if ReadText(imageLocation(text:"Record ID")+[-50,15], imageLocation(text:"Record ID")+[156,50]) is not ""
			//"Record details screen should be displayed and"&" life cycle state should be in "&State&" and life cycle stage should be in "&State
			
			click ImageLocation(text:"Record ID")+[-5,30]
			set the  SearchRectangle to []
			wait 2
			//
			
			if ImageFound(text:"General Information",ignoreSpaces:Yes, waitFor:50,searchrectangle:ScreenPart("LeftHalf")
				Put "Date Due Information details page is displayed" into global Vstep
				Log global Vstep
				W_App_CommonHandlers.CaptureAtLog
				
			else
				Put "Date Due Information details page is not displayed" into global Vstep
				LogError global Vstep
				W_App_CommonHandlers.CaptureAtLog
			end if
			
			//
			
		else
			Put state&"Record is not Available" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		
		ScrollWheelUp 50
		
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try

end OpenDateDueExtension

to handle VerifyLifeCycleState_PendingApproval
	VerifyLifeCycleState "Pending Approval"
end VerifyLifeCycleState_PendingApproval

to handle LogOut_LoginAsQA_VerifyDateDueExtensionTask

LogOut
LoginToApplication_QA
NavigateHomePage_VerifyTask_DateDueExtension

end LogOut_LoginAsQA_VerifyDateDueExtensionTask

to handle NavigateHomePage_VerifyTask_DateDueExtension

	NavigateHomePage_VerifyTask "Approve Date Due Amendment Request"
	
end NavigateHomePage_VerifyTask_DateDueExtension

to handle ClickDateDueExtensionHyperLinkfromTaskPage

	try
		click text:"Deviation Date Due Amendment",Searchrectangle:ScreenPart("LeftHalf")
		wait 1
		waitfor 60,text:global TaskName,Searchrectangle:ScreenPart("TopLeftQuadrant")
		put "The Record Id page displayed and the Task available to Complete" into global Vstep
		
		log global Vstep
		CaptureAtLog	
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try

end ClickDateDueExtensionHyperLinkfromTaskPage

to handle CompleteDateDueExtensionTask

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
WaitFor 30, text:"Verdict",searchrectangle:ScreenPart("Center")

	click item 2 of everyimagelocation( text:"Approve",SearchRectangle:ScreenPart("Center"))
		Typetext tabkey
		Typetext"TestingApproved"
		TypeText tabkey
		typetext global QAusername
		TypeText tabkey
		typetext global QApassword
	Click text:"Complete", waitFor:50,SearchRectangle:ScreenPart("BottomHalf")
	

end CompleteDateDueExtensionTask

to handle ClickDateDueExtensionHyperLink_CompleteTask

ClickDateDueExtensionHyperLinkfromTaskPage
CompleteDateDueExtensionTask
VerifyLifeCycleState_ClosedApproved

end ClickDateDueExtensionHyperLink_CompleteTask

to handle OpenDev_VerifyNewDateDue

click ImageLocation(text:"Deviation ID")+[70,0]

NavigateToSectionFromLeftPane"Date Due Amendment"
//click ImageLocation(text:"Date Due Changed to")
	if ImageFound(text:global NewDateDue, waitFor:30,searchrectangle:[ImageLocation(text:"Date Due Changed to")+[-125,0],ImageLocation(text:"Date Due Changed to")+[180,200]])
			put "DateDueExtensionUpdatedeSuccessfully" into global Vstep
			Log global Vstep
			CaptureAtLog
			
	else
			put "DateDueExtensionUpdatedeUnSuccessfully" into global Vstep
			LogError global Vstep
			CaptureAtLog
	end if
	
	ScrollWheelUp 50

end OpenDev_VerifyNewDateDue

to handle LogOut_LoginAsDC_EditSeverityToMajor

LogOut
LoginToApplication_DC

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("RightHalf") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Major"
	wait 1
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("RightHalf") )+[250,30]
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")

end LogOut_LoginAsDC_EditSeverityToMajor

to handle LogOut_LoginAsDC_EditSeverityToMinor

LogOut
LoginToApplication_DC

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("RightHalf") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Minor"
	wait 1
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("RightHalf") )+[250,30]
	
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")

end LogOut_LoginAsDC_EditSeverityToMinor




//E2EQMS-TS011-FP-DV
to handle Edit_GeneralInformation_VerifyGRIIndexNonEditable

NavigateToSectionFromLeftPane "General Information"

if ImageFound(image:"GRIIndex", waitFor:10,searchrectangle:ScreenPart("LeftHalf"))  //need to take image
		Click imageName:"Cancel", waitFor:30
		
		Put "GRI Index field is not editable" into  global Vstep
		Log  global Vstep
		CaptureAtLog
	else
		Put "GRI Index field is editable" into  global Vstep
		LogError  global Vstep
		CaptureAtLog
		//
	end if

end Edit_GeneralInformation_VerifyGRIIndexNonEditable

to handle Edit_GeneralInformation_GRIIndex

		NavigateToSectionFromLeftPane "General Information"
		click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
		Click ImageLocation(text:"GRI Index")+[100,0]
		TypeText "test"

		Put "GRI Index field is updated successfully" into global Vstep
		
		Log global Vstep
		
		W_App_CommonHandlers.CaptureAtLog
		
		
		Click (text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		
		
end Edit_GeneralInformation_GRIIndex

to handle OpenDev_Edit_GeneralInformation_GRIIndex

ClickRecordIdHyperLinkfromTaskPage
Edit_GeneralInformation_GRIIndex

end OpenDev_Edit_GeneralInformation_GRIIndex

to handle EditInvestigationSummary_CAPAProgramSection

	NavigateToInvestigationSummary	
	EditInvestigationSummary	
	
	NavigateToCapaRequirements
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	
end EditInvestigationSummary_CAPAProgramSection

to handle LogOut_LoginAs_DC_VerifyTask

LogOut
LoginToApplication_DC
NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning

end LogOut_LoginAs_DC_VerifyTask

to handle NavigateHomePage_VerifyTask_PendingFunctionApproval_Dev

	NavigateHomePage_VerifyTask "Pending Function Approval"
	
end NavigateHomePage_VerifyTask_PendingFunctionApproval_Dev

to handle to handle NavigateHomePage_VerifyTask_PendingQualityApproval_Dev

	NavigateHomePage_VerifyTask "Pending Quality Approval"
	
end NavigateHomePage_VerifyTask_PendingQualityApproval_Dev

to handle LogOut_LoginAs_FA_VerifyTask

LogOut
LoginToApplication_FA
NavigateHomePage_VerifyTask_PendingFunctionApproval_Dev

end LogOut_LoginAs_FA_VerifyTask

to handle OpenDev_VerifyCreateOption_MA

ClickRecordIdHyperLinkfromTaskPage
NavigateToMitigationAction
CreateButtonNotAvailable

end OpenDev_VerifyCreateOption_MA

to handle VerifyCreateOption_Inv

NavigateToInvestigationAction
CreateButtonNotAvailable

end VerifyCreateOption_Inv

to handle VerifyCreateOption_CAPAItem

NavigateToCapaItems
CreateButtonNotAvailable

end VerifyCreateOption_CAPAItem

to handle ProgressDev_FromFunction_ToQualityApproval

Dev_PendingFunctionApproval_Complete
Dev_PendingFunctionApproval_Verdict
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end ProgressDev_FromFunction_ToQualityApproval

to handle LogOut_LoginAs_QA_VerifyTask

LogOut
LoginToApplication_QA
NavigateHomePage_VerifyTask_PendingQualityApproval_Dev

end LogOut_LoginAs_QA_VerifyTask

to handle OpenDev_VerifyCreateOption_MA_QA

ClickRecordIdHyperLinkfromTaskPage
NavigateToMitigationAction
CreateButtonNotAvailable

end OpenDev_VerifyCreateOption_MA_QA

to handle VerifyCreateOption_Inv_QA

NavigateToInvestigationAction
CreateButtonNotAvailable

end VerifyCreateOption_Inv_QA

to handle VerifyCreateOption_CAPAItem_QA

NavigateToCapaItems
CreateButtonNotAvailable

end VerifyCreateOption_CAPAItem_QA

to handle ProgressDev_FromQuality_ToClosedApproved

Dev_PendingQualityApproval_Complete
PendingQualityApproval_Verdict_Dev
VerifyLifeCycleState_ClosedApproved

end ProgressDev_FromQuality_ToClosedApproved

to handle NavigateToSupplementaryInfo

NavigateToSectionFromLeftPane "Supplementary Information"

end NavigateToSupplementaryInfo

to handle VerifyLifeCycleState_SupplementaryInformation
	VerifyLifeCycleState "Supplementary Information"
end VerifyLifeCycleState_SupplementaryInformation





//E2EQMS-TS025-FP-DV
to handle CreateDeviation_VerifyErrorToFillImpactedITSystem

	try
		SelectingQMSProcess
		(*Put "Systems / Software" into global DvTypeOfIncident*)
		
		wait 4
		
		Click text:"+ Create", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Click imagelocation(text:"Title", waitFor:50,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Site"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		//Impacted Location
				
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "SKU"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		
		
		Put "Originator Deviation Created Successfully without Impacted IT System(s)" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	if ImageFound(text:"Impacted IT System(s) must be populated if Type of Incident is Systems / Software", waitFor:10,searchrectangle:ScreenPart("LeftHalf"))
		//Click imageName:"Cancel", waitFor:30
		
		Put "Error message displayed for Impacted IT System(s) field" into  global Vstep
		Log  global Vstep
		CaptureAtLog
	else
		Put "Error message not displayed for Impacted IT System(s) field" into  global Vstep
		LogError  global Vstep
		CaptureAtLog
		//
	end if
		
	

end CreateDeviation_VerifyErrorToFillImpactedITSystem

to handle FillImpactedITSystemFiled

	Click ImageLocation(text:"Impacted IT System",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
		Typetext "TrackWise", return
		
	Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
		
		Put "Originator Deviation Created Successfully with Impacted IT System(s)" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog

end FillImpactedITSystemFiled

to handle EditImpactedITSystemField

click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")

Click ImageLocation(text:"Impacted IT System",SearchRectangle:ScreenPart("RightHalf"))+[200,30]
Typetext "Agility", return

Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
	
	Put "Other new value added to Impacted IT System(s)" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog


end EditImpactedITSystemField

to handle EditImpactedITSystemField_NonGxP

click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")

Click ImageLocation(text:"Impacted IT System",SearchRectangle:ScreenPart("RightHalf"))+[200,30]
Typetext "Non", return

TypeText tabKey
TypeText "Test"

Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
	
	Put "Non-Gxp value added to Impacted IT System(s)" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog

end EditImpactedITSystemField_NonGxP

to handle EditExternalReferences_Hyperlink

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")

	click imagelocation(text:"External References",searchrectangle:ScreenPart("RightHalf"),waitfor:30)+(200,0)
			Typetext"https://login.veevavault.com/auth/login"
			
	Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
	
	Put "Hyperlink inserted into External References field" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog


end EditExternalReferences_Hyperlink

to handle AssignUser_DC_InProgress

AssignUser_Teams_DeviationCoordinator
VerifyLifeCycleState_INPROGRESS

end AssignUser_DC_InProgress

to handle OpenDev_VerifyThreeFieldsEditable

ClickRecordIdHyperLinkfromTaskPage

click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")

if ImageFound(imageName:"NonGxPValue", waitFor:20) and if ImageFound(imageName:"ImpactedITSystemValue", waitFor:20) and if ImageFound(text:"veevavault.com", waitFor:20)
	Put "Impacted IT Systems, Non-Gxp and External References fields are editable" into global Vstep
	Logerror global Vsteps
		CaptureAtLog
else
	Put "Impacted IT Systems, Non-Gxp and External References fields are not editable" into global Vstep
	log global Vstep
		CaptureAtLog
			
end if

Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))

end OpenDev_VerifyThreeFieldsEditable






//E2EQMS-TS041a-FP-CI
to handle VerifyNewDateNotUpdatedIn_GeneralInformation

	NavigateToSectionFromLeftPane"General Information"
	if ImageFound(text: global NewDateDue, waitFor:30,searchrectangle:[ImageLocation(text:"Date Due")+[-125,-10],ImageLocation(text:"Date Due")+[180,200]])
		put "DateDueExtensionUpdatedSuccessfully" into global Vstep
		LogError global Vstep
		CaptureAtLog
		
	else
		put "DateDueExtensionUpdatedUnSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
	end if
	
ScrollWheelUp 20

end VerifyNewDateNotUpdatedIn_GeneralInformation

to handle SearchRecord_OpenDateDueExtension

SearchRecord
VerifyLifeCycleState_ClosedApproved
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS
NavigateToSectionFromLeftPane"Date Due Amendment"
OpenDateDueExtension

end SearchRecord_OpenDateDueExtension

to handle VerifyDateDueExtension_Task_CompleteTask

	try
		if ImageFound(text:"Deviation Date Due Amendment",Searchrectangle:ScreenPart("TopLeftQuadrant"))
		wait 1
		put "The Task available to Complete" into global Vstep
		
		log global Vstep
		CaptureAtLog	
		
		CompleteDateDueExtensionTask
		
		end if
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try

end VerifyDateDueExtension_Task_CompleteTask

to handle OpenDev_VerifyNewDateDue_GeneralInformation

click ImageLocation(text:"Deviation ID")+[70,0]

NavigateToSectionFromLeftPane"General Information"
//click ImageLocation(text:"Date Due Changed to")
	if ImageFound(text:global NewDateDue, waitFor:30,searchrectangle:ScreenPart("Center"))
			put "DateDue Updated Successfully and Verified in General Information" into global Vstep
			Log global Vstep
			CaptureAtLog
			
	else
			put "DateDue not updated in General Information" into global Vstep
			LogError global Vstep
			CaptureAtLog
	end if
	
	ScrollWheelUp 20

end OpenDev_VerifyNewDateDue_GeneralInformation

to handle OpenDateDueExtension_VerifyFromDate

OpenDateDueExtension

	if ImageFound(text:global DeviationDateDue, waitFor:30,searchrectangle:ScreenPart("Center"))
			put "DateDue Changed From Date is visible on the screen" into global Vstep
			Log global Vstep
			CaptureAtLog
			
	else
			put "DateDue Changed From Date is not visible on the screen" into global Vstep
			LogError global Vstep
			CaptureAtLog
	end if

end OpenDateDueExtension_VerifyFromDate

to handle FromLogin_AO_CreateDateDueExtension_LogOut

LoginToApplication_ActionOwner

//SearchRecord
	try
		wait 4
		//	Put "Deviation" into RecordId
		Click text:"QMS Processes", waitFor:60,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		click text:global RecordType, SearchRectangle:[bottomLeft of Imagerectangle(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[-25,0],imagelocation(text:"QMS Processes",SearchRectangle:ScreenPart("TopLeftQuadrant"))+[163,223]],waitfor:50

		wait 4
		click text:"All",waitfor:100,searchrectangle:[RemoteScreenSize()*[0,0.05],RemoteScreenSize()*[0.08,0.2]]
		wait 2
		(*Put "List of "&global RecordType&"s should be displayed" into global Vstep
		Log global Vstep
		CaptureAtLog*)
		
		Click imageName:"SearchboxNew", waitFor:30,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		//TypeText global RecordId
		TypeText RecordId
		TypeText return
		// open the record
		wait 4
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		WaitFor 80, text:"Record ID"
		
		
		if imagefound(text:RecordId, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]])
			
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			Click FoundImageLocation()
		else if ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]) is not empty
			put ReadText(bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76])into DRID
			put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog
			click text:DRID, waitFor:50,SearchRectangle:[bottomLeft of imagerectangle(text:"Record ID"),ImageLocation(text:"Record ID")+[154,76]]
			
		end if
		
		
		if ImageFound(text:"General Information", waitFor:50)
			Put"Corresponding "&global RecordType&" General Information page should be displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put"Corresponding "&global RecordType&" General Information page not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		W_App_CommonHandlers.CaptureAtLog
		
	End try
	
VerifyLifeCycleState_ClosedApproved
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
CreateDateDueExtension_VerifyError_ToFillMandatoryFields
CreateDateDueExtension_FillMandatoryFields
VerifyNewDateNotUpdatedIn_GeneralInformation
LogOut_LoginToApplication_QA
SearchRecord_OpenDateDueExtension
VerifyDateDueExtension_Task_CompleteTask
OpenDev_VerifyNewDateDue_GeneralInformation
OpenDateDueExtension_VerifyFromDate
LogOut

end FromLogin_AO_CreateDateDueExtension_LogOut





//E2EQMS-TS046a-FP-DV
to handle CreateDeviation_MedicalDevice_Yes

	try
		SelectingQMSProcess
		
		wait 4
		
		Click text:"+ Create", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Click imagelocation(text:"Title", waitFor:50,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Related QMS Element
		//Related QMS Element
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		//Typetext global DvRelatedQMSElement
		//wait 2
		//Click imagelocation( text:"Related QMS Element", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Site"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		
		//Relates to Medicine / Medical Device
		Click ImageLocation(text:"Yes",SearchRectangle:ScreenPart("RightHalf"))
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "SKU"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
			
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
				
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try

end CreateDeviation_MedicalDevice_Yes

to handle LogOut_LoginAsDC_OpenDevFromHome

LogOut
LoginToApplication_DC
NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning
ClickRecordIdHyperLinkfromTaskPage

end LogOut_LoginAsDC_OpenDevFromHome

to handle EditEstimatedSeverity_ToMajor_CreateDateDueExtension

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Estimated Severity
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Major" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
	
	DateDueExtension_NotUpdatedDateDue

end EditEstimatedSeverity_ToMajor_CreateDateDueExtension

to handle LogOut_LoginAsDC_EditEstimatedSeverityToCritical

LogOut
LoginToApplication_DC

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	//Estimated Severity
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[200,0]
	Typetext ControlKey, a
	Typetext Backspace
	TypeText "Critical" , return
	Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("RightHalf"))+[240,27]
	click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")
		

end LogOut_LoginAsDC_EditEstimatedSeverityToCritical

to handle LogOut_LoginAsDC_EditMedicalDevices_No

LogOut
LoginToApplication_DC

click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")

Click ImageLocation(text:"No",SearchRectangle:ScreenPart("RightHalf"))

click text:"Save",SearchRectangle:ScreenPart("TopRightQuadrant")

end LogOut_LoginAsDC_EditMedicalDevices_No

to handle VerifyDateDueExtension_FilledFields  //need to implement

//OpenDateDueExtension


end VerifyDateDueExtension_FilledFields








//E2EQMS-TS001-DR-DV
to handle CreateDeviation_FinishedProduct

	try
		SelectingQMSProcess
		
		wait 4
		
		Click text:"+ Create", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		
		Click imagelocation(text:"Title", waitFor:50,searchRectangle:ScreenPart("HorizontalMiddle"))+[200,0]
		Typetext "test"
		Typetext tabKey
		
		Typetext global DeviationDateDue
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]

		Typetext global GBU
		Click imagelocation( text:"Global Business unit", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		Typetext tabKey
		wait 2
		Typetext global DvSourceOfIncident
		wait 2
		Click imagelocation( text:"Source Of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 1
		//Sub-Source of Incident
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Click imagelocation( text:"Sub-Source of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		//Type of Incident
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DvTypeOfIncident
		wait 2
		Click imagelocation( text:"Type of Incident", waitFor:20,SearchRectangle:ScreenPart("Center"))+[200,32]
		wait 2
		Typetext tabKey
		Typetext "Testing"
		Typetext tabKey
		Typetext "Environment"
		TypeText downArrow, return
		Typetext tabKey
		Typetext "Site"
		TypeText downArrow, return
		//Occurrence Date
		//Put "1 April 2021" into global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationOccurrenceDueDate
		Click ImageLocation(text:"Occurrence Date",SearchRectangle:ScreenPart("Center"))+[0,30]
		wait 1
		//Estimated Severity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext global DeviationEstimatedSeverity
		Click ImageLocation(text:"Estimated Severity",SearchRectangle:ScreenPart("Center"))+[240,27]
		
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[200,0]
		Typetext "Batch Specific"
		Click ImageLocation(text:"Brand Specific",SearchRectangle:ScreenPart("Center"))+[240,27]

		Click item 2 of EveryImageLocation(text:"Save", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant"))
		wait 8
		// read deviation record id
		put ReadText([imageLocation(text:"Record ID")+[32,-10], imageLocation(text:"Record ID")+[166,15]])  into global VRecordId
		//Log  global VRecordId
		If global GivenRecordId is ""
			set the suitevariables.RecordId to global VRecordId
		else
			set the suitevariables.RecordId to global GivenRecordId
		end if
			
		
		Put "OriginatorDeviationCreatedSuccessfully"& global VRecordId into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
				
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try

end CreateDeviation_FinishedProduct

to handle Add_FinishedProductOject

NavigateToSectionFromLeftPane"Impacted Batches Information"

		Click text:"Add", waitFor:30,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]
		WaitFor 30, text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf")
		click imagelocation(text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf"))+[0,25]
		//Typetext 100599
		//Typetext return
		wait 4
		click imagelocation(text:"Code",SearchRectangle:ScreenPart("Center"))+[0,31]
		wait 2
		click imagelocation(text:"Cancel",waitfor:50,searchrectangle:ScreenPart("BottomHalf"))+[40,0] //Clicking OK

		wait 2
		Put "AssociatedProductAddedSuccessfully" into global Vstep
		Log global Vstep
		CaptureAtLog
		ScrollWheelUp 30
		wait 3

end Add_FinishedProductOject


OpenChildRecord_withObjectReference



to handle VerifyCreateButton_ProuctBatchPopup

click ImageLocation(text:"CAPA Program")+[70,0]
NavigateToSectionFromLeftPane"Impacted Batches Information"

Click text:"Add", waitFor:30,SearchRectangle:[RemoteScreenSize()*[0,0.23],RemoteScreenSize()]
	WaitFor 30, text:"Use Search Bar",SearchRectangle:ScreenPart("TopHalf")

	if ImageFound(text:"Create", waitFor:20),SearchRectangle:ScreenPart("LeftHalf")
			Put "Create button is present in the popup" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Create button is not present in the popup" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if


end VerifyCreateButton_ProuctBatchPopup

to handle ClickCreate_VerifyErrorMessageToFillFields

Click text:"Create", waitFor:50,searchRectangle:ScreenPart("LeftHalf")
WaitFor 30, text:"Create Manufactured Batch",SearchRectangle:ScreenPart("TopHalf")

click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))

	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Lot # / Batch #"),topleft of imageRectangle(text:"Lot # / Batch #")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Lot # / Batch #" into ErrorMessagesDisplayForFields
	else
		insert "Lot # / Batch #" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Product"),topleft of imageRectangle(text:"Product")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Product" into ErrorMessagesDisplayForFields
	else
		insert "Product" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Site"),topleft of imageRectangle(text:"Site")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Site" into ErrorMessagesDisplayForFields
	else
		insert "Site" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	//Click text:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomHalf")



end ClickCreate_VerifyErrorMessageToFillFields













































//E2EQMS-TS043-FP-CI
to handle Pr_dev_ApprovedPendingMitigation

	Put "RecordId fetching from testdate file"  into global Vstep
	Log global Vstep
	
end Pr_dev_ApprovedPendingMitigation

to handle SearchRecord_OpenCAPA_WorkInProgress

SearchRecord
VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end SearchRecord_OpenCAPA_WorkInProgress

to handle OpenMitigationActionRecord

SearchRecord
NavigateToMitigationAction
OpenRecord_Draft

end OpenMitigationActionRecord

to handle AssignAO_INPROGRESS

	AssignUser_Teams_MAActionOwner	
	VerifyLifeCycleState_INPROGRESS
	
end AssignAO_INPROGRESS

to handle LogOut_LoginAsAO_CompleteMA

LogOut
LoginToApplication_ActionOwner
SearchRecord
NavigateToMitigationAction
OpenRecord_Inprogress
CompleteMitigationAction
VerifyLifeCycleState_CLOSEDCOMPLETE
LogOut

end LogOut_LoginAsAO_CompleteMA

to handle VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL

VerifyLifeCycleState "Pending Mitigation Approval"

end VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL

to handle VerifyDev_CAPAProgram_CAPAItemStates

SearchRecord
VerifyLifeCycleState_PENDINGMITIGATIONAPPROVAL
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end VerifyDev_CAPAProgram_CAPAItemStates

to handle ProgressDev_VerifyCAPA_States

ProgressDev_FromQuality_ToClosedApproved
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end ProgressDev_VerifyCAPA_States

to handle ReassignAO_WhenCAPAIsWorkInProgressState
	W_App_CommonHandlers.ReassignTaskToOtherUser "Nutrition CP 2 Action Owner"
end  ReassignAO_WhenCAPAIsWorkInProgressState

to handle LoginToApplication_ActionOwner_New

LoginToApplication "ActionOwner.capa.2.N@sb-rb.com","rbQone@2test"

end LoginToApplication_ActionOwner_New

to handle LoginToApplication_ActionOwner_OpenCAPAItem

LogOut
LoginToApplication_ActionOwner_New
SearchRecord
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end LoginToApplication_ActionOwner_OpenCAPAItem

to handle LogOut_LoginAs_CAPACoordinator_OpenCAPAItem

LogOut
LoginToApplication_CapaProgramCoordinator
SearchRecord
NavigateToCapaItems
OpenRecord_CI_PendingReview
VerifyLifeCycleState_PENDINGREVIEW

end LogOut_LoginAs_CAPACoordinator_OpenCAPAItem

to handle OpenSupplymentaryInfo_updatefields

	OpenChildRecord_withSupplementary	
	AttachFile_CommentsField

end OpenSupplymentaryInfo_updatefields

to handle VerifyAuditTrial_ForallSupplementaryInfo //need to implement


end VerifyAuditTrial_ForallSupplementaryInfo






//E2EQMS-TS030-FP-CP
to handle SearchRecord_OpenCAPAProgram_ReassignCAPACoordinator

SearchRecord
NavigateToCapaProgram
OpenRecord_CP_InExecution
ReassignCAPAProgramCoordinator_WhenCAPAIsInExecution

end SearchRecord_OpenCAPAProgram_ReassignCAPACoordinator

to handle ReassignCAPAProgramCoordinator_WhenCAPAIsInExecution
	W_App_CommonHandlers.ReassignTaskToOtherUser "Nutrition CP 2 CAPA Program Coordinator"
end  ReassignCAPAProgramCoordinator_WhenCAPAIsInExecution

to handle NavigateToCAPAItems_VerifyCAPACoordinator

NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 3
		WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//Click imagelocation(text:Role,searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,3)
		
		if ImageFound(text:"Nutrition CP 2 CAPA Program Coordinator", waitFor:20),SearchRectangle:ScreenPart("LeftHalf")
			Put "New CAPA Coordinator has cascaded down to the CAPA Item record" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "New CAPA Coordinator has not cascaded down to the CAPA Item record" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
		

end NavigateToCAPAItems_VerifyCAPACoordinator

to handle LogOut_LoginAsAO_ProgressCAPAItem_PendingReview

LogOut
LoginToApplication_ActionOwner
SearchRecord
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS
CompleteTheAction_CapaItem
VerifyLifeCycleState_PENDINGREVIEW

end LogOut_LoginAsAO_ProgressCAPAItem_PendingReview

to handle LogOut_LoginAsCAPACoordinator_VerifyTask_HomePage

LogOut
LoginToApplication_CapaProgramCoordinator_New
NavigateHomePage_VerifyTask_ReviewTheCompletedAction

end LogOut_LoginAsCAPACoordinator_VerifyTask_HomePage

to handle NavigateHomePage_VerifyTask_ReviewTheCompletedAction	
	
	NavigateHomePage_VerifyTask "Review the completed action"
	
end NavigateHomePage_VerifyTask_ReviewTheCompletedAction

to handle LoginToApplication_CapaProgramCoordinator_New

LoginToApplication "Coordinator.capa.2.N@sb-rb.com",global CPCpassword

end LoginToApplication_CapaProgramCoordinator_New

to handle OpenCAPA_ReassignCAPACoordinator_VerifyInCAPAItem

SearchRecord
NavigateToCapaProgram
OpenRecord_CP_InExecution
Reassign_OldCAPAProgramCoordinator_WhenCAPAIsInExecution
NavigateToCapaItems
OpenRecord_CI_PendingReview

		wait 3
		Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
		wait 3
		WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
		//Click imagelocation(text:Role,searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,3)
		
		if ImageFound(text:"Nutrition CP 1 CAPA Program Coordinator", waitFor:20),SearchRectangle:ScreenPart("LeftHalf")
			Put "Old CAPA Coordinator has cascaded down to the CAPA Item record" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Old CAPA Coordinator has not cascaded down to the CAPA Item record" into global Vstep
			Logerror global Vstep
			CaptureAtLog
		end if
	

end OpenCAPA_ReassignCAPACoordinator_VerifyInCAPAItem

to handle Reassign_OldCAPAProgramCoordinator_WhenCAPAIsInExecution
	W_App_CommonHandlers.ReassignTaskToOtherUser "Nutrition CP 1 CAPA Program Coordinator"
end  Reassign_OldCAPAProgramCoordinator_WhenCAPAIsInExecution

to handle LogOut_LoginAsCAPACoordinator_VerifyTask_HomePage_Old

LogOut
LoginToApplication_CapaProgramCoordinator
NavigateHomePage_VerifyTask_ReviewTheCompletedAction

end LogOut_LoginAsCAPACoordinator_VerifyTask_HomePage_Old

to handle OpenCAPA_ProgressToClosed_VerifyCAPAProgramState

	try
		click text:"CAPA Item",Searchrectangle:ScreenPart("TopHalf")
		wait 1
		waitfor 60,text:global TaskName,Searchrectangle:ScreenPart("TopLeftQuadrant")
		put "The Record Id page displayed and the Task available to Complete" into global Vstep
		
		log global Vstep
		CaptureAtLog	
		
		
	Catch theException
		Logerror theException
		CaptureAtLog
		
	End try

ReviewTheCompletedAction_CapaItem
VerifyLifeCycleState_CLOSEDCOMPLETE

click ImageLocation(text:"CAPA Program")+[70,0]

VerifyLifeCycleState_PendingCapaPostApproval

end OpenCAPA_ProgressToClosed_VerifyCAPAProgramState

to handle Reassign_QA_WhenCAPAIsPostApprovalState
	W_App_CommonHandlers.ReassignTaskToOtherUser "Nutrition CP 2 Quality Approver"
end  Reassign_QA_WhenCAPAIsPostApprovalState

to handle VerifyCAPACoordinator_FunctionAndLocation_CAPA  // need to implement


end VerifyCAPACoordinator_FunctionAndLocation_CAPA

to handle VerifyQA_FunctionAndLocation_CAPA  // need to implement


end VerifyQA_FunctionAndLocation_CAPA

to handle LogOut_LoginAsQANew_VerifyTask_CAPAPostApproval

LogOut
LoginToApplication_QA_New
NavigateHomePage_VerifyTask_ReviewPostApprovalOfCAPA_QA

end LogOut_LoginAsQANew_VerifyTask_CAPAPostApproval

to handle LoginToApplication_QA_New
	LoginToApplication "Quality.capa.2.N@sb-rb.com",global QApassword
	
end LoginToApplication_QA_New

to handle NavigateHomePage_VerifyTask_ReviewPostApprovalOfCAPA_QA
	
	NavigateHomePage_VerifyTask "Review & Post-Approval of completed CAPA"
	
end NavigateHomePage_VerifyTask_ReviewPostApprovalOfCAPA_QA








//E2EQMS-TS001-DR-CI
to handle Navigate_UpdateCAPASection

NavigateToCapaRequirements
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")

end Navigate_UpdateCAPASection

to handle Navigate_CreateCapaItem_Create

NavigateToCapaItems
//CreateCapaItem

Click text:"Create", waitFor:50,searchRectangle:ScreenPart("TopLeftQuadrant")

end Navigate_CreateCapaItem_Create

to handle VerifyErrorMessage_ToFillMandatory_CreateCAPAItem

			Put [] into NonMandatoryFields
			Put [] into MandatoryFields
			
			if ImageFound(text:"Title")
				insert "Title" into MandatoryFields
			else
				insert "Title" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Description")
				insert "Description" into MandatoryFields
			else
				insert "Description" into NonMandatoryFields
			end if
			
			if ImageFound(text:"Date Due")
				insert "Date Due" into MandatoryFields
			else
				insert "Date Due" into NonMandatoryFields
			end if
			
			if number of items of DisplayedFields is 3
				Put "Title, Description and Date Due are displayed" into global Vstep
				
				Log global Vstep
				
				CaptureAtLog		
				
			else
				Put "Title, Description and Date Due are not displayed" into global Vstep
				
				Logerror global Vstep
				
				CaptureAtLog
				
			end if
			
			
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Title"),topleft of imageRectangle(text:"Title")+[300,110]]
	if ImageFound(text:"This field is required")
		insert "Title" into ErrorMessagesDisplayForFields
	else
		insert "Title" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Description"),topleft of imageRectangle(text:"Description")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Description" into ErrorMessagesDisplayForFields
	else
		insert "Description" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Date Due"),topleft of imageRectangle(text:"Date Due")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Date Due" into ErrorMessagesDisplayForFields
	else
		insert "Date Due" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 2
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if

end VerifyErrorMessage_ToFillMandatory_CreateCAPAItem

to handle CreateCAPAItem_FillFields

	click ImageLocation(text:"CAPA Program ID",searchrectangle:ScreenPart("Center"))+[150,0]
		
		//CreateCapaProgram Handlers
		CreateCapaProgram*)
		//
		Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext global CapaPlanDateDue
		//Typetext "20 May 2021"
		(*Click ImageLocation(text:"Date Due",SearchRectangle:ScreenPart("Center"))+[0,30]*)
		wait 1
		Click ImageLocation(text:"Title",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Testing"
		Typetext tabkey
		(*Typetext "TestCapaDc"*)
		Click ImageLocation(text:"Item type",SearchRectangle:ScreenPart("Center"))+[100,0]

		//Click text: global CapaItemType,SearchRectangle:ScreenPart("HorizontalMiddle")
		Click text:"Corrective Action",SearchRectangle:ScreenPart("center")
		Click ImageLocation(text:"Description",SearchRectangle:ScreenPart("TopRightQuadrant"))+[100,0]
		Typetext "Testing"
		
		click item 2 of EveryImageLocation(text:"Save",searchRectangle:ScreenPart("center"))
		
		if ImageFound(text:"Proposed Action", waitFor:30,SearchRectangle:ScreenPart("Center"))
			Put "CAPA Item Created Successfully" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "CAPA Item Not Created" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		ScrollWheelUp 50
		
end CreateCAPAItem_FillFields

to handle FillDetails_ProgressDevFrom_InProgressToPendingQuality

	AssignUser_Teams_QA	
	NavigateToRootCauseIdentified	
	CreateRootCausesIdentified

	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord
	
	NavigateToInvestigationSummary	
	EditInvestigationSummary	
	NavigateToAffectedLocationInformation	
	CreateAffectedLocationInformation	
	(*Add_ImpactedProduct*)	
	CompleteInvestigationRCAActionPlan	
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL	

end FillDetails_ProgressDevFrom_InProgressToPendingQuality

to handle LoginAsQA_ProgressDev_ToClosedApproved_LogOut

LoginToApplication_QA
SearchRecord
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
Dev_PendingQualityApproval_Task
VerifyLifeCycleState_ClosedApproved
LogOut

end LoginAsQA_ProgressDev_ToClosedApproved_LogOut

to handle LoginAsAO_OpenCAPAItem_WorkInProgress

LoginToApplication_ActionOwner
SearchRecord
NavigateToCapaItems
OpenRecord_CI_WORKINPROGRESS
VerifyLifeCycleState_WORKINPROGRESS

end LoginAsAO_OpenCAPAItem_WorkInProgress

to handle CompleteTheAction_CapaItem_Complete

	click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 60, text:"Verdict",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Complete The Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
	
	if ImageFound(text:"Complete (send for review)", waitFor:30,SearchRectangle:ScreenPart("Center")) and if ImageFound(text:"Incomplete (closing incomplete)", waitFor:30,SearchRectangle:ScreenPart("Center")) and if ImageFound(text:"Cancel Proposed Action", waitFor:30,SearchRectangle:ScreenPart("Center"))
			Put "All Verdicts displayed in the screen" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "All Verdicts not displayed in the screen" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if 

end CompleteTheAction_CapaItem_Complete

to handle CompleteTheCAPAItem_InComplete_VerifyErrors

CompleteTheAction_CapaItem_WithoutJustificationReason
ErrorMessageFor_WithoutJustificationReason

end CompleteTheCAPAItem_InComplete_VerifyErrors

to handle CompleteTheCAPAItem_SendForReview_VerifyErrors

put "Review" into global CompleteTheActionVerdict

Set the Searchrectangle to [bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Verdict",SearchRectangle:ScreenPart("Center"))+[520,400]]
	if global CompleteTheActionVerdict Contains "Review"
		
		Click text:"Complete"
		wait 1
		//Typetext tabKey
		//Typetext"Testing"
		Set the searchrectangle to []
		Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
		Put "CompleteTheAction_TaskWithoutSummaryCompleted" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	end if
	
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Action Completion Summary"),topleft of imageRectangle(text:"Action Completion Summary")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Action Completion Summary" into ErrorMessagesDisplayForFields
	else
		insert "Action Completion Summary" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if

end CompleteTheCAPAItem_SendForReview_VerifyErrors

to handle FillActionCompletionSummary_CAPAItem_LogOut

	click ImageLocation(text:"Action Completion Summary",searchrectangle:ScreenPart("BottomHalf"))+[20,50] 
	Typetext "test"
	Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant") 
	wait 3
	VerifyLifeCycleState_PENDINGREVIEW
	
	LogOut
	
end FillActionCompletionSummary_CAPAItem_LogOut

to handle LoginAsCAPACoordinator_OpenCAPAItem_WorkInProgress

LoginToApplication_CapaProgramCoordinator
SearchRecord
NavigateToCapaItems
OpenRecord_CI_PendingReview
VerifyLifeCycleState_PENDINGREVIEW

end LoginAsCAPACoordinator_OpenCAPAItem_WorkInProgress

to handle VerifyDemostratesEffectivesness_CAPAItem
		
		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 60, text:"Review The Completed Action",searchrectangle:ScreenPart("Center")
		
		Put Imagelocation(text:"Review The Completed Action",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		//Put "Yes" into global DemonstratesEffectiveness
		//click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]
		
		if ImageFound(text:"Demonstrates Effectiveness", waitFor:30,SearchRectangle:ScreenPart("Center"))
			Put "Demonstrates Effectiveness displayed in the screen" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Demonstrates Effectiveness not displayed in the screen" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if 

end VerifyDemostratesEffectivesness_CAPAItem

to handle ReviewTheCapaItem_withoutDemonstrates_VerifyError

		Put "Review Complete" into global ReviewTheCompletedActionVerdict
		
		click {text:global ReviewTheCompletedActionVerdict,SearchRectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")),RemoteScreenSize()]}
		wait 1
		Typetext tabkey
		Typetext "Test"
		
		Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
		if global ReviewTheCompletedActionVerdict contains "Review Complete"
			Put "ReviewTheCompletedAction_TaskWithVerdictCompleted without DemonstratesEffectiveness" into global Vstep
		else if global ReviewTheCompletedActionVerdict contains "Further Action Required"
			Put "ReviewTheCompletedAction_TaskWithVerdictFurthereActionRequired without DemonstratesEffectiveness" into global Vstep
		end if 
		
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
		Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Demonstrates Effectiveness"),topleft of imageRectangle(text:"Demonstrates Effectiveness")+[500,310]]
	if ImageFound(text:"field is required")
		insert "Effectiveness" into ErrorMessagesDisplayForFields
	else
		insert "Effectiveness" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	
	if number of items of ErrorMessagesDisplayForFields is 1
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if
	//Click text:"Cancel", waitFor:10,searchrectangle:ScreenPart("BottomHalf")

end ReviewTheCapaItem_withoutDemonstrates_VerifyError

to handle ReviewTheCapaItem_withoutNextSteps_VerifyError

	Put "No" into global DemonstratesEffectiveness
	click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]
	
	Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
	
	Put "ReviewTheCompletedAction_TaskWithVerdictCompleted without Next Steps" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
end ReviewTheCapaItem_withoutNextSteps_VerifyError

to handle ReviewTheCapaItem_withDemonstrates_Yes_ClosedComplete

	Put "Yes" into global DemonstratesEffectiveness
	click text:global DemonstratesEffectiveness,searchrectangle:[bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center")), bottomLeft of Imagerectangle(text:"Demonstrates Effectiveness",SearchRectangle:ScreenPart("Center"))+[200,100]]
	
	Typetext tabkey
	Typetext "TestNextStep"
	
	Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
	
	Put "ReviewTheCompletedAction_TaskWithVerdictCompleted with Demonstrates Yes" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	VerifyLifeCycleState_CLOSEDCOMPLETE
	LogOut

end ReviewTheCapaItem_withDemonstrates_Yes_ClosedComplete









//E2EQMS-TS047-FP-DV
to handle LogOut_LoginAsDC_VerifyTask_Home

LogOut
LoginToApplication_DC
NavigateHomePage_VerifyTask_InvestigationRCAActionPlanning
ClickRecordIdHyperLinkfromTaskPage

end LogOut_LoginAsDC_VerifyTask_Home

to handle Navigate_EditInvestigationSummary_CAPA

NavigateToInvestigationSummary

//EditInvestigationSummaryWithoutRiskAssessment
	try
		
		click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("Center")
		click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("Center"))+[150,0]
		Typetext backspace,backspace,backspace
		Click text:global RCATool,SearchRectangle:ScreenPart("Center")
		wait 1
		
		
		click imagelocation(text:"Root Cause Analysis Tools",SearchRectangle:ScreenPart("Center"))+[0,30]

		if global RCATool is "no Root Cause"
			click imagelocation(text:"Justification for no RCA tools",SearchRectangle:ScreenPart("Center") )+[150,0]
			Typetext "t"
		end if
		
		//click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("Center") )+[150,0]

		//Typetext backspace,backspace,backspace
		//Typetext global RiskAssessmentTool
		//click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("Center") )+[150,31]
		//click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("Center") )+[0,31]
		//if global RiskAssessmentTool contains "no Risk Assessment"
			//click imagelocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("Center") )+[150,0]
			//Typetext "t"
		//end if
		
		if global ISRepeatOccurrence contains "Yes"
			click text:"Yes",SearchRectangle:ScreenPart("Center")
		else
			click text:"No",SearchRectangle:ScreenPart("Center")
		end if
		
		// not completed
		
		//Investigation Conclusion
		click imagelocation(text:"Investigation Conclusion",SearchRectangle:ScreenPart("Center") )+[200,0]
		Typetext "Test"
		//Potential risk to
		click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("Center") )+[250,0]
		//click text:global PotentialRiskToPatientConsumer,SearchRectangle:ScreenPart("Center")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskToPatientConsumer
		wait 1
		click imagelocation(text:"Potential risk to",SearchRectangle:ScreenPart("Center") )+[250,30]

		wait 1
		//Potential compliance
		click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
		//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialCompliance
		wait 1
		click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,30]


		//Potential risk of impacting
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,0]
		wait 2
		Typetext controlKey,a
		Typetext backspace
		Typetext global PotentialRiskOfImpactingEfficacy
		wait 1
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[250,30]
		wait 1
		click imagelocation(text:"Potential risk of impacting",SearchRectangle:ScreenPart("Center") )+[0,30]
		wait 1
				
		click text:"Save",SearchRectangle:ScreenPart("RightHalf")
		wait 4
				
		Put "Investigation Summary and Conclusion Edited Successfully" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Catch theException
		LogError theException
		W_App_CommonHandlers.CaptureAtLog
		//
	end try

	NavigateToCapaRequirements
	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
end Navigate_EditInvestigationSummary_CAPA

to handle CompleteInvestigationRCA_WithoutRiskAssessmentField

		Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval without Risk assessment Tool" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		if ImageFound(text:"Risk Assessment Tools is not blank", waitFor:30,SearchRectangle:ScreenPart("Center"))
			Put "Error message displayed to fill Risk Assessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Error message not displayed to fill Risk Assessment" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if

end CompleteInvestigationRCA_WithoutRiskAssessmentField

to handle VerifyRiskAssessment_FieldOptions

NavigateToInvestigationSummary

click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")

click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]

	if ImageFound(text:"Built-in tool", waitFor:30,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"Attachment", waitFor:30,SearchRectangle:ScreenPart("LeftHalf")) and if ImageFound(text:"No Risk Assessment Required", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
			Put "Built-in tool, Attachment and No Risk Assessment Required fields are displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Built-in tool, Attachment and No Risk Assessment Required fields are not displayed" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if

end VerifyRiskAssessment_FieldOptions

to handle FillRiskAssessmentTool_VerifyErrorToFillJustification

	Typetext backspace,backspace,backspace
		Typetext "No Risk Assessment Required"
		wait 1
		Typetext return
	click text:"Save",SearchRectangle:ScreenPart("RightHalf")
	
	if ImageFound(text:"Justification needs to be filled in", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
			Put "Error message displayed to fill Justification" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Error message displayed to fill Justification" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if	

end FillRiskAssessmentTool_VerifyErrorToFillJustification

to handle FillRiskAssessmentJustification

click imagelocation(text:"Risk Assessment Justification",SearchRectangle:ScreenPart("Center") )+[150,0]
			Typetext "test"
			
	click text:"Save",SearchRectangle:ScreenPart("RightHalf")
	
	Put "Justification provided for Risk Assessment" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
end FillRiskAssessmentJustification

to handle EditRiskAssessment_Attachment

NavigateToInvestigationSummary

click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")

click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]

Typetext backspace,backspace,backspace
		Typetext "Attachment"
		wait 1
		Typetext return
	click text:"Save",SearchRectangle:ScreenPart("RightHalf")
	
	if ImageFound(text:"Risk Assessment Justification", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
			Put "Risk Assessment Justification field is not displaying" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Risk Assessment Justification field is displaying" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if

end EditRiskAssessment_Attachment

to handle EditRiskAssessment_BuiltIntool

NavigateToInvestigationSummary

click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")

click imagelocation(text:"Risk Assessment tools",SearchRectangle:ScreenPart("LeftHalf") )+[150,0]

Typetext backspace,backspace,backspace
		Typetext "Built-in Tool"
		wait 1
		Typetext return
	click text:"Save",SearchRectangle:ScreenPart("RightHalf")
	
	if ImageFound(text:"Risk Assessment", waitFor:30,SearchRectangle:ScreenPart("LeftHalf"))
			Put "Risk Assessment Section is displaying" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Risk Assessment Section is not displaying" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if

end EditRiskAssessment_BuiltIntool

to handle CompleteInvestigationRCA_WithoutRiskAssessmentSection

		Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval without Risk assessment Tool" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		if ImageFound(text:"Risk Items: At least one record exists", waitFor:30,SearchRectangle:ScreenPart("Center"))
			Put "Error message displayed to fill Risk Assessment section" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Error message not displayed to fill Risk Assessment section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
		end if
		
		click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")

end CompleteInvestigationRCA_WithoutRiskAssessmentSection

to handle CreateRiskAssessment_VerifyErrorToFillMandatoryFields

NavigateToRiskAssessment

	Click text:"Create", waitFor:50,searchRectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 30, text:"Create Change Control Risk Item",searchrectangle:ScreenPart("Center")
	
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		
		Put "Risk Assessment saved without MandatoryFields" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
		
	Put () into ErrorMessagesNotDisplayForFields
	Put () into ErrorMessagesDisplayForFields
	Set the searchrectangle to [topleft of imageRectangle(text:"Risk Description"),topleft of imageRectangle(text:"Risk Description")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Risk Description" into ErrorMessagesDisplayForFields
	else
		insert "Risk Description" into ErrorMessagesNotDisplayForFields
	end if
	
	Set the searchrectangle to ()
	
	Set the searchrectangle to [topleft of imageRectangle(text:"Risk Rating")+[-10,10],topleft of imageRectangle(text:"IRisk Rating")+[250,100]]
	if ImageFound(text:"field is required")
		insert "Risk Rating" into ErrorMessagesDisplayForFields
		
	else
		insert "Risk Rating" into ErrorMessagesNotDisplayForFields
	end if
	Set the searchrectangle to ()
	
	//
	Set the searchrectangle to [topleft of imageRectangle(text:"Risk Response"),topleft of imageRectangle(text:"Risk Response")+[300,110]]
	if ImageFound(text:"field is required")
		insert "Risk Response" into ErrorMessagesDisplayForFields
	else
		insert "Risk Response" into ErrorMessagesNotDisplayForFields
	end if
	Set the searchrectangle to ()
	
	if number of items of ErrorMessagesDisplayForFields is 3
		Put "Error message displayed for all mandatory fields" into global Vstep
		
		Log global Vstep
		
		CaptureAtLog
		
	else
		Put "Error message not displayed for "&ErrorMessagesNotDisplayForFields&" mandatory fields" into global Vstep
		
		Logerror global Vstep
		
		CaptureAtLog
		
		
	end if

		
end CreateRiskAssessment_VerifyErrorToFillMandatoryFields

to handle CreateRiskAssessment_FillMandatoryFields
	
		click ImageLocation(text:"Risk Description",searchrectangle:ScreenPart("Center"))+[100,0]
		Typetext"TestDsc"
		Typetext tabKey
		//Click ImageLocation(text:"Risk Rating",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext "Medium"
		wait 1
		Typetext downArrow, return
		Click ImageLocation(text:"Risk Response",SearchRectangle:ScreenPart("Center"))+[100,0]
		Typetext"Test"
		wait 1
		
		click item 2 of everyimagelocation( text:"Save",SearchRectangle:ScreenPart("Center"))
		
		Put "Risk Assessment saved with MandatoryFields" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
				
		NavigateToSectionFromLeftPane "General Information"
		ScrollWheelUp 30

end CreateRiskAssessment_FillMandatoryFields

to handle OpenRiskAssessment_VerifyFieldsEditable

OpenRiskAssessment
EditButtonAvailable

end OpenRiskAssessment_VerifyFieldsEditable

to handle OpenRiskAssessment

NavigateToRiskAssessment

		waitfor 50,text:"Show in tab",Searchrectangle:ScreenPart("TopHalf")
		
		if imagefound(text:"Risk ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			click imagelocation(text:"Risk ID",Searchrectangle:ScreenPart("TopLeftQuadrant"))+[-9,38]
			
			wait 2
			waitfor 50,text:"Details",Searchrectangle:ScreenPart("TopLeftQuadrant")
			Put "Child records Details page displayed" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		else
			Put "Child records are not availablein the section" into global Vstep
			LogError global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if

end OpenRiskAssessment

to handle OpenDev_CreateMA

click ImageLocation(text:"Deviation ID")+[70,0]

NavigateToMitigationAction
CreateMitigationActions

end OpenDev_CreateMA

to handle OpenRiskAssessment_EditMAReference

OpenRiskAssessment

//EditMAReference
click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")

click imagelocation(text:"Mitigation Action Reference",SearchRectangle:ScreenPart("RightHalf") )+[150,0]
TypeText downArrow, return

click text:"Save",SearchRectangle:ScreenPart("RightHalf")

end OpenRiskAssessment_EditMAReference

to handle OpenDev_AssignFA_ProgressToPendingFunctionApproval

click ImageLocation(text:"Deviation ID")+[70,0]

AssignUser_Teams_FA

		Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "Yes" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
end OpenDev_AssignFA_ProgressToPendingFunctionApproval

to handle LogOut_LoginAsFA_ProgressDevToQualityApproval

LogOut
LoginToApplication_FA
SearchRecord
OpenRiskAssessment
EditButtonNotAvailable
SearchRecord
Dev_PendingFunctionApproval_Complete
Dev_PendingFunctionApproval_Verdict
VerifyLifeCycleState_PENDINGQUALITYAPPROVAL

end LogOut_LoginAsFA_ProgressDevToQualityApproval

to handle LogOut_LoginAsQA_VerifyEditButton_RiskAssessment

LogOut
LoginToApplication_QA
SearchRecord
OpenRiskAssessment
EditButtonNotAvailable

end LogOut_LoginAsQA_VerifyEditButton_RiskAssessment







//E2EQMS-TS017-FP-DV
to handle Navigate_VerifyCAPARequiredField

NavigateToCapaRequirements

	if ImageFound(imageName:"CAPARequiredYes", waitFor:30)		//need to take image
			Put "CAPA required is displayed as Yes by default" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "CAPA required is not displayed as Yes by default" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if

end Navigate_VerifyCAPARequiredField

to handle EditCAPARequirements_withoutJustification

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "No" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)

	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")

end EditCAPARequirements_withoutJustification

to handle Dev_VerifyError_JustificationForNotRaisingCAPA 

		Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
	
	if ImageFound(text:"Justification for not raising CAPA is not blank", waitFor:30,Searchrectangle:ScreenPart("Center"))
			Put "Error prompt to fill Justification for not raising CAPA is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error prompt to fill Justification for not raising CAPA is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if	
	click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")

end Dev_VerifyError_JustificationForNotRaisingCAPA

to handle ProvideJustificationForCAPA_ProgressToQualityApproval

NavigateToCapaRequirements

click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")

	click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
	Typetext "Test"
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	Put "CAPA Program Not Required Selected with Justification" into global Vstep
	Log global Vstep
	W_App_CommonHandlers.CaptureAtLog
	
	Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
			Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog

end ProvideJustificationForCAPA_ProgressToQualityApproval

to handle Dev_CancelTask_FromQualityApproval_ToInProgress

CancelTask_FromCogWheel_WorkFlowTimeLine
VerifyLifeCycleState_INPROGRESS

emd Dev_CancelTask_FromQualityApproval_ToInProgress

to handle EditCAPARequirements_ExistingCAPAYes

NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "Yes" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	Put "Existing CAPA selected as Yes" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog

end EditCAPARequirements_ExistingCAPAYes

to handle Dev_ProgressToQualityApproval_VerifyCAPAProgramNotBlank

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
	if ImageFound(text:"CAPA Program is not blank", waitFor:30,Searchrectangle:ScreenPart("Center"))
			Put "Error prompt for CAPA Program is not blank is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error prompt for CAPA Program is not blank is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if	
	click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")		

end Dev_ProgressToQualityApproval_VerifyCAPAProgramNotBlank

to handle EditCAPARequirements_SelectExistingCAPA

NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	
	click ImageLocation(text:"CAPA Program")+[120,0]
	TypeText downArrow, return
	
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
	
	Put "CompleteInvestigationRCAActionPlan Task completed as Submit for approval" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog

end EditCAPARequirements_SelectExistingCAPA

to handle Dev_CancelTask_FromQA_ToInProgress

CancelTask_FromCogWheel_WorkFlowTimeLine
VerifyLifeCycleState_INPROGRESS

emd Dev_CancelTask_FromQA_ToInProgress 

to handle EditCAPARequirements_ExistingCAPANo

NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	
	Put "Existing CAPA selected as No" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	if ImageFound(text:"CAPA Item", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "CAPA Item section displayed upon selecting Existing CAPA as No" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "CAPA Item section not displayed upon selecting Existing CAPA as No" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
	
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")

end EditCAPARequirements_ExistingCAPANo

to handle Dev_ProgressToQA_VerifyCAPAItemShouldExist

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
	if ImageFound(text:"CAPA Items: At least one record exists", waitFor:30,Searchrectangle:ScreenPart("Center"))
			Put "Error prompt for CAPA Item is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error prompt for CAPA Item is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if	
	click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")		

end Dev_ProgressToQA_VerifyCAPAItemShouldExist

to handle EditCAPARequirements_CAPARequiredNo_FinalSeverityMajor

NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "No" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	//put "No" into global ExistingCapaProgramRequired
	//click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
NavigateToInvestigationSummary

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Major"
	wait 1
	Typetext tabKey,return
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	Put "Capa Required changed to No and Final Severity changed to Major" into global Vstep
		Log global Vstep
		CaptureAtLog
	
end EditCAPARequirements_CAPARequiredNo_FinalSeverityMajor

to handle Dev_ProgressToQA_VerifyCAPAError_FinalSeverityMajor

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
	if ImageFound(text:"CAPA Items: At least one record exists", waitFor:30,Searchrectangle:ScreenPart("Center"))  //need to update as not getting error in the application
			Put "Error prompt for CAPA is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error prompt for CAPA is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if	
	click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")		

end Dev_ProgressToQA_VerifyCAPAError_FinalSeverityMajor

to handle EditInvestigationSummary_FinalSeverityCritical
	
NavigateToInvestigationSummary

	click Image:"edit_img",waitfor:40,SearchRectangle:ScreenPart("TopRightQuadrant")
	
	click imagelocation(text:"Potential compliance",SearchRectangle:ScreenPart("Center") )+[250,0]
	//click text:global PotentialCompliance,SearchRectangle:ScreenPart("TopHalf")
	wait 2
	Typetext controlKey,a
	Typetext backspace
	Typetext "Critical"
	wait 1
	Typetext tabKey,return
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	Put "Final Severity changed to Critical" into global Vstep
		Log global Vstep
		CaptureAtLog
	
end EditInvestigationSummary_FinalSeverityCritical

to handle Dev_ProgressToQA_VerifyCAPAError_FinalSeverityCritical

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
	if ImageFound(text:"CAPA Items: At least one record exists", waitFor:30,Searchrectangle:ScreenPart("Center"))  //need to update as not getting error in the application
			Put "Error prompt for CAPA is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error prompt for CAPA is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if	
	click text:"Ok",SearchRectangle:ScreenPart("BottomRightQuadrant")		

end Dev_ProgressToQA_VerifyCAPAError_FinalSeverityCritical

to handle EditCAPARequirements_ExistingCAPANo_CreateCAPAItem

NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]
	
	Put "Existing CAPA selected as No" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
	if ImageFound(text:"CAPA Item", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "CAPA Item section displayed upon selecting Existing CAPA as No" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "CAPA Item section not displayed upon selecting Existing CAPA as No" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
	
	click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
	
	NavigateToCapaItems
	CreateCapaItem
	OpenRecord_ProposedAction
	AssignUser_Teams_ActionOwner

end EditCAPARequirements_ExistingCAPANo_CreateCAPAItem

to handle Dev_ProgressToQA_VerifyCAPAError_FinalSeverityCritical

SearchRecord

	Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
	VerifyLifeCycleState_PENDINGQUALITYAPPROVAL
		

end Dev_ProgressToQA_VerifyCAPAError_FinalSeverityCritical









//E2EQMS-TS014-FP-CP_v2
to handle OpenCAPAItem_VerifyCAPAProgramDetails   // need to implement

	OpenRecord_ProposedAction
	VerifyLifeCycleState_PROPOSEDACTION
	wait 3
	
	click ImageLocation(text:"CAPA Program")+[120,0]
	
	

end OpenCAPAItem_VerifyCAPAProgramDetails

to handle Navigate_VerifyCAPAItem

NavigateToCapaItems

	if ImageFound(text:"Corrective Action", waitFor:30,Searchrectangle:ScreenPart("Center"))
			Put "CAPA Item displayed in the CAPA Item section" into global Vstep
			Log global Vstep
			CaptureAtLog
	else
			Put "CAPA Item displayed in the CAPA Item section" into global Vstep
			LogError global Vstep
			CaptureAtLog
	end if

end Navigate_VerifyCAPAItem

to handle Close_SupplementaryInfo

VerifyLifeCycleState_SupplementaryInformation
SupplementaryInfoTask_ClickComplete
SupplementaryInfoTask_ClickCompleteInPopUp

end Close_SupplementaryInfo

to handle LogOut_LoginAsQA_VerifyAbleToAddAttachments

LogOut
LoginToApplication_QA
VerifyAbleToAddAttachments

end LogOut_LoginAsQA_VerifyAbleToAddAttachments

to handle OpenCAPAProgram_ProgressToClosed

NavigateToCapaRequirements
OpenCapaProgramRecord
CAPAProgram_PostApproval_VerifyCommentsField
VerifyLifeCycleState_CLOSEDCOMPLETE

end OpenCAPAProgram_ProgressToClosed

to handle CAPAProgram_PostApproval_VerifyCommentsField

		click text:"Complete",searchrectangle:ScreenPart("TopRightQuadrant")
		WaitFor 60, text:"Verdict",searchrectangle:ScreenPart("Center")	
		Put Imagelocation(text:"Post-Approval of Completed CAPA",SearchRectangle:ScreenPart("Center")) into dragLocation
		
		put dragLocation+[0,-120] into dropLocation
		Drag dragLocation
		Drop dropLocation
		
		if global Review_PostApproval_Of_CompletedCAPA_Verdict Contains "Quality Post"
			Click text:"Quality Post-Approved", waitFor:50,searchrectangle:ScreenPart("Center")
			
			if ImageFound(text:"Comments*", waitFor:30,Searchrectangle:ScreenPart("Center"))
			Put "Comments field is Mandatory" into global Vstep
			LogError global Vstep
			CaptureAtLog
				else
			Put "Comments field is not Mandatory" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
			
			click imagelocation(text:"User Name",searchrectangle:ScreenPart("Center"))+[0,25]
			Typetext  global QAusername
			
			click imagelocation(text:"Password",searchrectangle:ScreenPart("Center"))+[0,25]
			Typetext  global QApassword
			
			Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"Review_PostApproval_Of_CompletedCAPA_TaskCompletedWithQualityPost-Approved" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
			
			
		else if global Review_PostApproval_Of_CompletedCAPA_Verdict Contains "Re-Opened"
			Click text:"Re-Opened", searchrectangle:ScreenPart("Center")
			Click image:"Complete", waitFor:20,searchrectangle:ScreenPart("BottomRightQuadrant")
			Put"Review_PostApproval_Of_CompletedCAPA_TaskCompletedWithRe-Opened" into global Vstep
			Log global Vstep
			W_App_CommonHandlers.CaptureAtLog
		end if 

end CAPAProgram_PostApproval_VerifyCommentsField

to handle Dev_ProgressToQA_AssignAO_VerifyCAPAProgramState

SearchRecord
NavigateToCapaItems
OpenRecord_ProposedAction
AssignUser_Teams_ActionOwner
SearchRecord

Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("TopRightQuadrant")
		WaitFor 30, text:"Investigation, RCA & Action Planning",searchrectangle:ScreenPart("Center")
		
			Click text:"Submit for approval", waitFor:50,searchRectangle:ScreenPart("Center")
			// FA required or not
			put "No" into global CompleteInvestigationRCA_FArequired
			if global CompleteInvestigationRCA_FArequired is "Yes"
				
				click text:"Yes",searchRectangle:ScreenPart("BottomHalf")
			else
				click text:"No",searchRectangle:ScreenPart("BottomHalf")
			end if
			
			Click text:"Complete", waitFor:50,searchRectangle:ScreenPart("BottomRightQuadrant")
			
NavigateToCapaRequirements
OpenCapaProgramRecord
VerifyLifeCycleState_PendingDevApproval

end Dev_ProgressToQA_AssignAO_VerifyCAPAProgramState

to handle VerifyLifeCycleState_PendingDevApproval
	VerifyLifeCycleState "Pending Deviation Approval" 
end VerifyLifeCycleState_PendingDevApproval







//Validate that: Deviation-Products: At least one record exists


//E2EQMS-TS053-FP-DV
to handle SearchRecord_ProgressToApproval_withoutFormulationObject

SearchRecord
NavigateToAffectedLocationInformation
CreateAffectedLocationInformation
NavigateToRootCauseIdentified
CreateRootCausesIdentified

	OpenRootCausesIdentified
	EditCountermeasureLevel
	SearchRecord

NavigateToInvestigationSummary
EditInvestigationSummary
NavigateToCapaRequirements

	click Image:"edit_img",searchrectangle:ScreenPart("TopRightQuadrant")
	WaitFor 50, text:"Capa Required",searchrectangle:ScreenPart("Center")
	put "Yes" into global Capa_Required
	click text:global Capa_Required(*,searchrectangle:[topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center")),topright of ImageRectangle(text:"CAPA Required",searchrectangle:ScreenPart("Center"))+[250,10]]*)
	if global Capa_Required is "No"
		click imagelocation(text:"Justification for not raising capa",searchrectangle:ScreenPart("Center"))+[150,0]
		Typetext "Test"
		click text:"Save",searchrectangle:ScreenPart("TopRightQuadrant")
		Put "CAPA Program Not Required Selected" into global Vstep
		Log global Vstep
		W_App_CommonHandlers.CaptureAtLog
	end if
	put "No" into global ExistingCapaProgramRequired
	click text:global ExistingCapaProgramRequired,searchrectangle:[topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[0,-10],topright of ImageRectangle(text:"Reference Existing CAPA",searchrectangle:ScreenPart("Center"))+[150,50]]

NavigateToCapaItems
CreateCapaItem
SearchRecord
CompleteInvestigationRCAActionPlan_TaskOpen
CompleteInvestigationRCA_verdict

end SearchRecord_ProgressToApproval_withoutFormulationObject

to handle Add_FormulationDevice_ProgressToQA

	NavigateToFormulationsDevicesSection
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Add_FormulationDevice_ProgressToQA

to handle VerifyErrorToCreate_FormulationObject

	if ImageFound(text:"Deviation-Products: At least one record", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Error Prompt displayed to fill Product information" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Error Prompt not displayed to fill Product information" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if

end VerifyErrorToCreate_FormulationObject

to handle LogOut_LoginAsQA_RegressToInProgress

LogOut
LoginToApplication_QA
SearchRecord
Dev_PendingQualityApproval_Complete
Dev_PendingQualityApproval_Task

end LogOut_LoginAsQA_RegressToInProgress

to handle LogOut_LoginAsDC_OpenDev

LogOut
LoginToApplication_DC
SearchRecord

end LogOut_LoginAsDC_OpenDev

to handle Edit_Dev_GeneralInformation_SKUSpecific_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","SKU Specific"
	
	if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
	
end Edit_Dev_GeneralInformation_SKUSpecific_VerifyBrandsField

to handle VerifyImpactedProductInformationSection

	if ImageFound(text:"Impacted Product Information", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Impacted Product Information section is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Impacted Product Information section is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if

end VerifyImpactedProductInformationSection

to handle Remove_FormulationObject_AddSKU_ProgressToQA

	NavigateToFormulationsDevicesSection
	Remove_ProductObject_RedStatus
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Remove_FormulationObject_AddSKU_ProgressToQA

to handle Edit_Dev_GeneralInformation_SemiFinished_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","Semi-Finished Material"
	
		if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
	
end Edit_Dev_GeneralInformation_SemiFinished_VerifyBrandsField

to handle VerifySemiFinishedSection

	if ImageFound(text:"Semi-Finished Material (incl. Device)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Semi-Finished Material (incl. Device) section is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Semi-Finished Material (incl. Device) section is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if

end VerifySemiFinishedSection

to handle Remove_SKUObject_AddSemiFinished_ProgressToQA

	NavigateToImpactedProductInformationSection
	Remove_ProductObject_RedStatus
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Remove_SKUObject_AddSemiFinished_ProgressToQA

to handle Edit_Dev_GeneralInformation_RawMaterial_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","Raw Material"
	
			if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
	
end Edit_Dev_GeneralInformation_RawMaterial_VerifyBrandsField

to handle VerifyRawMaterialSection

	if ImageFound(text:"Raw Material(s)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Raw Material(s) section is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Raw Material(s) section is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog 
		end if

end VerifyRawMaterialSection

to handle Remove_SemiFinishedObject_RawMaterial_ProgressToQA

	NavigateToSemiFinishedMaterialSection
	Remove_ProductObject_RedStatus
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Remove_SemiFinishedObject_RawMaterial_ProgressToQA

to handle Edit_Dev_GeneralInformation_Packaging_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","Packaging Material"
	
			if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			Log global Vstep
			CaptureAtLog
		end if
	
end Edit_Dev_GeneralInformation_Packaging_VerifyBrandsField

to handle VerifyPackagingSection

	if ImageFound(text:"Packaging Material(s)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Packaging Material(s) section is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Packaging Material(s) section is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
			
		end if

end VerifyPackagingSection

to handle Remove_RawMaterialObject_Packaging_ProgressToQA

	NavigateToRawMaterialSection
	Remove_ProductObject_RedStatus
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Remove_RawMaterialObject_Packaging_ProgressToQA

to handle Edit_Dev_GeneralInformation_BatchSpecificFinished_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","Batch Specific (Finished Product)"
	
			if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		end if
	
end Edit_Dev_GeneralInformation_BatchSpecificFinished_VerifyBrandsField

to handle VerifyBatchSpecificFinishedSection

	if ImageFound(text:"Impacted Batches Information", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Impacted Batches Information section is displayed" into global Vstep
			Log global Vstep
			CaptureAtLog
		else
			Put "Impacted Batches Information section is not displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
	end if			

end VerifyBatchSpecificFinishedSection

to handle Remove_PackagingObject_BatchSpecificFinished_ProgressToQA

	NavigateToRawMaterialSection
	Remove_ProductObject_RedStatus
	Add_ProductObject
	CompleteInvestigationRCAActionPlan_TaskOpen
	CompleteInvestigationRCA_verdict
	
end Remove_PackagingObject_BatchSpecificFinished_ProgressToQA

to handle Edit_Dev_GeneralInformation_BrandRelatedNotProduct_VerifyBrandsField
	Edit_CC_GeneralInformation "Brand Specific","Brand Related (but not product specific)"
	
			if ImageFound(text:"Brand(s)", waitFor:30,Searchrectangle:ScreenPart("RightHalf"))
			Put "Brand(s) field not visible" into global Vstep
			LogError global Vstep
			CaptureAtLog
		else
			Put "Brand(s) field is visible" into global Vstep
			Log global Vstep
			CaptureAtLog
			end if
	
end Edit_Dev_GeneralInformation_BrandRelatedNotProduct_VerifyBrandsField

to handle VerifyNoSectionAvailable

	if ImageFound(text:"Impacted Batches Information", waitFor:30,Searchrectangle:ScreenPart("LeftHalf")) or if ImageFound(text:"Packaging Material(s)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf")) or if ImageFound(text:"Raw Material(s)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf")) or if ImageFound(text:"Semi-Finished Material (incl. Device)", waitFor:30,Searchrectangle:ScreenPart("LeftHalf")) or if ImageFound(text:"Impacted Product Information", waitFor:30,Searchrectangle:ScreenPart("LeftHalf"))
			Put "Sections for Affected Products are displayed" into global Vstep
			LogError global Vstep
			CaptureAtLog
		else
			Put "Sections for Affected Products are not displayed" into global Vstep
			Log global Vstep
			CaptureAtLog 
		end if

end VerifyNoSectionAvailable



to handle VerifyNewTaskOwnerAfterReassigning NewTaskOwner
try
wait 11
Click text:"workflow timeline ", waitFor:120,ignoreSpaces:Yes,SearchRectangle:[remoteScreenSize()*[0,0.1],remoteScreenSize()*[0.3,0.5]]
//NavigateToSectionFromLeftPane "workflow timeline "
wait 15
WaitFor 120, text:"Workflow Timeline"

Put "Workflow Timeline section should be displayed" into global Vstep
set the searchrectangle to []
Log global Vstep
CaptureAtLog
//put "Nutrition CM 2 UAT Action Owner" into NewTaskOwner
Set the SearchRectangle to ["ReAssignCogWheelUL",RemoteScreenSize()]
If imagefound(text:NewTaskOwner)
Log "Task Reassigned Successfully"
CaptureAtLog
else
Logerror "Task not Reassigned Successfully"
end if

set the SearchRectangle to ()
Catch theException
Logerror theException
CaptureAtLog

End try
end VerifyNewTaskOwnerAfterReassigning


to handle AssignUser_Teams_verifyNewTaskUser UserFirstName,Role

try
wait 3
Click text:"Team",searchrectangle:[remotescreensize()*[0,0.2],remotescreensize()*[0.2,1]]
wait 3
WaitFor 120, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
click text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")
wait 2
Click imagelocation(text:Role,searchrectangle:(remotescreensize()*(0.2,0.2),remotescreensize()))+(150,3)
wait 1
Log "Old user present"
CaptureAtLog
Typetext controlkey,a
Typetext Controlkey,c
Put remoteclipboard() into ExistingUser
Typetext backspace
wait 1
Typetext UserFirstName
wait 3
typetext downarrow,return
click text:"Save",Searchrectangle:ScreenPart("TopRightQuadrant")
wait 9
//WaitFor 50, text:"Manage Team",Searchrectangle:ScreenPart("TopRightQuadrant")

if imagefound(text:ExistingUser)
Logerror "New Task owner not updated"
CaptureAtLog
else
Log"New Task owner updated"
CaptureAtLog
end if


Catch theException
Logerror theException
CaptureAtLog

End try

end AssignUser_Teams_verifyNewTaskUser


to handle AssignUser_Teams_verifyNewTaskUser_PFA
	AssignUser_Teams_verifyNewTaskUser global PostFunctionApproverFirstNameofOther,"Function Post-Approver" 
end AssignUser_Teams_verifyNewTaskUser_PFA

to handle VerifyReassignTaskToOtherUser_NewPFAUsername

VerifyNewTaskOwnerAfterReassigning global PostFunctionApproverFirstNameofOther
end VerifyReassignTaskToOtherUser_NewPFAUsername